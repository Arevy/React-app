/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/accounting-integrations.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["accounting-integration"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["accounting-integration-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["accounting-integration"];
					};
				};
			};
		};
	};
	"/accounting-integrations/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["accounting-integration"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["accounting-integration"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/accounting-payloads.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["accounting-payload"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["accounting-payload-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["accounting-payload"];
					};
				};
			};
		};
	};
	"/accounting-payloads/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["accounting-payload"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["accounting-payload"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/address-validations.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["address-validation"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["address-validation-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["address-validation"];
					};
				};
			};
		};
	};
	"/address-validations/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["address-validation"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["address-validation"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/adjustments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["adjustment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["adjustment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["adjustment"];
					};
				};
			};
		};
	};
	"/adjustments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["adjustment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["adjustment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/adjustment-reasons.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["adjustment-reason"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["adjustment-reason-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["adjustment-reason"];
					};
				};
			};
		};
	};
	"/adjustment-reasons/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["adjustment-reason"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["adjustment-reason"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/agreements.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["agreement"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["agreement-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["agreement"];
					};
				};
			};
		};
	};
	"/agreements/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["agreement"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["agreement"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/allowed-tags.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["allowed-tag"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["allowed-tag-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["allowed-tag"];
					};
				};
			};
		};
	};
	"/allowed-tags/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["allowed-tag"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["allowed-tag"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/amazon-accounts.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["amazon-account"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["amazon-account-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["amazon-account"];
					};
				};
			};
		};
	};
	"/amazon-accounts/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["amazon-account"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["amazon-account"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/amazon-account-reports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["amazon-account-report"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["amazon-account-report-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["amazon-account-report"];
					};
				};
			};
		};
	};
	"/amazon-account-reports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["amazon-account-report"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["amazon-account-report"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/big-commerce-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["big-commerce-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["big-commerce-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["big-commerce-store"];
					};
				};
			};
		};
	};
	"/big-commerce-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["big-commerce-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["big-commerce-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/bundle-variants.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["bundle-variant"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["bundle-variant-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["bundle-variant"];
					};
				};
			};
		};
	};
	"/bundle-variants/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["bundle-variant"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["bundle-variant"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/carriers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["carrier"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["carrier-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["carrier"];
					};
				};
			};
		};
	};
	"/carriers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["carrier"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["carrier"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/carrier-pickups.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["carrier-pickup"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["carrier-pickup-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["carrier-pickup"];
					};
				};
			};
		};
	};
	"/carrier-pickups/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["carrier-pickup"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["carrier-pickup"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channels.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel"];
					};
				};
			};
		};
	};
	"/channels/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channels/{id}/manual-sale.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale"];
					};
				};
			};
		};
	};
	"/channels/{id}/import-connector-variant-batch.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant"][];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"][];
					};
				};
			};
		};
	};
	"/channels/{id}/acknowledge-variant.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant"];
					};
				};
			};
		};
	};
	"/channels/{id}/variant-levels.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant"];
					};
				};
			};
		};
	};
	"/channels/{id}/variant-set-level.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant"];
					};
				};
			};
		};
	};
	"/channel-commission-rates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-commission-rate"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-commission-rate-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-commission-rate"];
					};
				};
			};
		};
	};
	"/channel-commission-rates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-commission-rate"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-commission-rate"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-custom-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-custom-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-custom-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-custom-field"];
					};
				};
			};
		};
	};
	"/channel-custom-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-custom-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-custom-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-products.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-product"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-product-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-product"];
					};
				};
			};
		};
	};
	"/channel-products/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-product"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-product"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-shipment-updates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-shipment-update"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-shipment-update-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-shipment-update"];
					};
				};
			};
		};
	};
	"/channel-shipment-updates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-shipment-update"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-shipment-update"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-shipping-rates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-shipping-rate"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-shipping-rate-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-shipping-rate"];
					};
				};
			};
		};
	};
	"/channel-shipping-rates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-shipping-rate"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-shipping-rate"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-variants.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant"];
					};
				};
			};
		};
	};
	"/channel-variants/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-variant-imports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant-import"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant-import-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant-import"];
					};
				};
			};
		};
	};
	"/channel-variant-imports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant-import"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant-import"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/channel-variant-updates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant-update"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant-update-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant-update"];
					};
				};
			};
		};
	};
	"/channel-variant-updates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["channel-variant-update"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["channel-variant-update"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/comments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["comment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["comment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["comment"];
					};
				};
			};
		};
	};
	"/comments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["comment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["comment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/company-clients.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-client"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["company-client-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-client"];
					};
				};
			};
		};
	};
	"/company-clients/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-client"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["company-client"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/company-referrals.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-referral"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["company-referral-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-referral"];
					};
				};
			};
		};
	};
	"/company-referrals/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-referral"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["company-referral"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/company-settings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-setting"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["company-setting-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-setting"];
					};
				};
			};
		};
	};
	"/company-settings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["company-setting"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["company-setting"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/currencies.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["currency"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["currency-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["currency"];
					};
				};
			};
		};
	};
	"/currencies/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["currency"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["currency"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-channels.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-channel"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-channel-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-channel"];
					};
				};
			};
		};
	};
	"/custom-channels/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-channel"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-channel"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field"];
					};
				};
			};
		};
	};
	"/custom-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-dropship-providers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropship-provider"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-dropship-provider-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropship-provider"];
					};
				};
			};
		};
	};
	"/custom-field-dropship-providers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropship-provider"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-dropship-provider"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-dropshipments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropshipment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-dropshipment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropshipment"];
					};
				};
			};
		};
	};
	"/custom-field-dropshipments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropshipment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-dropshipment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-dropshipment-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropshipment-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-dropshipment-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropshipment-item"];
					};
				};
			};
		};
	};
	"/custom-field-dropshipment-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-dropshipment-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-dropshipment-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-purchases.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-purchase"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-purchase-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-purchase"];
					};
				};
			};
		};
	};
	"/custom-field-purchases/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-purchase"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-purchase"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-purchase-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-purchase-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-purchase-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-purchase-item"];
					};
				};
			};
		};
	};
	"/custom-field-purchase-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-purchase-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-purchase-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-resellers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-reseller"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-reseller-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-reseller"];
					};
				};
			};
		};
	};
	"/custom-field-resellers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-reseller"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-reseller"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-sales.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale"];
					};
				};
			};
		};
	};
	"/custom-field-sales/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-sale-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-item"];
					};
				};
			};
		};
	};
	"/custom-field-sale-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-sale-returns.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-return"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-return-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-return"];
					};
				};
			};
		};
	};
	"/custom-field-sale-returns/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-return"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-return"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-sale-return-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-return-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-return-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-return-item"];
					};
				};
			};
		};
	};
	"/custom-field-sale-return-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-sale-return-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-sale-return-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-scopes.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-scope"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-scope-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-scope"];
					};
				};
			};
		};
	};
	"/custom-field-scopes/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-scope"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-scope"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-variants.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-variant"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-variant-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-variant"];
					};
				};
			};
		};
	};
	"/custom-field-variants/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-variant"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-variant"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/custom-field-vendors.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-vendor"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-vendor-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-vendor"];
					};
				};
			};
		};
	};
	"/custom-field-vendors/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["custom-field-vendor"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["custom-field-vendor"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/customers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["customer"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["customer-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["customer"];
					};
				};
			};
		};
	};
	"/customers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["customer"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["customer"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/customer-addresses.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["customer-address"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["customer-address-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["customer-address"];
					};
				};
			};
		};
	};
	"/customer-addresses/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["customer-address"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["customer-address"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/data-exports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-export"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-export-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-export"];
					};
				};
			};
		};
	};
	"/data-exports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-export"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-export"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/data-imports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-import"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-import-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-import"];
					};
				};
			};
		};
	};
	"/data-imports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-import"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-import"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-providers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider"];
					};
				};
			};
		};
	};
	"/dropship-providers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-providers/{id}/settle-invoices.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer"];
					};
				};
			};
		};
	};
	"/dropship-provider-addresses.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-address"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-address-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-address"];
					};
				};
			};
		};
	};
	"/dropship-provider-addresses/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-address"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-address"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-provider-agreements.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-agreement"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-agreement-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-agreement"];
					};
				};
			};
		};
	};
	"/dropship-provider-agreements/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-agreement"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-agreement"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-provider-collections.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-collection"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-collection-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-collection"];
					};
				};
			};
		};
	};
	"/dropship-provider-collections/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-collection"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-collection"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-provider-collection-payloads.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-collection-payload"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-collection-payload-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-collection-payload"];
					};
				};
			};
		};
	};
	"/dropship-provider-collection-payloads/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-collection-payload"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-collection-payload"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-provider-shipping-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-shipping-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-shipping-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-shipping-field"];
					};
				};
			};
		};
	};
	"/dropship-provider-shipping-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider-shipping-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider-shipping-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropship-purchase-imports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-purchase-import"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-purchase-import-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-purchase-import"];
					};
				};
			};
		};
	};
	"/dropship-purchase-imports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-purchase-import"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-purchase-import"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropshipments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment"];
					};
				};
			};
		};
	};
	"/dropshipments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropshipments/{id}/regenerate-label.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment"];
					};
				};
			};
		};
	};
	"/dropshipments/{id}/move-to-fulfill.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["fulfillment"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment"];
					};
				};
			};
		};
	};
	"/dropshipment-imports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment-import"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment-import-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment-import"];
					};
				};
			};
		};
	};
	"/dropshipment-imports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment-import"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment-import"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/dropshipment-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment-item"];
					};
				};
			};
		};
	};
	"/dropshipment-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/duoplane-accounts.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["duoplane-account"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["duoplane-account-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["duoplane-account"];
					};
				};
			};
		};
	};
	"/duoplane-accounts/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["duoplane-account"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["duoplane-account"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/elastic-path-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["elastic-path-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["elastic-path-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["elastic-path-store"];
					};
				};
			};
		};
	};
	"/elastic-path-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["elastic-path-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["elastic-path-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/errors.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["error"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["error-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["error"];
					};
				};
			};
		};
	};
	"/errors/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["error"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["error"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/fulfillments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["fulfillment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment"];
					};
				};
			};
		};
	};
	"/fulfillments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["fulfillment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/fulfillments/{id}/move-to-dropship.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase"];
					};
				};
			};
		};
	};
	"/fulfillment-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["fulfillment-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment-item"];
					};
				};
			};
		};
	};
	"/fulfillment-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["fulfillment-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["fulfillment-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/goods-receipts.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["goods-receipt"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["goods-receipt-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["goods-receipt"];
					};
				};
			};
		};
	};
	"/goods-receipts/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["goods-receipt"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["goods-receipt"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/goods-receipt-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["goods-receipt-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["goods-receipt-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["goods-receipt-item"];
					};
				};
			};
		};
	};
	"/goods-receipt-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["goods-receipt-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["goods-receipt-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/importers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["importer"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["importer-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["importer"];
					};
				};
			};
		};
	};
	"/importers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["importer"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["importer"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-exports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-export"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-export-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-export"];
					};
				};
			};
		};
	};
	"/inventory-exports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-export"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-export"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-exports/{id}/export.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-export"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-export"];
					};
				};
			};
		};
	};
	"/inventory-export-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-export-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-export-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-export-field"];
					};
				};
			};
		};
	};
	"/inventory-export-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-export-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-export-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feeds.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed"];
					};
				};
			};
		};
	};
	"/inventory-feeds/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feeds/{id}/publish-all.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-import"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-import"];
					};
				};
			};
		};
	};
	"/inventory-feeds/{id}/remove-by-external-id.json": {
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant"];
					};
				};
			};
		};
	};
	"/inventory-feed-channels.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-channel"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-channel-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-channel"];
					};
				};
			};
		};
	};
	"/inventory-feed-channels/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-channel"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-channel"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-field"];
					};
				};
			};
		};
	};
	"/inventory-feed-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-files.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-file"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-file-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-file"];
					};
				};
			};
		};
	};
	"/inventory-feed-files/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-file"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-file"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-json-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-json-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-json-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-json-field"];
					};
				};
			};
		};
	};
	"/inventory-feed-json-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-json-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-json-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-mappings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-mapping"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-mapping-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-mapping"];
					};
				};
			};
		};
	};
	"/inventory-feed-mappings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-mapping"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-mapping"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-parameters.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-parameter"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-parameter-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-parameter"];
					};
				};
			};
		};
	};
	"/inventory-feed-parameters/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-parameter"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-parameter"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-price-lists.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-price-list"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-price-list-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-price-list"];
					};
				};
			};
		};
	};
	"/inventory-feed-price-lists/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-price-list"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-price-list"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-products.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-product"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-product-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-product"];
					};
				};
			};
		};
	};
	"/inventory-feed-products/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-product"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-product"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-variants.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-variant-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant"];
					};
				};
			};
		};
	};
	"/inventory-feed-variants/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-variant"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-feed-variants/{id}/publish.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant"];
					};
				};
			};
		};
	};
	"/inventory-feed-variant-connections.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant-connection"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-variant-connection-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant-connection"];
					};
				};
			};
		};
	};
	"/inventory-feed-variant-connections/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-feed-variant-connection"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-feed-variant-connection"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-imports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-import"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-import-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-import"];
					};
				};
			};
		};
	};
	"/inventory-imports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-import"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-import"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-import-fields.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-import-field"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-import-field-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-import-field"];
					};
				};
			};
		};
	};
	"/inventory-import-fields/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-import-field"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-import-field"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-transfers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-transfer-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer"];
					};
				};
			};
		};
	};
	"/inventory-transfers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-transfer"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/inventory-transfer-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-transfer-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer-item"];
					};
				};
			};
		};
	};
	"/inventory-transfer-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-transfer-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/label-payloads.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["label-payload"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["label-payload-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["label-payload"];
					};
				};
			};
		};
	};
	"/label-payloads/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["label-payload"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["label-payload"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/landed-costs.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost"];
					};
				};
			};
		};
	};
	"/landed-costs/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/landed-cost-dropship-providers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-dropship-provider"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-dropship-provider-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-dropship-provider"];
					};
				};
			};
		};
	};
	"/landed-cost-dropship-providers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-dropship-provider"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-dropship-provider"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/landed-cost-purchase-invoices.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-purchase-invoice"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-purchase-invoice-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-purchase-invoice"];
					};
				};
			};
		};
	};
	"/landed-cost-purchase-invoices/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-purchase-invoice"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-purchase-invoice"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/landed-cost-purchase-invoice-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-purchase-invoice-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-purchase-invoice-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-purchase-invoice-item"];
					};
				};
			};
		};
	};
	"/landed-cost-purchase-invoice-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["landed-cost-purchase-invoice-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["landed-cost-purchase-invoice-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/magento-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["magento-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["magento-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["magento-store"];
					};
				};
			};
		};
	};
	"/magento-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["magento-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["magento-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/manifests.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["manifest"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["manifest-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["manifest"];
					};
				};
			};
		};
	};
	"/manifests/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["manifest"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["manifest"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/notes.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["note"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["note-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["note"];
					};
				};
			};
		};
	};
	"/notes/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["note"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["note"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/options.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["option"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["option-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["option"];
					};
				};
			};
		};
	};
	"/options/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["option"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["option"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/option-values.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["option-value"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["option-value-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["option-value"];
					};
				};
			};
		};
	};
	"/option-values/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["option-value"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["option-value"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/payment-methods.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["payment-method"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["payment-method-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["payment-method"];
					};
				};
			};
		};
	};
	"/payment-methods/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["payment-method"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["payment-method"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/platform-shipping-mappings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["platform-shipping-mapping"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["platform-shipping-mapping-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["platform-shipping-mapping"];
					};
				};
			};
		};
	};
	"/platform-shipping-mappings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["platform-shipping-mapping"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["platform-shipping-mapping"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/prices.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["price-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price"];
					};
				};
			};
		};
	};
	"/prices/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["price"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/price-lists.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price-list"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["price-list-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price-list"];
					};
				};
			};
		};
	};
	"/price-lists/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price-list"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["price-list"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/price-updates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price-update"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["price-update-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price-update"];
					};
				};
			};
		};
	};
	"/price-updates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["price-update"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["price-update"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/products.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["product"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["product-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["product"];
					};
				};
			};
		};
	};
	"/products/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["product"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["product"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchases.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase"];
					};
				};
			};
		};
	};
	"/purchases/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchases/{id}/ship.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment"];
					};
				};
			};
		};
	};
	"/purchases/{id}/move-dropship-provider.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase"];
					};
				};
			};
		};
	};
	"/purchases/{id}/send.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase"];
					};
				};
			};
		};
	};
	"/purchases/{id}/return-label.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["return-shipment"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["return-shipment"];
					};
				};
			};
		};
	};
	"/purchases/{id}/default-label.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropshipment"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropshipment"];
					};
				};
			};
		};
	};
	"/purchases/{id}/cancel.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"];
					};
				};
			};
		};
	};
	"/purchase-invoices.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-invoice-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice"];
					};
				};
			};
		};
	};
	"/purchase-invoices/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-invoice"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-invoice-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-invoice-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice-item"];
					};
				};
			};
		};
	};
	"/purchase-invoice-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-invoice-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-invoice-payments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice-payment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-invoice-payment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice-payment"];
					};
				};
			};
		};
	};
	"/purchase-invoice-payments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-invoice-payment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-invoice-payment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-item"];
					};
				};
			};
		};
	};
	"/purchase-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-notifications.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-notification"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-notification-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-notification"];
					};
				};
			};
		};
	};
	"/purchase-notifications/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-notification"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-notification"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-returns.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-return-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return"];
					};
				};
			};
		};
	};
	"/purchase-returns/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-return"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-return-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-return-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return-item"];
					};
				};
			};
		};
	};
	"/purchase-return-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-return-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-return-payments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return-payment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-return-payment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return-payment"];
					};
				};
			};
		};
	};
	"/purchase-return-payments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-return-payment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-return-payment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-shipping-rates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-shipping-rate"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-shipping-rate-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-shipping-rate"];
					};
				};
			};
		};
	};
	"/purchase-shipping-rates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-shipping-rate"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-shipping-rate"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/purchase-statuses.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-status"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-status-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-status"];
					};
				};
			};
		};
	};
	"/purchase-statuses/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["purchase-status"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["purchase-status"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/referrals.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["referral"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["referral-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["referral"];
					};
				};
			};
		};
	};
	"/referrals/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["referral"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["referral"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/resellers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller"];
					};
				};
			};
		};
	};
	"/resellers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/reseller-commissions.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-commission"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-commission-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-commission"];
					};
				};
			};
		};
	};
	"/reseller-commissions/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-commission"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-commission"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/reseller-subscriptions.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-subscription"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-subscription-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-subscription"];
					};
				};
			};
		};
	};
	"/reseller-subscriptions/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-subscription"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-subscription"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/reseller-variants.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-variant"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-variant-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-variant"];
					};
				};
			};
		};
	};
	"/reseller-variants/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["reseller-variant"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["reseller-variant"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/return-shipments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["return-shipment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["return-shipment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["return-shipment"];
					};
				};
			};
		};
	};
	"/return-shipments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["return-shipment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["return-shipment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sales.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale"];
					};
				};
			};
		};
	};
	"/sales/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sales/{id}/post-to-channel.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale"];
					};
				};
			};
		};
	};
	"/sales/{id}/cancel.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return"][];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"][];
					};
				};
			};
		};
	};
	"/sales/{id}/clone.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale"];
					};
				};
			};
		};
	};
	"/sale-discount-codes.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-discount-code"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-discount-code-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-discount-code"];
					};
				};
			};
		};
	};
	"/sale-discount-codes/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-discount-code"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-discount-code"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-imports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-import"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-import-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-import"];
					};
				};
			};
		};
	};
	"/sale-imports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-import"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-import"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-invoices.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-invoice-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice"];
					};
				};
			};
		};
	};
	"/sale-invoices/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-invoice"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-invoice-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-invoice-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice-item"];
					};
				};
			};
		};
	};
	"/sale-invoice-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-invoice-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-invoice-payments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice-payment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-invoice-payment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice-payment"];
					};
				};
			};
		};
	};
	"/sale-invoice-payments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-invoice-payment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-invoice-payment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-item"];
					};
				};
			};
		};
	};
	"/sale-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-item-routings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-item-routing"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-item-routing-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-item-routing"];
					};
				};
			};
		};
	};
	"/sale-item-routings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-item-routing"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-item-routing"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-returns.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"];
					};
				};
			};
		};
	};
	"/sale-returns/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-returns/{id}/weight.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"];
					};
				};
			};
		};
	};
	"/sale-returns/{id}/default-label.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return"];
					};
				};
			};
		};
	};
	"/sale-return-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-item"];
					};
				};
			};
		};
	};
	"/sale-return-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-return-payloads.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-payload"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-payload-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-payload"];
					};
				};
			};
		};
	};
	"/sale-return-payloads/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-payload"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-payload"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-return-payments.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-payment"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-payment-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-payment"];
					};
				};
			};
		};
	};
	"/sale-return-payments/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-return-payment"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-return-payment"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/sale-shipping-rates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-shipping-rate"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-shipping-rate-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-shipping-rate"];
					};
				};
			};
		};
	};
	"/sale-shipping-rates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["sale-shipping-rate"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["sale-shipping-rate"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/saleor-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["saleor-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["saleor-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["saleor-store"];
					};
				};
			};
		};
	};
	"/saleor-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["saleor-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["saleor-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/salesforce-accounts.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["salesforce-account"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["salesforce-account-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["salesforce-account"];
					};
				};
			};
		};
	};
	"/salesforce-accounts/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["salesforce-account"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["salesforce-account"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/scheduled-tasks.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["scheduled-task"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["scheduled-task-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["scheduled-task"];
					};
				};
			};
		};
	};
	"/scheduled-tasks/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["scheduled-task"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["scheduled-task"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-integrations.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-integration"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-integration-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-integration"];
					};
				};
			};
		};
	};
	"/shipping-integrations/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-integration"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-integration"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate"];
					};
				};
			};
		};
	};
	"/shipping-rates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-carriers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-carrier"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-carrier-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-carrier"];
					};
				};
			};
		};
	};
	"/shipping-rate-carriers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-carrier"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-carrier"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-mappings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-mapping"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-mapping-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-mapping"];
					};
				};
			};
		};
	};
	"/shipping-rate-mappings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-mapping"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-mapping"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-product-types.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-product-type"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-product-type-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-product-type"];
					};
				};
			};
		};
	};
	"/shipping-rate-product-types/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-product-type"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-product-type"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-weights.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-weight"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-weight-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-weight"];
					};
				};
			};
		};
	};
	"/shipping-rate-weights/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-weight"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-weight"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-zones.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-zone-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone"];
					};
				};
			};
		};
	};
	"/shipping-rate-zones/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-zone"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-zone-codes.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone-code"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-zone-code-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone-code"];
					};
				};
			};
		};
	};
	"/shipping-rate-zone-codes/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone-code"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-zone-code"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shipping-rate-zone-code-bands.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone-code-band"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-zone-code-band-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone-code-band"];
					};
				};
			};
		};
	};
	"/shipping-rate-zone-code-bands/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shipping-rate-zone-code-band"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shipping-rate-zone-code-band"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shopify-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shopify-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shopify-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shopify-store"];
					};
				};
			};
		};
	};
	"/shopify-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shopify-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shopify-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/shopify-store-locations.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shopify-store-location"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["shopify-store-location-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shopify-store-location"];
					};
				};
			};
		};
	};
	"/shopify-store-locations/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["shopify-store-location"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["shopify-store-location"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/square-space-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["square-space-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["square-space-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["square-space-store"];
					};
				};
			};
		};
	};
	"/square-space-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["square-space-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["square-space-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/stock-takes.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["stock-take"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["stock-take-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["stock-take"];
					};
				};
			};
		};
	};
	"/stock-takes/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["stock-take"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["stock-take"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/stock-take-items.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["stock-take-item"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["stock-take-item-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["stock-take-item"];
					};
				};
			};
		};
	};
	"/stock-take-items/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["stock-take-item"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["stock-take-item"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/subscriptions.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["subscription"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["subscription-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["subscription"];
					};
				};
			};
		};
	};
	"/subscriptions/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["subscription"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["subscription"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/subscription-charges.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["subscription-charge"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["subscription-charge-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["subscription-charge"];
					};
				};
			};
		};
	};
	"/subscription-charges/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["subscription-charge"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["subscription-charge"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/tax-rates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tax-rate"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["tax-rate-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tax-rate"];
					};
				};
			};
		};
	};
	"/tax-rates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tax-rate"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["tax-rate"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/templates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["template"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["template-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["template"];
					};
				};
			};
		};
	};
	"/templates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["template"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["template"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/template-mappings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["template-mapping"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["template-mapping-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["template-mapping"];
					};
				};
			};
		};
	};
	"/template-mappings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["template-mapping"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["template-mapping"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/tracking-events.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tracking-event"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["tracking-event-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tracking-event"];
					};
				};
			};
		};
	};
	"/tracking-events/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tracking-event"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["tracking-event"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/transactions.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["transaction-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction"];
					};
				};
			};
		};
	};
	"/transactions/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transaction"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/transactions/{id}/refund.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transaction"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction"];
					};
				};
			};
		};
	};
	"/transactions/{id}/update-tracking.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["tracking-event"][];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["tracking-event"][];
					};
				};
			};
		};
	};
	"/transaction-exports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction-export"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["transaction-export-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction-export"];
					};
				};
			};
		};
	};
	"/transaction-exports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transaction-export"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transaction-export"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/transfers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer"];
					};
				};
			};
		};
	};
	"/transfers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/transfer-exports.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer-export"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer-export-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer-export"];
					};
				};
			};
		};
	};
	"/transfer-exports/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer-export"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer-export"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/transfer-refunds.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer-refund"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer-refund-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer-refund"];
					};
				};
			};
		};
	};
	"/transfer-refunds/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["transfer-refund"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["transfer-refund"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/users.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["user-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user"];
					};
				};
			};
		};
	};
	"/users/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["user"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/users/{id}/setting.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["user-setting"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user-setting"];
					};
				};
			};
		};
	};
	"/users/{id}/create-setting.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["user-setting"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user-setting"];
					};
				};
			};
		};
	};
	"/user-settings.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user-setting"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["user-setting-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user-setting"];
					};
				};
			};
		};
	};
	"/user-settings/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["user-setting"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["user-setting"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/variants.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"];
					};
				};
			};
		};
	};
	"/variants/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/variants/{id}/set-level.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"];
					};
				};
			};
		};
	};
	"/variants/{id}/push-channel-inventory.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"];
					};
				};
			};
		};
	};
	"/variants/{id}/push-channel-cost-price.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant"];
					};
				};
			};
		};
	};
	"/variant-inventory-updates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-inventory-update"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-inventory-update-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-inventory-update"];
					};
				};
			};
		};
	};
	"/variant-inventory-updates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-inventory-update"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-inventory-update"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/variant-parcels.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-parcel"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-parcel-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-parcel"];
					};
				};
			};
		};
	};
	"/variant-parcels/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-parcel"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-parcel"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/variant-warehouses.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-warehouse"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-warehouse-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-warehouse"];
					};
				};
			};
		};
	};
	"/variant-warehouses/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-warehouse"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-warehouse"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/variant-warehouse-updates.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-warehouse-update"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-warehouse-update-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-warehouse-update"];
					};
				};
			};
		};
	};
	"/variant-warehouse-updates/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["variant-warehouse-update"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["variant-warehouse-update"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/vendors.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["vendor-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor"];
					};
				};
			};
		};
	};
	"/vendors/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["vendor"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/vendors/{id}/dropship.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider"];
					};
				};
			};
		};
	};
	"/vendors/{id}/assign-dropship-provider.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["dropship-provider"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["dropship-provider"];
					};
				};
			};
		};
	};
	"/vendor-addresses.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor-address"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["vendor-address-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor-address"];
					};
				};
			};
		};
	};
	"/vendor-addresses/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor-address"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["vendor-address"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/vendor-dropship-providers.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor-dropship-provider"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["vendor-dropship-provider-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor-dropship-provider"];
					};
				};
			};
		};
	};
	"/vendor-dropship-providers/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["vendor-dropship-provider"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["vendor-dropship-provider"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/warehouses.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["warehouse"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["warehouse-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["warehouse"];
					};
				};
			};
		};
	};
	"/warehouses/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["warehouse"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["warehouse"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/warehouses/{id}/transfer.json": {
		post: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["inventory-transfer"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["inventory-transfer"];
					};
				};
			};
		};
	};
	"/warehouses/{id}/import-adjustments.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-import"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-import"];
					};
				};
			};
		};
	};
	"/warehouses/{id}/import-location-csv.json": {
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["data-import"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["data-import"];
					};
				};
			};
		};
	};
	"/webhooks.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["webhook"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["webhook-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["webhook"];
					};
				};
			};
		};
	};
	"/webhooks/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["webhook"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["webhook"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/webhook-payloads.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["webhook-payload"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["webhook-payload-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["webhook-payload"];
					};
				};
			};
		};
	};
	"/webhook-payloads/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["webhook-payload"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["webhook-payload"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
	"/woo-commerce-stores.json": {
		get: {
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["woo-commerce-store"][];
					};
				};
			};
		};
		post: {
			requestBody: {
				content: {
					"application/json": components["schemas"]["woo-commerce-store-new"];
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["woo-commerce-store"];
					};
				};
			};
		};
	};
	"/woo-commerce-stores/{id}.json": {
		get: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			responses: {
				/** @description Successful response */
				200: {
					content: {
						"application/json": components["schemas"]["woo-commerce-store"];
					};
				};
			};
		};
		put: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["woo-commerce-store"];
				};
			};
		};
		delete: {
			parameters: {
				/** @description Numeric ID of the instance */
				path: {
					id: number;
				};
			};
		};
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		"accounting-integration": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Dropship endpoint */
			dropshipEndpoint?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/** @description Replenishment endpoint */
			replenishmentEndpoint?: string | null;
			/** @description Sale endpoint */
			saleEndpoint?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"accounting-integration-new": {
			/** @description Dropship endpoint */
			dropshipEndpoint?: string | null;
			/** @description Name */
			name: string;
			/** @description Replenishment endpoint */
			replenishmentEndpoint?: string | null;
			/** @description Sale endpoint */
			saleEndpoint?: string | null;
		};
		"accounting-payload": {
			/**
			 * Format: int32
			 * @description Accounting integration
			 */
			accountingIntegrationId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId?: number | null;
			/**
			 * @description Source
			 * @enum {string}
			 */
			source: "quickbooks" | "xero" | "custom";
			/**
			 * @description Status
			 * @enum {string}
			 */
			status: "success" | "error";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"accounting-payload-new": {
			/**
			 * Format: int32
			 * @description Accounting integration
			 */
			accountingIntegrationId?: number | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId?: number | null;
			/**
			 * @description Source
			 * @enum {string}
			 */
			source: "quickbooks" | "xero" | "custom";
			/**
			 * @description Status
			 * @enum {string}
			 */
			status: "success" | "error";
		};
		"address-validation": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * @description Source
			 * @default other
			 * @enum {string|null}
			 */
			source: "other" | "custom" | "shippo" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"address-validation-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * @description Source
			 * @default other
			 * @enum {string|null}
			 */
			source: "other" | "custom" | "shippo" | null;
		};
		adjustment: {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * @description Automated import
			 * @default false
			 */
			automatedImport: boolean | null;
			/**
			 * @description Cost price
			 * @default 0
			 */
			costPrice: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Data import
			 */
			dataImportId?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Notes */
			notes?: string | null;
			/**
			 * Format: int32
			 * @description Quantity
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Stock take item
			 */
			stockTakeItemId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"adjustment-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * @description Automated import
			 * @default false
			 */
			automatedImport: boolean | null;
			/**
			 * @description Cost price
			 * @default 0
			 */
			costPrice: number | null;
			/**
			 * Format: int32
			 * @description Data import
			 */
			dataImportId?: number | null;
			/** @description Notes */
			notes?: string | null;
			/**
			 * Format: int32
			 * @description Quantity
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Stock take item
			 */
			stockTakeItemId?: number | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"adjustment-reason": {
			/** @description Code */
			code: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * @description Show in returns portal
			 * @default true
			 */
			showInReturnsPortal: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"adjustment-reason-new": {
			/** @description Code */
			code: string;
			/** @description Name */
			name: string;
			/**
			 * @description Show in returns portal
			 * @default true
			 */
			showInReturnsPortal: boolean | null;
		};
		agreement: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Files */
			files:
				| Record<string, never>
				| unknown[]
				| boolean
				| number
				| number
				| string;
			/**
			 * @description Files required
			 * @default false
			 */
			filesRequired: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Instructions */
			instructions?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description Status
			 * @default draft
			 * @enum {string|null}
			 */
			status: "draft" | "active" | "archived" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"agreement-new": {
			/** @description Files */
			files:
				| Record<string, never>
				| unknown[]
				| boolean
				| number
				| number
				| string;
			/**
			 * @description Files required
			 * @default false
			 */
			filesRequired: boolean | null;
			/** @description Instructions */
			instructions?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description Status
			 * @default draft
			 * @enum {string|null}
			 */
			status: "draft" | "active" | "archived" | null;
		};
		"allowed-tag": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Resource
			 * @default all
			 * @enum {string}
			 */
			resource:
				| "all"
				| "customers"
				| "dropshipments"
				| "dropshipProviders"
				| "fulfillments"
				| "goodsReceipts"
				| "purchases"
				| "resellers"
				| "saleReturns"
				| "sales";
			/** @description Tag */
			tag: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"allowed-tag-new": {
			/**
			 * @description Resource
			 * @default all
			 * @enum {string}
			 */
			resource:
				| "all"
				| "customers"
				| "dropshipments"
				| "dropshipProviders"
				| "fulfillments"
				| "goodsReceipts"
				| "purchases"
				| "resellers"
				| "saleReturns"
				| "sales";
			/** @description Tag */
			tag: string;
		};
		"amazon-account": {
			/** @description Auth token */
			authToken: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Marketplace */
			marketplaceId: string;
			/** @description Name */
			name: string;
			/** @description Seller */
			sellerId: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"amazon-account-new": {
			/** @description Auth token */
			authToken: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Marketplace */
			marketplaceId: string;
			/** @description Name */
			name: string;
			/** @description Seller */
			sellerId: string;
		};
		"amazon-account-report": {
			/**
			 * Format: int32
			 * @description Amazon account
			 */
			amazonAccountId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Report */
			reportId?: string | null;
			/**
			 * @description Report processing status
			 * @enum {string}
			 */
			reportProcessingStatus:
				| "_SUBMITTED_"
				| "_IN_PROGRESS_"
				| "_CANCELLED_"
				| "_DONE_"
				| "_DONE_NO_DATA_";
			/** @description Report request */
			reportRequestId: string;
			/**
			 * @description Report type
			 * @enum {string}
			 */
			reportType: "_POST_INVENTORY_AVAILABILITY_DATA_";
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "pending" | "processing" | "success" | "error";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"amazon-account-report-new": {
			/**
			 * Format: int32
			 * @description Amazon account
			 */
			amazonAccountId: number;
			/** @description Report */
			reportId?: string | null;
			/**
			 * @description Report processing status
			 * @enum {string}
			 */
			reportProcessingStatus:
				| "_SUBMITTED_"
				| "_IN_PROGRESS_"
				| "_CANCELLED_"
				| "_DONE_"
				| "_DONE_NO_DATA_";
			/** @description Report request */
			reportRequestId: string;
			/**
			 * @description Report type
			 * @enum {string}
			 */
			reportType: "_POST_INVENTORY_AVAILABILITY_DATA_";
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "pending" | "processing" | "success" | "error";
		};
		"big-commerce-store": {
			/** @description Access token */
			accessToken?: string | null;
			/**
			 * @description Authentication type
			 * @default public
			 * @enum {string|null}
			 */
			authenticationType: "public" | "private" | null;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Client */
			clientId?: string | null;
			/** @description Client secret */
			clientSecret?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Default category */
			defaultCategory?: string | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Last fetched sales at
			 */
			lastFetchedSalesAt?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Shop */
			shop: string;
			/** @description Store hash */
			storeHash?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"big-commerce-store-new": {
			/** @description Access token */
			accessToken?: string | null;
			/**
			 * @description Authentication type
			 * @default public
			 * @enum {string|null}
			 */
			authenticationType: "public" | "private" | null;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Client */
			clientId?: string | null;
			/** @description Client secret */
			clientSecret?: string | null;
			/** @description Default category */
			defaultCategory?: string | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: date-time
			 * @description Last fetched sales at
			 */
			lastFetchedSalesAt?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Shop */
			shop: string;
			/** @description Store hash */
			storeHash?: string | null;
		};
		"bundle-variant": {
			/**
			 * Format: int32
			 * @description Component variant
			 */
			componentVariantId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"bundle-variant-new": {
			/**
			 * Format: int32
			 * @description Component variant
			 */
			componentVariantId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		carrier: {
			/**
			 * @description Carrier type
			 * @enum {string|null}
			 */
			carrierType?:
				| "australia_post"
				| "canada_post"
				| "deutsche_post"
				| "dhl_germany"
				| "dhl_ecommerce"
				| "dhl_express"
				| "fedex"
				| "gls_fr"
				| "lasership"
				| "mondial_relay"
				| "newgistics"
				| "ontrac"
				| "purolator"
				| "ups"
				| "usps"
				| null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Platform
			 * @default manual
			 * @enum {string|null}
			 */
			platform: "shippo" | "manual" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"carrier-new": {
			/**
			 * @description Carrier type
			 * @enum {string|null}
			 */
			carrierType?:
				| "australia_post"
				| "canada_post"
				| "deutsche_post"
				| "dhl_germany"
				| "dhl_ecommerce"
				| "dhl_express"
				| "fedex"
				| "gls_fr"
				| "lasership"
				| "mondial_relay"
				| "newgistics"
				| "ontrac"
				| "purolator"
				| "ups"
				| "usps"
				| null;
			/** @description External */
			externalId?: string | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Platform
			 * @default manual
			 * @enum {string|null}
			 */
			platform: "shippo" | "manual" | null;
		};
		"carrier-pickup": {
			/** @description Carrier */
			carrier: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description External */
			externalId?: string | null;
			/** @description From address line one */
			fromAddressLineOne?: string | null;
			/** @description From address line two */
			fromAddressLineTwo?: string | null;
			/** @description From city */
			fromCity?: string | null;
			/** @description From country */
			fromCountry?: string | null;
			/** @description From email */
			fromEmail?: string | null;
			/** @description From name */
			fromName?: string | null;
			/** @description From phone */
			fromPhone?: string | null;
			/** @description From state */
			fromState?: string | null;
			/** @description From zip */
			fromZip?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Pickup at
			 */
			pickupAt: string;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Source */
			source: string;
			/** @description Status */
			status: string;
			/** @description To country */
			toCountry?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"carrier-pickup-new": {
			/** @description Carrier */
			carrier: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description External */
			externalId?: string | null;
			/** @description From address line one */
			fromAddressLineOne?: string | null;
			/** @description From address line two */
			fromAddressLineTwo?: string | null;
			/** @description From city */
			fromCity?: string | null;
			/** @description From country */
			fromCountry?: string | null;
			/** @description From email */
			fromEmail?: string | null;
			/** @description From name */
			fromName?: string | null;
			/** @description From phone */
			fromPhone?: string | null;
			/** @description From state */
			fromState?: string | null;
			/** @description From zip */
			fromZip?: string | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Pickup at
			 */
			pickupAt: string;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Source */
			source: string;
			/** @description Status */
			status: string;
			/** @description To country */
			toCountry?: string | null;
		};
		channel: {
			/** @description Address validation endpoint */
			addressValidationEndpoint?: string | null;
			/**
			 * @description Address validation finalize
			 * @default false
			 */
			addressValidationFinalize: boolean | null;
			/**
			 * How should errors from AfterShip be handled?
			 * @description When there is an error returned from AfterShip (e.g. if the carrier name was missing), you can select whether to pause sending the shipment notification to your store. Or, continue to sync the shipment with your online store despite the error.
			 * @default skip
			 * @enum {string|null}
			 */
			aftershipError: "skip" | "error" | null;
			/**
			 * @description Allocate draft sales
			 * @default enabled
			 * @enum {string|null}
			 */
			allocateDraftSales: "enabled" | "disabled" | null;
			/**
			 * How to handle unallocated items
			 * @description If an item can not be allocated to a dropship provider or warehouse, you can either allow the customer to continue to checkout. Or, throw an error.
			 * @default allow
			 * @enum {string|null}
			 */
			allocatedShipments: "allow" | "error" | null;
			/**
			 * @description Automatically cancel sales
			 * @default true
			 */
			automaticallyCancelSales: boolean | null;
			/**
			 * @description Automatically finalize sales
			 * @default true
			 */
			automaticallyFinalizeSales: boolean;
			/**
			 * @description Automatically publish
			 * @default true
			 */
			automaticallyPublish: boolean | null;
			/**
			 * @description Blended preference
			 * @default inhouse
			 * @enum {string|null}
			 */
			blendedPreference: "dropship" | "inhouse" | "routing" | null;
			/** @description Checkout string */
			checkoutString?: string | null;
			/** @description Collection endpoint */
			collectionEndpoint?: string | null;
			/** @description Connect to feed */
			connectToFeed?: boolean | null;
			/**
			 * Format: date-time
			 * @description Connected at
			 */
			connectedAt?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Disable variant inventory sync */
			disableVariantInventorySync?: boolean | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Dropship routing
			 * @default default
			 * @enum {string|null}
			 */
			dropshipRouting: "default" | "custom" | null;
			/** @description Dropship routing tags */
			dropshipRoutingTags?: string[] | null;
			/**
			 * @description Dropship tags
			 * @default []
			 */
			dropshipTags: string[] | null;
			/** @description Email */
			email?: string | null;
			/**
			 * @description Enable free shipping countries
			 * @default false
			 */
			enableFreeShippingCountries: boolean | null;
			/** @description Export to shipstation */
			exportToShipstation?: boolean | null;
			/**
			 * @description Force connect to feed
			 * @default false
			 */
			forceConnectToFeed: boolean | null;
			/** @description Free shipping code */
			freeShippingCode?: string | null;
			/** @description Free shipping countries */
			freeShippingCountries?: string[] | null;
			/** @description Free shipping name */
			freeShippingName?: string | null;
			/** @description Free shipping origin countries */
			freeShippingOriginCountries?: string[] | null;
			/** @description Free shipping override */
			freeShippingOverride?: boolean | null;
			/**
			 * @description Free shipping scope
			 * @default all
			 * @enum {string|null}
			 */
			freeShippingScope: "all" | "domestic" | "selected" | null;
			/** @description Free shipping threshold */
			freeShippingThreshold?: number | null;
			/** @description Hash */
			hash?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Hide when no cost price */
			hideWhenNoCostPrice?: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Image sync
			 * @default bidirectional
			 * @enum {string|null}
			 */
			imageSync: "bidirectional" | "jetti" | "channel" | "inventoryFeed" | null;
			/** @description Import from feed */
			importFromFeed?: boolean | null;
			/**
			 * @description Import payment status
			 * @default paid
			 * @enum {string|null}
			 */
			importPaymentStatus: "unpaid" | "partiallyPaid" | "paid" | null;
			/**
			 * Format: int32
			 * @description Import products seconds
			 */
			importProductsSeconds?: number | null;
			/**
			 * @description Include backorder quantity
			 * @default true
			 */
			includeBackorderQuantity: boolean | null;
			/**
			 * @description Include sale tags
			 * @default false
			 */
			includeSaleTags: boolean | null;
			/**
			 * @description Inventory feed removed
			 * @default all
			 * @enum {string|null}
			 */
			inventoryFeedRemoved: "all" | "partial" | null;
			/**
			 * @description Inventory feed unpublish
			 * @default none
			 * @enum {string|null}
			 */
			inventoryFeedUnpublish: "none" | "unpublish" | "unavailable" | null;
			/**
			 * @description Inventory sync
			 * @default all
			 * @enum {string|null}
			 */
			inventorySync: "all" | "inventory_feeds" | "none" | null;
			/**
			 * Processing non-product line items
			 * @description Some e-commerce platforms may add non-product items to orders. For example, a line item for the gift messaging with an associated price. Or, an order might be imported into Jetti with an item not yet connected to a product. When this happens, you may want to pause the processing of the order until the product can be associated with a dropship provider.
			 * @default ignore
			 * @enum {string|null}
			 */
			manualSaleItemRouting: "ignore" | "pause" | null;
			/** @description Max shipping cost */
			maxShippingCost?: boolean | null;
			/** @description Max shipping cost threshold */
			maxShippingCostThreshold?: number | null;
			/**
			 * Restrict dropship providers from setting expected shipping dates
			 * @description Dropship providers have the ability to change the expected delivery of an order. You can select whether this could be any date. Or, restrict the selection of the date so it's only within a specific number of days.
			 * @enum {string|null}
			 */
			maximumExpectedShipping?: "enabled" | "disabled" | null;
			/**
			 * Format: int32
			 * @description Maximum expected shipping duration
			 * @default 0
			 */
			maximumExpectedShippingDuration: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description Negative stock
			 * @default enabled
			 * @enum {string|null}
			 */
			negativeStock: "enabled" | "disabled" | null;
			/**
			 * Format: int32
			 * @description Negative stock level
			 * @default 0
			 */
			negativeStockLevel: number | null;
			/**
			 * @description No rates error
			 * @default false
			 */
			noRatesError: boolean | null;
			/**
			 * @description Order routing
			 * @default automated
			 * @enum {string|null}
			 */
			orderRouting: "automated" | "manual" | "ignore" | null;
			/** @description Order routing endpoint */
			orderRoutingEndpoint?: string | null;
			/**
			 * @description Overselling prevention
			 * @default disabled
			 * @enum {string|null}
			 */
			oversellingPrevention: "enabled" | "disabled" | null;
			/**
			 * @description Parent channel
			 * @default manual
			 * @enum {string|null}
			 */
			parentChannel:
				| "bigCommerce"
				| "custom"
				| "duoplane"
				| "elasticPath"
				| "magento"
				| "manual"
				| "salesforce"
				| "shopify"
				| "wooCommerce"
				| null;
			/** @description Pdf legal */
			pdfLegal?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: date-time
			 * @description Products imported at
			 */
			productsImportedAt?: string | null;
			/**
			 * Tags to add to items when publishing
			 * @description When items are published to the channel, you can specify any additional tags to include.
			 * @default [
			 *   "jetti"
			 * ]
			 */
			publishAdditionalTags: string[] | null;
			/** @description Publish meta fields */
			publishMetaFields?: boolean | null;
			/**
			 * @description Publish products
			 * @default true
			 */
			publishProducts: boolean | null;
			/**
			 * @description Publish products without price
			 * @default true
			 */
			publishProductsWithoutPrice: boolean | null;
			/**
			 * @description Publish tags
			 * @default all
			 * @enum {string|null}
			 */
			publishTags: "all" | "none" | null;
			/** @description Purchase prefix */
			purchasePrefix?: string | null;
			/**
			 * Format: int32
			 * @description Purchase status
			 */
			purchaseStatusId?: number | null;
			/**
			 * @description Rate logging
			 * @default false
			 */
			rateLogging: boolean | null;
			/**
			 * Require a phone number when finalizing the order
			 * @description The order will not be able to be finalized and processed if a phone number was not supplied by the customer. Jetti won't check to see if the phone number is valid (e.g. a valid US phone number), it will just check to see if a phone number was added. The phone number is typically provided by the customer and they are purchasing items in your online store. When enabled, you'll receive an email notification letting you know an order was imported if a phone number is not found.
			 * @default false
			 */
			requirePhoneNumber: boolean | null;
			/** @description Require vendor name */
			requireVendorName?: boolean | null;
			/**
			 * @description Routing priority one
			 * @default inStock
			 * @enum {string|null}
			 */
			routingPriorityOne: "none" | "country" | "costPrice" | "inStock" | null;
			/**
			 * @description Routing priority three
			 * @default none
			 * @enum {string|null}
			 */
			routingPriorityThree: "none" | "country" | "costPrice" | "inStock" | null;
			/**
			 * @description Routing priority two
			 * @default none
			 * @enum {string|null}
			 */
			routingPriorityTwo: "none" | "country" | "costPrice" | "inStock" | null;
			/**
			 * Custom fields to copy to dropship dropship purchase
			 * @description Select the names of the custom fields to be applied. E.g. vat_number, gift_note.
			 */
			saleCustomFields?: string[] | null;
			/**
			 * Sale custom fields applied to dropship purchases
			 * @description When importing sales from your channel, custom or meta fields may be applied. For example, the Customer VAT number of gift note.  By default, none of the custom fields are applied to the dropship purchase order. You can optionally include all or a selection of the custom fields when dropship orders are raised.
			 * @default none
			 * @enum {string|null}
			 */
			saleCustomFieldsScope: "all" | "selected" | "none" | null;
			/**
			 * Log importing of sales data
			 * @description When connecting custom frontends to Jetti, it may be useful to log all incoming data for inspecting and validating. This will detail the payload send to Jetti and any errors encountered processing the data.
			 * @default false
			 */
			saleLogging: boolean | null;
			/**
			 * Receive email alerts when sales can't be imported
			 * @description When importing data from your online store, you can be notified if an error is encountered. We'd recommend only using this for custom frontends, where developers are building a connector with Jetti.
			 * @default none
			 * @enum {string|null}
			 */
			saleLoggingEmail: "none" | "initial" | "all" | null;
			/**
			 * Select the custom fields to import
			 * @description Create an allow list of meta field keys/names to import on orders. May be useful when you want to exclude metafields being added from 3rd party apps.
			 */
			saleMetaFieldFilter?: string[] | null;
			/**
			 * Import custom fields for orders
			 * @description Select whether to import custom fields on orders. Currently, Shopify orders will import all custom fields.
			 * @default none
			 * @enum {string|null}
			 */
			saleMetaFields: "all" | "selected" | "none" | null;
			/** @description Sale prefix */
			salePrefix?: string | null;
			/**
			 * Send a shipping notification to the customer
			 * @description This will trigger an email being sent to the customer within your online store. Jetti does not send the email. Instead, we'll notify your online store to send their default shipping email. For example, on Shopify, this will send the default shipping notification template.
			 * @default true
			 */
			sendShippingNotification: boolean | null;
			/**
			 * Template for generating commercial invoice reference
			 * @description Optional. Customize the reference for inclusion on commercial invoices. You can use {reference} for adding in the reference. E.g. "INVOICE_{reference}"
			 */
			shippingInvoiceTemplate?: string | null;
			/**
			 * Format: date-time
			 * @description Shipstation connected at
			 */
			shipstationConnectedAt?: string | null;
			/** @description Shipstation password */
			shipstationPassword?: string | null;
			/** @description Shipstation tags */
			shipstationTags?: string[] | null;
			/** @description Shipstation url */
			shipstationUrl?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shipstation username */
			shipstationUsername?: string | null;
			/**
			 * @description Skip line items
			 * @default []
			 */
			skipLineItems: string[] | null;
			/**
			 * @description Skip tags
			 * @default []
			 */
			skipTags: string[] | null;
			/**
			 * @description Skip variant tags
			 * @default []
			 */
			skipVariantTags: string[] | null;
			/**
			 * @description Split shipping
			 * @default full
			 * @enum {string|null}
			 */
			splitShipping: "quantity" | "value" | "equal" | "full" | "first" | null;
			/**
			 * @description Sync address updates
			 * @default true
			 */
			syncAddressUpdates: boolean | null;
			/**
			 * @description Sync cost prices
			 * @default false
			 */
			syncCostPrices: boolean | null;
			/**
			 * @description Sync images
			 * @default true
			 */
			syncImages: boolean | null;
			/**
			 * @description Sync pricing
			 * @default true
			 */
			syncPricing: boolean | null;
			/** @description Sync quickbook sales automatically */
			syncQuickbookSalesAutomatically?: boolean | null;
			/**
			 * Import the weight, even when zero
			 * @description You may want to disable the syncing of weights if an item has no weight in your store. Otherwise, if you've manually adjusted the weight in Jetti or when fetching a dropship inventory feed, it might reset the weight back to zero again the next time the item is imported from your store.
			 * @default false
			 */
			syncWeightZero: boolean | null;
			/**
			 * @description Tax calculation
			 * @default channel
			 * @enum {string|null}
			 */
			taxCalculation: "channel" | "taxRate" | "taxjar" | null;
			/**
			 * Tax ID
			 * @description This will be added to the "ship from" address the commerical invoices when shipping labels are generated. If the dropship provider has added their tax id in their settings, their tax id will be used instead of the value here.
			 */
			taxId?: string | null;
			/**
			 * @description Tax included
			 * @default true
			 */
			taxIncluded: boolean;
			/**
			 * Format: int32
			 * @description Tax rate
			 */
			taxRateId?: number | null;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean;
			/**
			 * Handling of unallocated dropship line items
			 * @description When finalizing an order, dropship items not allocated to a dropship provider. When this happens, you can either pause the order to resolve. Or, continue to finalize and process the order, allow the line item to be mapped later.
			 * @default pause
			 * @enum {string|null}
			 */
			unallocatedDropship: "ignore" | "pause" | null;
			/**
			 * @description Unassigned sale items
			 * @default include
			 * @enum {string|null}
			 */
			unassignedSaleItems: "include" | "exclude" | "block" | null;
			/**
			 * @description Unpublish no inventory
			 * @default false
			 */
			unpublishNoInventory: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Custom order routing API
			 * @description Use the Jetti API to automatically route and select the appropriate dropship provider during checkout and when finalizing orders.
			 * @default false
			 */
			useOrderRoutingEndpoint: boolean | null;
			/**
			 * @description Variant import scope
			 * @default product
			 * @enum {string|null}
			 */
			variantImportScope: "product" | "mapping" | null;
			/**
			 * @description Variant logging
			 * @default false
			 */
			variantLogging: boolean | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/**
			 * @description Warehouse sync
			 * @default default
			 * @enum {string|null}
			 */
			warehouseSync: "default" | "all" | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
		};
		"channel-new": {
			/** @description Address validation endpoint */
			addressValidationEndpoint?: string | null;
			/**
			 * @description Address validation finalize
			 * @default false
			 */
			addressValidationFinalize: boolean | null;
			/**
			 * How should errors from AfterShip be handled?
			 * @description When there is an error returned from AfterShip (e.g. if the carrier name was missing), you can select whether to pause sending the shipment notification to your store. Or, continue to sync the shipment with your online store despite the error.
			 * @default skip
			 * @enum {string|null}
			 */
			aftershipError: "skip" | "error" | null;
			/**
			 * @description Allocate draft sales
			 * @default enabled
			 * @enum {string|null}
			 */
			allocateDraftSales: "enabled" | "disabled" | null;
			/**
			 * How to handle unallocated items
			 * @description If an item can not be allocated to a dropship provider or warehouse, you can either allow the customer to continue to checkout. Or, throw an error.
			 * @default allow
			 * @enum {string|null}
			 */
			allocatedShipments: "allow" | "error" | null;
			/**
			 * @description Automatically cancel sales
			 * @default true
			 */
			automaticallyCancelSales: boolean | null;
			/**
			 * @description Automatically finalize sales
			 * @default true
			 */
			automaticallyFinalizeSales: boolean;
			/**
			 * @description Automatically publish
			 * @default true
			 */
			automaticallyPublish: boolean | null;
			/**
			 * @description Blended preference
			 * @default inhouse
			 * @enum {string|null}
			 */
			blendedPreference: "dropship" | "inhouse" | "routing" | null;
			/** @description Checkout string */
			checkoutString?: string | null;
			/** @description Collection endpoint */
			collectionEndpoint?: string | null;
			/** @description Connect to feed */
			connectToFeed?: boolean | null;
			/**
			 * Format: date-time
			 * @description Connected at
			 */
			connectedAt?: string | null;
			/** @description Disable variant inventory sync */
			disableVariantInventorySync?: boolean | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Dropship routing
			 * @default default
			 * @enum {string|null}
			 */
			dropshipRouting: "default" | "custom" | null;
			/** @description Dropship routing tags */
			dropshipRoutingTags?: string[] | null;
			/**
			 * @description Dropship tags
			 * @default []
			 */
			dropshipTags: string[] | null;
			/** @description Email */
			email?: string | null;
			/**
			 * @description Enable free shipping countries
			 * @default false
			 */
			enableFreeShippingCountries: boolean | null;
			/** @description Export to shipstation */
			exportToShipstation?: boolean | null;
			/**
			 * @description Force connect to feed
			 * @default false
			 */
			forceConnectToFeed: boolean | null;
			/** @description Free shipping code */
			freeShippingCode?: string | null;
			/** @description Free shipping countries */
			freeShippingCountries?: string[] | null;
			/** @description Free shipping name */
			freeShippingName?: string | null;
			/** @description Free shipping origin countries */
			freeShippingOriginCountries?: string[] | null;
			/** @description Free shipping override */
			freeShippingOverride?: boolean | null;
			/**
			 * @description Free shipping scope
			 * @default all
			 * @enum {string|null}
			 */
			freeShippingScope: "all" | "domestic" | "selected" | null;
			/** @description Free shipping threshold */
			freeShippingThreshold?: number | null;
			/** @description Hash */
			hash?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Hide when no cost price */
			hideWhenNoCostPrice?: boolean | null;
			/**
			 * @description Image sync
			 * @default bidirectional
			 * @enum {string|null}
			 */
			imageSync: "bidirectional" | "jetti" | "channel" | "inventoryFeed" | null;
			/** @description Import from feed */
			importFromFeed?: boolean | null;
			/**
			 * @description Import payment status
			 * @default paid
			 * @enum {string|null}
			 */
			importPaymentStatus: "unpaid" | "partiallyPaid" | "paid" | null;
			/**
			 * Format: int32
			 * @description Import products seconds
			 */
			importProductsSeconds?: number | null;
			/**
			 * @description Include backorder quantity
			 * @default true
			 */
			includeBackorderQuantity: boolean | null;
			/**
			 * @description Include sale tags
			 * @default false
			 */
			includeSaleTags: boolean | null;
			/**
			 * @description Inventory feed removed
			 * @default all
			 * @enum {string|null}
			 */
			inventoryFeedRemoved: "all" | "partial" | null;
			/**
			 * @description Inventory feed unpublish
			 * @default none
			 * @enum {string|null}
			 */
			inventoryFeedUnpublish: "none" | "unpublish" | "unavailable" | null;
			/**
			 * @description Inventory sync
			 * @default all
			 * @enum {string|null}
			 */
			inventorySync: "all" | "inventory_feeds" | "none" | null;
			/**
			 * Processing non-product line items
			 * @description Some e-commerce platforms may add non-product items to orders. For example, a line item for the gift messaging with an associated price. Or, an order might be imported into Jetti with an item not yet connected to a product. When this happens, you may want to pause the processing of the order until the product can be associated with a dropship provider.
			 * @default ignore
			 * @enum {string|null}
			 */
			manualSaleItemRouting: "ignore" | "pause" | null;
			/** @description Max shipping cost */
			maxShippingCost?: boolean | null;
			/** @description Max shipping cost threshold */
			maxShippingCostThreshold?: number | null;
			/**
			 * Restrict dropship providers from setting expected shipping dates
			 * @description Dropship providers have the ability to change the expected delivery of an order. You can select whether this could be any date. Or, restrict the selection of the date so it's only within a specific number of days.
			 * @enum {string|null}
			 */
			maximumExpectedShipping?: "enabled" | "disabled" | null;
			/**
			 * Format: int32
			 * @description Maximum expected shipping duration
			 * @default 0
			 */
			maximumExpectedShippingDuration: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description Negative stock
			 * @default enabled
			 * @enum {string|null}
			 */
			negativeStock: "enabled" | "disabled" | null;
			/**
			 * Format: int32
			 * @description Negative stock level
			 * @default 0
			 */
			negativeStockLevel: number | null;
			/**
			 * @description No rates error
			 * @default false
			 */
			noRatesError: boolean | null;
			/**
			 * @description Order routing
			 * @default automated
			 * @enum {string|null}
			 */
			orderRouting: "automated" | "manual" | "ignore" | null;
			/** @description Order routing endpoint */
			orderRoutingEndpoint?: string | null;
			/**
			 * @description Overselling prevention
			 * @default disabled
			 * @enum {string|null}
			 */
			oversellingPrevention: "enabled" | "disabled" | null;
			/**
			 * @description Parent channel
			 * @default manual
			 * @enum {string|null}
			 */
			parentChannel:
				| "bigCommerce"
				| "custom"
				| "duoplane"
				| "elasticPath"
				| "magento"
				| "manual"
				| "salesforce"
				| "shopify"
				| "wooCommerce"
				| null;
			/** @description Pdf legal */
			pdfLegal?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: date-time
			 * @description Products imported at
			 */
			productsImportedAt?: string | null;
			/**
			 * Tags to add to items when publishing
			 * @description When items are published to the channel, you can specify any additional tags to include.
			 * @default [
			 *   "jetti"
			 * ]
			 */
			publishAdditionalTags: string[] | null;
			/** @description Publish meta fields */
			publishMetaFields?: boolean | null;
			/**
			 * @description Publish products
			 * @default true
			 */
			publishProducts: boolean | null;
			/**
			 * @description Publish products without price
			 * @default true
			 */
			publishProductsWithoutPrice: boolean | null;
			/**
			 * @description Publish tags
			 * @default all
			 * @enum {string|null}
			 */
			publishTags: "all" | "none" | null;
			/** @description Purchase prefix */
			purchasePrefix?: string | null;
			/**
			 * Format: int32
			 * @description Purchase status
			 */
			purchaseStatusId?: number | null;
			/**
			 * @description Rate logging
			 * @default false
			 */
			rateLogging: boolean | null;
			/**
			 * Require a phone number when finalizing the order
			 * @description The order will not be able to be finalized and processed if a phone number was not supplied by the customer. Jetti won't check to see if the phone number is valid (e.g. a valid US phone number), it will just check to see if a phone number was added. The phone number is typically provided by the customer and they are purchasing items in your online store. When enabled, you'll receive an email notification letting you know an order was imported if a phone number is not found.
			 * @default false
			 */
			requirePhoneNumber: boolean | null;
			/** @description Require vendor name */
			requireVendorName?: boolean | null;
			/**
			 * @description Routing priority one
			 * @default inStock
			 * @enum {string|null}
			 */
			routingPriorityOne: "none" | "country" | "costPrice" | "inStock" | null;
			/**
			 * @description Routing priority three
			 * @default none
			 * @enum {string|null}
			 */
			routingPriorityThree: "none" | "country" | "costPrice" | "inStock" | null;
			/**
			 * @description Routing priority two
			 * @default none
			 * @enum {string|null}
			 */
			routingPriorityTwo: "none" | "country" | "costPrice" | "inStock" | null;
			/**
			 * Custom fields to copy to dropship dropship purchase
			 * @description Select the names of the custom fields to be applied. E.g. vat_number, gift_note.
			 */
			saleCustomFields?: string[] | null;
			/**
			 * Sale custom fields applied to dropship purchases
			 * @description When importing sales from your channel, custom or meta fields may be applied. For example, the Customer VAT number of gift note.  By default, none of the custom fields are applied to the dropship purchase order. You can optionally include all or a selection of the custom fields when dropship orders are raised.
			 * @default none
			 * @enum {string|null}
			 */
			saleCustomFieldsScope: "all" | "selected" | "none" | null;
			/**
			 * Log importing of sales data
			 * @description When connecting custom frontends to Jetti, it may be useful to log all incoming data for inspecting and validating. This will detail the payload send to Jetti and any errors encountered processing the data.
			 * @default false
			 */
			saleLogging: boolean | null;
			/**
			 * Receive email alerts when sales can't be imported
			 * @description When importing data from your online store, you can be notified if an error is encountered. We'd recommend only using this for custom frontends, where developers are building a connector with Jetti.
			 * @default none
			 * @enum {string|null}
			 */
			saleLoggingEmail: "none" | "initial" | "all" | null;
			/**
			 * Select the custom fields to import
			 * @description Create an allow list of meta field keys/names to import on orders. May be useful when you want to exclude metafields being added from 3rd party apps.
			 */
			saleMetaFieldFilter?: string[] | null;
			/**
			 * Import custom fields for orders
			 * @description Select whether to import custom fields on orders. Currently, Shopify orders will import all custom fields.
			 * @default none
			 * @enum {string|null}
			 */
			saleMetaFields: "all" | "selected" | "none" | null;
			/** @description Sale prefix */
			salePrefix?: string | null;
			/**
			 * Send a shipping notification to the customer
			 * @description This will trigger an email being sent to the customer within your online store. Jetti does not send the email. Instead, we'll notify your online store to send their default shipping email. For example, on Shopify, this will send the default shipping notification template.
			 * @default true
			 */
			sendShippingNotification: boolean | null;
			/**
			 * Template for generating commercial invoice reference
			 * @description Optional. Customize the reference for inclusion on commercial invoices. You can use {reference} for adding in the reference. E.g. "INVOICE_{reference}"
			 */
			shippingInvoiceTemplate?: string | null;
			/**
			 * Format: date-time
			 * @description Shipstation connected at
			 */
			shipstationConnectedAt?: string | null;
			/** @description Shipstation password */
			shipstationPassword?: string | null;
			/** @description Shipstation tags */
			shipstationTags?: string[] | null;
			/** @description Shipstation url */
			shipstationUrl?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shipstation username */
			shipstationUsername?: string | null;
			/**
			 * @description Skip line items
			 * @default []
			 */
			skipLineItems: string[] | null;
			/**
			 * @description Skip tags
			 * @default []
			 */
			skipTags: string[] | null;
			/**
			 * @description Skip variant tags
			 * @default []
			 */
			skipVariantTags: string[] | null;
			/**
			 * @description Split shipping
			 * @default full
			 * @enum {string|null}
			 */
			splitShipping: "quantity" | "value" | "equal" | "full" | "first" | null;
			/**
			 * @description Sync address updates
			 * @default true
			 */
			syncAddressUpdates: boolean | null;
			/**
			 * @description Sync cost prices
			 * @default false
			 */
			syncCostPrices: boolean | null;
			/**
			 * @description Sync images
			 * @default true
			 */
			syncImages: boolean | null;
			/**
			 * @description Sync pricing
			 * @default true
			 */
			syncPricing: boolean | null;
			/** @description Sync quickbook sales automatically */
			syncQuickbookSalesAutomatically?: boolean | null;
			/**
			 * Import the weight, even when zero
			 * @description You may want to disable the syncing of weights if an item has no weight in your store. Otherwise, if you've manually adjusted the weight in Jetti or when fetching a dropship inventory feed, it might reset the weight back to zero again the next time the item is imported from your store.
			 * @default false
			 */
			syncWeightZero: boolean | null;
			/**
			 * @description Tax calculation
			 * @default channel
			 * @enum {string|null}
			 */
			taxCalculation: "channel" | "taxRate" | "taxjar" | null;
			/**
			 * Tax ID
			 * @description This will be added to the "ship from" address the commerical invoices when shipping labels are generated. If the dropship provider has added their tax id in their settings, their tax id will be used instead of the value here.
			 */
			taxId?: string | null;
			/**
			 * @description Tax included
			 * @default true
			 */
			taxIncluded: boolean;
			/**
			 * Format: int32
			 * @description Tax rate
			 */
			taxRateId?: number | null;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean;
			/**
			 * Handling of unallocated dropship line items
			 * @description When finalizing an order, dropship items not allocated to a dropship provider. When this happens, you can either pause the order to resolve. Or, continue to finalize and process the order, allow the line item to be mapped later.
			 * @default pause
			 * @enum {string|null}
			 */
			unallocatedDropship: "ignore" | "pause" | null;
			/**
			 * @description Unassigned sale items
			 * @default include
			 * @enum {string|null}
			 */
			unassignedSaleItems: "include" | "exclude" | "block" | null;
			/**
			 * @description Unpublish no inventory
			 * @default false
			 */
			unpublishNoInventory: boolean | null;
			/**
			 * Custom order routing API
			 * @description Use the Jetti API to automatically route and select the appropriate dropship provider during checkout and when finalizing orders.
			 * @default false
			 */
			useOrderRoutingEndpoint: boolean | null;
			/**
			 * @description Variant import scope
			 * @default product
			 * @enum {string|null}
			 */
			variantImportScope: "product" | "mapping" | null;
			/**
			 * @description Variant logging
			 * @default false
			 */
			variantLogging: boolean | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/**
			 * @description Warehouse sync
			 * @default default
			 * @enum {string|null}
			 */
			warehouseSync: "default" | "all" | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
		};
		"channel-commission-rate": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * @description Commission rate
			 * @default 0
			 */
			commissionRate: number | null;
			/**
			 * @description Commission rate type
			 * @default percentage
			 * @enum {string|null}
			 */
			commissionRateType: "percentage" | "fixed" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * @description Filter type
			 * @default none
			 * @enum {string|null}
			 */
			filterType: "tags" | "none" | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"channel-commission-rate-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * @description Commission rate
			 * @default 0
			 */
			commissionRate: number | null;
			/**
			 * @description Commission rate type
			 * @default percentage
			 * @enum {string|null}
			 */
			commissionRateType: "percentage" | "fixed" | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * @description Filter type
			 * @default none
			 * @enum {string|null}
			 */
			filterType: "tags" | "none" | null;
			/** @description Tags */
			tags?: string[] | null;
		};
		"channel-custom-field": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose: "name" | "description";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"channel-custom-field-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose: "name" | "description";
		};
		"channel-product": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId: string;
			/** @description Handle */
			handle?: string | null;
			/** @description Hash */
			hash?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"channel-product-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description External */
			externalId: string;
			/** @description Handle */
			handle?: string | null;
			/** @description Hash */
			hash?: string | null;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId: number;
		};
		"channel-shipment-update": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "success" | "error" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"channel-shipment-update-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "success" | "error" | null;
			/** @description Status message */
			statusMessage?: string | null;
		};
		"channel-shipping-rate": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"channel-shipping-rate-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
		};
		"channel-variant": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Cost price update */
			costPriceUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Error message */
			errorMessage?: string | null;
			/** @description External group */
			externalGroupId?: string | null;
			/** @description External */
			externalId: string;
			/** @description External sku */
			externalSku?: string | null;
			/** @description Hash */
			hash?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Inventory update */
			inventoryUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Parent hash */
			parentHash?: string | null;
			/** @description Price update */
			priceUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Publish update */
			publishUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Source
			 * @default shopify
			 * @enum {string}
			 */
			source:
				| "bigCommerce"
				| "custom"
				| "duoplane"
				| "elasticPath"
				| "magento"
				| "salesforce"
				| "shopify"
				| "wooCommerce";
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "initialized" | "connected" | "error" | "pending" | "ignore";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
			/** @description Variant parcels hash */
			variantParcelsHash?: string | null;
		};
		"channel-variant-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Cost price update */
			costPriceUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Error message */
			errorMessage?: string | null;
			/** @description External group */
			externalGroupId?: string | null;
			/** @description External */
			externalId: string;
			/** @description External sku */
			externalSku?: string | null;
			/** @description Hash */
			hash?: string | null;
			/** @description Inventory update */
			inventoryUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Parent hash */
			parentHash?: string | null;
			/** @description Price update */
			priceUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Publish update */
			publishUpdate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Source
			 * @default shopify
			 * @enum {string}
			 */
			source:
				| "bigCommerce"
				| "custom"
				| "duoplane"
				| "elasticPath"
				| "magento"
				| "salesforce"
				| "shopify"
				| "wooCommerce";
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "initialized" | "connected" | "error" | "pending" | "ignore";
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
			/** @description Variant parcels hash */
			variantParcelsHash?: string | null;
		};
		"channel-variant-import": {
			/**
			 * Format: int32
			 * @description Channel variant
			 */
			channelVariantId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Product payload */
			productPayload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Variant payload */
			variantPayload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
		};
		"channel-variant-import-new": {
			/**
			 * Format: int32
			 * @description Channel variant
			 */
			channelVariantId: number;
			/** @description Product payload */
			productPayload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Variant payload */
			variantPayload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
		};
		"channel-variant-update": {
			/**
			 * Format: int32
			 * @description Channel variant
			 */
			channelVariantId?: number | null;
			/** @description Compare at price */
			compareAtPrice?: number | null;
			/** @description Cost price */
			costPrice?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Hide when no cost price */
			hideWhenNoCostPrice?: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Price */
			price?: number | null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "success" | "error" | "pending" | "skipped" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * @description Type
			 * @enum {string|null}
			 */
			type?: "inventory" | "price" | "publish" | "cost_price" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant inventory update
			 */
			variantInventoryUpdateId?: number | null;
		};
		"channel-variant-update-new": {
			/**
			 * Format: int32
			 * @description Channel variant
			 */
			channelVariantId?: number | null;
			/** @description Compare at price */
			compareAtPrice?: number | null;
			/** @description Cost price */
			costPrice?: number | null;
			/** @description Hide when no cost price */
			hideWhenNoCostPrice?: boolean | null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Price */
			price?: number | null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "success" | "error" | "pending" | "skipped" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * @description Type
			 * @enum {string|null}
			 */
			type?: "inventory" | "price" | "publish" | "cost_price" | null;
			/**
			 * Format: int32
			 * @description Variant inventory update
			 */
			variantInventoryUpdateId?: number | null;
		};
		comment: {
			/** @description Content */
			content?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/**
			 * Format: int32
			 * @description Goods receipt
			 */
			goodsReceiptId?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"comment-new": {
			/** @description Content */
			content?: string | null;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/**
			 * Format: int32
			 * @description Goods receipt
			 */
			goodsReceiptId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId?: number | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"company-client": {
			/**
			 * Format: int32
			 * @description Client
			 */
			clientId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"company-client-new": {
			/**
			 * Format: int32
			 * @description Client
			 */
			clientId: number;
		};
		"company-referral": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number | null;
			/**
			 * Format: int32
			 * @description Referral
			 */
			referralId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"company-referral-new": {
			/**
			 * Format: int32
			 * @description Referral
			 */
			referralId: number;
		};
		"company-setting": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Key */
			key: string;
			/**
			 * @description Scope
			 * @default ui
			 * @enum {string|null}
			 */
			scope: "ui" | "qualification" | "feature" | "content" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value:
				| Record<string, never>
				| unknown[]
				| boolean
				| number
				| number
				| string;
		};
		"company-setting-new": {
			/** @description Key */
			key: string;
			/**
			 * @description Scope
			 * @default ui
			 * @enum {string|null}
			 */
			scope: "ui" | "qualification" | "feature" | "content" | null;
			/** @description Value */
			value:
				| Record<string, never>
				| unknown[]
				| boolean
				| number
				| number
				| string;
		};
		currency: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Iso */
			iso: string;
			/** @description Name */
			name: string;
			/**
			 * @description Round up
			 * @default false
			 */
			roundUp: boolean | null;
			/** @description Symbol */
			symbol: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Use live rates
			 * @default true
			 */
			useLiveRates: boolean | null;
		};
		"currency-new": {
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description Iso */
			iso: string;
			/** @description Name */
			name: string;
			/**
			 * @description Round up
			 * @default false
			 */
			roundUp: boolean | null;
			/** @description Symbol */
			symbol: string;
			/**
			 * @description Use live rates
			 * @default true
			 */
			useLiveRates: boolean | null;
		};
		"custom-channel": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Connected at
			 */
			connectedAt?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Fulfillment endpoint */
			fulfillmentEndpoint?: string | null;
			/** @description Google feed location */
			googleFeedLocation?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Inventory endpoint */
			inventoryEndpoint?: string | null;
			/** @description Name */
			name: string;
			/** @description Post to channel endpoint */
			postToChannelEndpoint?: string | null;
			/** @description Price endpoint */
			priceEndpoint?: string | null;
			/**
			 * @description Products feed format
			 * @default custom
			 * @enum {string|null}
			 */
			productsFeedFormat: "custom" | "dreamingCode" | "webhook" | null;
			/** @description Publishing endpoint */
			publishingEndpoint?: string | null;
			/** @description Resource location */
			resourceLocation?: string | null;
			/**
			 * @description Sales feed format
			 * @default custom
			 * @enum {string|null}
			 */
			salesFeedFormat: "custom" | "shipStation" | "webhook" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"custom-channel-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Connected at
			 */
			connectedAt?: string | null;
			/** @description Fulfillment endpoint */
			fulfillmentEndpoint?: string | null;
			/** @description Google feed location */
			googleFeedLocation?: string | null;
			/** @description Inventory endpoint */
			inventoryEndpoint?: string | null;
			/** @description Name */
			name: string;
			/** @description Post to channel endpoint */
			postToChannelEndpoint?: string | null;
			/** @description Price endpoint */
			priceEndpoint?: string | null;
			/**
			 * @description Products feed format
			 * @default custom
			 * @enum {string|null}
			 */
			productsFeedFormat: "custom" | "dreamingCode" | "webhook" | null;
			/** @description Publishing endpoint */
			publishingEndpoint?: string | null;
			/** @description Resource location */
			resourceLocation?: string | null;
			/**
			 * @description Sales feed format
			 * @default custom
			 * @enum {string|null}
			 */
			salesFeedFormat: "custom" | "shipStation" | "webhook" | null;
		};
		"custom-field": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Field scope
			 * @default all
			 * @enum {string|null}
			 */
			fieldScope: "all" | "selected" | null;
			/**
			 * @description Field type
			 * @default string
			 * @enum {string|null}
			 */
			fieldType: "string" | "text" | "image" | "file" | "options" | null;
			/** @description Help text */
			helpText?: string | null;
			/** @description Icon */
			icon?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Label */
			label?: string | null;
			/** @description Name */
			name: string;
			/** @description Namespace */
			namespace?: string | null;
			/** @description Options */
			options?: string[] | null;
			/**
			 * @description Resource
			 * @default any
			 * @enum {string|null}
			 */
			resource:
				| "any"
				| "dropship_provider"
				| "dropshipment"
				| "dropshipment_item"
				| "reseller"
				| "purchase"
				| "purchase_item"
				| "sale"
				| "sale_item"
				| "sale_return"
				| "sale_return_item"
				| "variant"
				| "vendor"
				| null;
			/** @description Show in reseller portal */
			showInResellerPortal?: boolean | null;
			/**
			 * @description Show in return portal
			 * @default false
			 */
			showInReturnPortal: boolean | null;
			/**
			 * @description Show in vendor portal
			 * @default false
			 */
			showInVendorPortal: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"custom-field-new": {
			/**
			 * @description Field scope
			 * @default all
			 * @enum {string|null}
			 */
			fieldScope: "all" | "selected" | null;
			/**
			 * @description Field type
			 * @default string
			 * @enum {string|null}
			 */
			fieldType: "string" | "text" | "image" | "file" | "options" | null;
			/** @description Help text */
			helpText?: string | null;
			/** @description Icon */
			icon?: string | null;
			/** @description Label */
			label?: string | null;
			/** @description Name */
			name: string;
			/** @description Namespace */
			namespace?: string | null;
			/** @description Options */
			options?: string[] | null;
			/**
			 * @description Resource
			 * @default any
			 * @enum {string|null}
			 */
			resource:
				| "any"
				| "dropship_provider"
				| "dropshipment"
				| "dropshipment_item"
				| "reseller"
				| "purchase"
				| "purchase_item"
				| "sale"
				| "sale_item"
				| "sale_return"
				| "sale_return_item"
				| "variant"
				| "vendor"
				| null;
			/** @description Show in reseller portal */
			showInResellerPortal?: boolean | null;
			/**
			 * @description Show in return portal
			 * @default false
			 */
			showInReturnPortal: boolean | null;
			/**
			 * @description Show in vendor portal
			 * @default false
			 */
			showInVendorPortal: boolean | null;
		};
		"custom-field-dropship-provider": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-dropship-provider-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-dropshipment": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-dropshipment-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-dropshipment-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Dropshipment item
			 */
			dropshipmentItemId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-dropshipment-item-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Dropshipment item
			 */
			dropshipmentItemId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-purchase": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-purchase-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-purchase-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-purchase-item-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-reseller": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-reseller-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-item-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-return": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-return-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-return-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale return item
			 */
			saleReturnItemId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-sale-return-item-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale return item
			 */
			saleReturnItemId: number;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
		};
		"custom-field-scope": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"custom-field-scope-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId?: number | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"custom-field-variant": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Source
			 * @default manual
			 * @enum {string|null}
			 */
			source: "manual" | "inventory_feed" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"custom-field-variant-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Source
			 * @default manual
			 * @enum {string|null}
			 */
			source: "manual" | "inventory_feed" | null;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"custom-field-vendor": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId: number;
		};
		"custom-field-vendor-new": {
			/**
			 * Format: int32
			 * @description Custom field
			 */
			customFieldId: number;
			/** @description Object */
			object?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Value */
			value?: string | null;
			/** @description Values */
			values?: string[] | null;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId: number;
		};
		customer: {
			/** @description Accounts email */
			accountsEmail?: string | null;
			/** @description Company code */
			companyCode?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Email */
			email: string;
			/** @description Fax */
			fax?: string | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Order email */
			orderEmail?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId?: number | null;
			/** @description Returns email */
			returnsEmail?: string | null;
			/** @description Sale notes */
			saleNotes?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "disabled" | null;
			/** @description Stripe */
			stripeId?: string | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tax number */
			taxNumber?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"customer-new": {
			/** @description Accounts email */
			accountsEmail?: string | null;
			/** @description Company code */
			companyCode?: string | null;
			/** @description Email */
			email: string;
			/** @description Fax */
			fax?: string | null;
			/** @description First name */
			firstName?: string | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Order email */
			orderEmail?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId?: number | null;
			/** @description Returns email */
			returnsEmail?: string | null;
			/** @description Sale notes */
			saleNotes?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "disabled" | null;
			/** @description Stripe */
			stripeId?: string | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tax number */
			taxNumber?: string | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"customer-address": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/** @description State */
			state?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zip */
			zip?: string | null;
		};
		"customer-address-new": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId: number;
			/** @description Name */
			name?: string | null;
			/** @description State */
			state?: string | null;
			/** @description Zip */
			zip?: string | null;
		};
		"data-export": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * Format: date-time
			 * @description Completed at
			 */
			completedAt?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Export type
			 * @enum {string|null}
			 */
			exportType?:
				| "adjustments"
				| "connected_items"
				| "cost_prices"
				| "dropship_provider_users"
				| "dropship_providers"
				| "inventory_feed"
				| "inventory_levels"
				| "missing_items"
				| "payment_report"
				| "purchase_invoice_items"
				| "purchase_invoice_payments"
				| "purchases"
				| "replenishments"
				| "sale_returns"
				| "shipping_labels"
				| "stock_take"
				| "transactions"
				| "transfers"
				| "vendor_mappings"
				| null;
			/** @description File uri */
			fileUri?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * Format: int32
			 * @description Inventory export
			 */
			inventoryExportId?: number | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * Format: date-time
			 * @description Queued at
			 */
			queuedAt?: string | null;
			/**
			 * @description Read
			 * @default false
			 */
			read: boolean | null;
			/**
			 * Format: date-time
			 * @description Started at
			 */
			startedAt?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "pending" | "started" | "complete" | "error" | "skipped" | null;
			/**
			 * Format: int32
			 * @description Stock take
			 */
			stockTakeId?: number | null;
			/**
			 * Format: int32
			 * @description Template
			 */
			templateId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"data-export-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * Format: date-time
			 * @description Completed at
			 */
			completedAt?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Export type
			 * @enum {string|null}
			 */
			exportType?:
				| "adjustments"
				| "connected_items"
				| "cost_prices"
				| "dropship_provider_users"
				| "dropship_providers"
				| "inventory_feed"
				| "inventory_levels"
				| "missing_items"
				| "payment_report"
				| "purchase_invoice_items"
				| "purchase_invoice_payments"
				| "purchases"
				| "replenishments"
				| "sale_returns"
				| "shipping_labels"
				| "stock_take"
				| "transactions"
				| "transfers"
				| "vendor_mappings"
				| null;
			/** @description File uri */
			fileUri?: string | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * Format: int32
			 * @description Inventory export
			 */
			inventoryExportId?: number | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * Format: date-time
			 * @description Queued at
			 */
			queuedAt?: string | null;
			/**
			 * @description Read
			 * @default false
			 */
			read: boolean | null;
			/**
			 * Format: date-time
			 * @description Started at
			 */
			startedAt?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "pending" | "started" | "complete" | "error" | "skipped" | null;
			/**
			 * Format: int32
			 * @description Stock take
			 */
			stockTakeId?: number | null;
			/**
			 * Format: int32
			 * @description Template
			 */
			templateId?: number | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"data-import": {
			/**
			 * Format: int32
			 * @description Added
			 * @default 0
			 */
			added: number | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * Format: date-time
			 * @description Completed at
			 */
			completedAt?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Error messages
			 * @default []
			 */
			errorMessages: string[] | null;
			/** @description Error uri */
			errorUri?: string | null;
			/**
			 * Format: int32
			 * @description Errors
			 * @default 0
			 */
			errors: number | null;
			/** @description File size */
			fileSize?: string | null;
			/** @description File uri */
			fileUri?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Import type
			 * @enum {string|null}
			 */
			importType?:
				| "adjustment_import"
				| "cost_prices"
				| "dropship_provider_users"
				| "dropship_providers"
				| "inventory_feed_mapping"
				| "inventory_feed_prices"
				| "inventory_feed"
				| "sales"
				| "stock_take"
				| "tracking_import"
				| "vendor_mappings"
				| "warehouse_location_import"
				| null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * Format: date-time
			 * @description Queued at
			 */
			queuedAt?: string | null;
			/**
			 * @description Read
			 * @default false
			 */
			read: boolean | null;
			/**
			 * Format: int32
			 * @description Skipped
			 * @default 0
			 */
			skipped: number | null;
			/** @description Skipped uri */
			skippedUri?: string | null;
			/**
			 * Format: date-time
			 * @description Started at
			 */
			startedAt?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "pending" | "started" | "complete" | "error" | "skipped" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * Format: int32
			 * @description Stock take
			 */
			stockTakeId?: number | null;
			/**
			 * Format: int32
			 * @description Updated
			 * @default 0
			 */
			updated: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"data-import-new": {
			/**
			 * Format: int32
			 * @description Added
			 * @default 0
			 */
			added: number | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * Format: date-time
			 * @description Completed at
			 */
			completedAt?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Error messages
			 * @default []
			 */
			errorMessages: string[] | null;
			/** @description Error uri */
			errorUri?: string | null;
			/**
			 * Format: int32
			 * @description Errors
			 * @default 0
			 */
			errors: number | null;
			/** @description File size */
			fileSize?: string | null;
			/** @description File uri */
			fileUri?: string | null;
			/**
			 * @description Import type
			 * @enum {string|null}
			 */
			importType?:
				| "adjustment_import"
				| "cost_prices"
				| "dropship_provider_users"
				| "dropship_providers"
				| "inventory_feed_mapping"
				| "inventory_feed_prices"
				| "inventory_feed"
				| "sales"
				| "stock_take"
				| "tracking_import"
				| "vendor_mappings"
				| "warehouse_location_import"
				| null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * Format: date-time
			 * @description Queued at
			 */
			queuedAt?: string | null;
			/**
			 * @description Read
			 * @default false
			 */
			read: boolean | null;
			/**
			 * Format: int32
			 * @description Skipped
			 * @default 0
			 */
			skipped: number | null;
			/** @description Skipped uri */
			skippedUri?: string | null;
			/**
			 * Format: date-time
			 * @description Started at
			 */
			startedAt?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "pending" | "started" | "complete" | "error" | "skipped" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * Format: int32
			 * @description Stock take
			 */
			stockTakeId?: number | null;
			/**
			 * Format: int32
			 * @description Updated
			 * @default 0
			 */
			updated: number | null;
		};
		"dropship-provider": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/**
			 * @description Address routing
			 * @enum {string|null}
			 */
			addressRouting?: "default" | "requireAssigned" | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * @description Any vendor
			 * @default false
			 */
			anyVendor: boolean | null;
			/**
			 * @description Apply discount code
			 * @default false
			 */
			applyDiscountCode: boolean | null;
			/** @description Authentication secret */
			authenticationSecret?: string | null;
			/** @description Authentication token */
			authenticationToken?: string | null;
			/** @description Automatically pickup */
			automaticallyPickup?: boolean | null;
			/**
			 * @description Automatically send label
			 * @default false
			 */
			automaticallySendLabel: boolean | null;
			/** @description Calculate cost prices */
			calculateCostPrices?: boolean | null;
			/** @description City */
			city?: string | null;
			/**
			 * @description Combine rates
			 * @default false
			 */
			combineRates: boolean | null;
			/**
			 * @description Commission method
			 * @default retained
			 * @enum {string|null}
			 */
			commissionMethod: "retained" | "reverse" | null;
			/** @description This is the percentage or fixed amount of the price you will keep. For example if choosing percentage, enter 20 to deduct 20% from the retail price on the sales order. This is based on the item price in the cart, so its important that prices are up to date. */
			commissionRate?: number | null;
			/** @description Commission rate discount */
			commissionRateDiscount?: boolean | null;
			/** @description Commission rate discount codes */
			commissionRateDiscountCodes?: string[] | null;
			/**
			 * Limit the discount codes to apply
			 * @description Select whether the payout should be reduced for all discount codes. Or, only a subset of the discount codes used on the website. You may want to use this to omit certain discount codes from discounting payouts.
			 * @default all
			 * @enum {string|null}
			 */
			commissionRateDiscountScope: "all" | "selected" | null;
			/**
			 * Percentage split for discount
			 * @description Select the percentage of the discount to be paid out to the brand. For example, if you want allocate all of the discount to the brand, enter 100%.
			 * @default 100
			 */
			commissionRateDiscountSplit: number;
			/** @description Commission rate endpoint */
			commissionRateEndpoint?: string | null;
			/**
			 * @description Commission rate fixed type
			 * @default deduct_by
			 * @enum {string|null}
			 */
			commissionRateFixedType: "set_to" | "deduct_by" | null;
			/**
			 * @description Commission rate type
			 * @enum {string|null}
			 */
			commissionRateType?: "percentage" | "fixed" | null;
			/**
			 * Tax calculation for commission invoices
			 * @description When invoicing for the commission amount, a different amount can be applied than the amount of tax applied on the customer order. For example, if no tax was applied to the customer order (e.g. where the customer an international customer placed an order), tax may still be applicable on the commission amount (e.g. where the vendor and marketplace are in the same tax justistriction).
			 * @default disabled
			 * @enum {string|null}
			 */
			commissionTaxCalculation: "disabled" | "manual" | null;
			/**
			 * Format: int32
			 * @description Commission tax rate
			 */
			commissionTaxRateId?: number | null;
			/**
			 * Format: int32
			 * @description Company referral
			 */
			companyReferralId?: number | null;
			/** @description Countries */
			countries?: string[] | null;
			/** @description Country */
			country?: string | null;
			/**
			 * @description Country filter
			 * @default all
			 * @enum {string|null}
			 */
			countryFilter: "all" | "include" | "exclude" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Default address
			 * @default default
			 * @enum {string|null}
			 */
			defaultAddress: "default" | "selected" | null;
			/**
			 * @description Default return address
			 * @default default
			 * @enum {string|null}
			 */
			defaultReturnAddress: "default" | "selected" | null;
			/** @description Default shipping code */
			defaultShippingCode?: string | null;
			/**
			 * Format: float
			 * @description Default weight
			 * @default 0
			 */
			defaultWeight: number | null;
			/**
			 * @description Default weight unit
			 * @default g
			 * @enum {string|null}
			 */
			defaultWeightUnit: "g" | "kg" | "oz" | "lb" | null;
			/** @description Discount code */
			discountCode?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/** @description Dropshipment splitting endpoint */
			dropshipmentSplittingEndpoint?: string | null;
			/**
			 * @description Email copy
			 * @default false
			 */
			emailCopy: boolean | null;
			/**
			 * @description Enable publishing
			 * @default false
			 */
			enablePublishing: boolean | null;
			/** @description External */
			externalId?: string | null;
			/** @description External payment */
			externalPaymentId?: string | null;
			/**
			 * Payment status when syncing orders
			 * @description Select when the order should be marked as paid within the dropship providers store. Some dropship providers may require orders to be immediately marked as paid if they have a shipping or 3PL system connected.
			 * @default ignore
			 * @enum {string|null}
			 */
			externalPaymentStatus: "ignore" | "onPayment" | "onOrder" | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Delimiter used in the shipping files
			 * @description You can leave this blank if you are using a regular CSV file. However, some dropship providers might want to import TSV or use a customer character for separating the columns in the file (e.g. the ":" character).
			 */
			ftpShipmentImportDelimiter?: string | null;
			/**
			 * @description Ftp shipment import type
			 * @default single
			 * @enum {string|null}
			 */
			ftpShipmentImportType: "single" | "combined" | null;
			/** @description Generate shipping labels */
			generateShippingLabels?: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Ignore cost price alerts
			 * @default false
			 */
			ignoreCostPriceAlerts: boolean | null;
			/** @description Import adjustments */
			importAdjustments?: boolean | null;
			/**
			 * @description Include customer email
			 * @enum {string|null}
			 */
			includeCustomerEmail?:
				| "customer"
				| "company"
				| "companyUnique"
				| "reference"
				| "none"
				| null;
			/**
			 * @description Include customer invoice
			 * @default none
			 * @enum {string|null}
			 */
			includeCustomerInvoice: "none" | "vendor" | "sale" | null;
			/** @description Include customer phone */
			includeCustomerPhone?: boolean | null;
			/**
			 * @description Include invoice
			 * @default false
			 */
			includeInvoice: boolean | null;
			/** @description Include label in packing slip */
			includeLabelInPackingSlip?: boolean | null;
			/**
			 * @description Include order summary
			 * @default true
			 */
			includeOrderSummary: boolean | null;
			/**
			 * @description Include a packing slip  when sending the order notification, or, when syncing an order into the dropship providers platform. They'll still be able to download from the dropship portal if needed.
			 * @default true
			 */
			includePackingSlip: boolean | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Internal notes */
			internalNotes?: string | null;
			/**
			 * Internal reference template
			 * @description When generating purchase orders, an reference can be generated using a template to confirm with your own internal structure. For example, if you wanted to assign the reference ORDER_10001-01_MYVENDOR you can use the template "ORDER_NAME_{{REFERENCE}}_{{name}}".
			 */
			internalReferenceTemplate?: string | null;
			/** @description Internal reference template date format */
			internalReferenceTemplateDateFormat?: string | null;
			/** @description Internal tags */
			internalTags?: string[] | null;
			/** @description Inventory routing */
			inventoryRouting?: boolean | null;
			/**
			 * How do you want to sync inventory?
			 * @description Jetti can automatically publish items from an inventory feed. Once published, pricing and inventory levels will then automatically be kept in sync. Setting up an inventory feed usually requires generating a set of API credentials for your dropship provider's platform. Or, setting up a CSV file to import. If you don't want to sync an inventory feed, you can also set Jetti up so they can update the pricing and inventory levels of their products currently in your store.
			 * @enum {string|null}
			 */
			inventorySetup?: "feed" | "mapped" | "none" | null;
			/**
			 * @description Inventory setup status
			 * @default complete
			 * @enum {string|null}
			 */
			inventorySetupStatus:
				| "pending"
				| "requested"
				| "complete"
				| "error"
				| null;
			/** @description Inventory setup status message */
			inventorySetupStatusMessage?: string | null;
			/**
			 * @description Invoice notification
			 * @enum {string|null}
			 */
			invoiceNotification?:
				| "staff"
				| "dropship_provider"
				| "both"
				| "none"
				| null;
			/**
			 * Invoice shipping
			 * @description Setup the invoicing flow for shipping. You can opt to add funds to the payout, deduct funds from the payout (e.g. to cover the costs of shipping labels) or handle commission flows on the shipping.
			 */
			invoiceShipping?: boolean | null;
			/**
			 * Eligibility for free shipping
			 * @description Select the conditions under which there should be an invoice / payout for the shipping amount. You can select between always. Or, only invoicing a shipping amount when there was shipping income collected from the customer.
			 * @default all
			 * @enum {string|null}
			 */
			invoiceShippingEligibility: "all" | "freeShipping" | null;
			/**
			 * @description Invoice shipping source
			 * @enum {string|null}
			 */
			invoiceShippingSource?:
				| "shippingRate"
				| "dropshipment"
				| "customer"
				| null;
			/**
			 * How should the shipping amount be applied?
			 * @description Select whether to pay the vendor for the shipping amount, deduct the amount from the vendor. Or, whether you want to payout an amount, but deduct a commission from that amount.
			 * @enum {string|null}
			 */
			invoiceShippingType?: "addition" | "deduct" | "commission" | null;
			/**
			 * Format: int32
			 * @description Invoice template
			 */
			invoiceTemplateId?: number | null;
			/** @description Invoice terms */
			invoiceTerms?: string | null;
			/**
			 * @description Invoicing stage
			 * @enum {string|null}
			 */
			invoicingStage?:
				| "beforeShipping"
				| "afterShipping"
				| "delivered"
				| "manual"
				| null;
			/**
			 * @description Is valid
			 * @default true
			 */
			isValid: boolean | null;
			/**
			 * Allow-list of ship-to countries to generate labels
			 * @description Select the countries that labels should be generated for. This should be the ship-to counties (i.e. where the customer is located).
			 */
			labelCountries?: string[] | null;
			/**
			 * What should happen when labels cannot be generated?
			 * @description When labels cannot be generated (e.g. maybe there is an error, or, the labels aren't provided for the destination), Jetti can either prevent the order from being shipped / sent. Or, allow the order to be processed and the instead, allow tracking to be entered.
			 * @default prevent
			 * @enum {string|null}
			 */
			labelError: "prevent" | "tracking" | null;
			/**
			 * @description Label format
			 * @default pdf
			 * @enum {string|null}
			 */
			labelFormat: "pdf" | "png" | "pdf_4x6" | "pdf_4x8" | null;
			/** @description Label name */
			labelName?: string | null;
			/**
			 * How should the shipping label be selected?
			 * @enum {string|null}
			 */
			labelRouting?: "bestMatch" | "cheapest" | null;
			/**
			 * When should labels be used?
			 * @description Select whether to generate labels for all shipments, or limit to only certain shipments, such as domestic or international.
			 * @default all
			 * @enum {string|null}
			 */
			labelScope: "all" | "domestic" | "international" | "selected" | null;
			/** @description Last name */
			lastName?: string | null;
			/**
			 * Format: int32
			 * @description Magento store
			 */
			magentoStoreId?: number | null;
			/** @description Minimum order requirements */
			minimumOrderRequirements?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Name */
			name: string;
			/** @description Order carrier code */
			orderCarrierCode?: string | null;
			/** @description Order currency code */
			orderCurrencyCode?: string | null;
			/** @description Order endpoint path */
			orderEndpointPath?: string | null;
			/** @description Order endpoint url */
			orderEndpointUrl?: string | null;
			/** @description Order flatten seperator */
			orderFlattenSeperator?: string | null;
			/**
			 * @description Order format
			 * @default csv
			 * @enum {string|null}
			 */
			orderFormat: "csv" | "json" | "xml" | null;
			/** @description Order language code */
			orderLanguageCode?: string | null;
			/** @description Order minimum */
			orderMinimum?: boolean | null;
			/** @description Order minimum amount */
			orderMinimumAmount?: number | null;
			/**
			 * @description Order platform
			 * @enum {string|null}
			 */
			orderPlatform?:
				| "api"
				| "bigCommerce"
				| "digital"
				| "email"
				| "ftp"
				| "magento"
				| "magentoLegacy"
				| "manual"
				| "other"
				| "phone"
				| "prestaShop"
				| "shipstation"
				| "shopify"
				| "squareSpace"
				| "tradeGecko"
				| "website"
				| "wooCommerce"
				| "wooCommerceLegacy"
				| null;
			/**
			 * @description Order setup status
			 * @default pending
			 * @enum {string|null}
			 */
			orderSetupStatus: "pending" | "requested" | "complete" | "error" | null;
			/** @description Order setup status message */
			orderSetupStatusMessage?: string | null;
			/**
			 * Order splitting
			 * @description You can optionally split items across multiple dropship purchases if needed within the same vendor. For example, you may want to create a separate purchase order per item on the order if the vendor ships larger items.
			 * @default group
			 * @enum {string|null}
			 */
			orderSplitting:
				| "group"
				| "splitQuantity"
				| "splitTag"
				| "endpoint"
				| null;
			/** @description Order splitting endpoint */
			orderSplittingEndpoint?: string | null;
			/** @description Order status code */
			orderStatusCode?: string | null;
			/**
			 * Format: int32
			 * @description Order template
			 */
			orderTemplateId?: number | null;
			/**
			 * @description Order template type
			 * @default none
			 * @enum {string|null}
			 */
			orderTemplateType: "none" | "custom" | "default" | null;
			/** @description Order use proxy */
			orderUseProxy?: boolean | null;
			/** @description Ost user */
			ostUser?: string | null;
			/**
			 * Format: int32
			 * @description Packaging weight
			 * @default 0
			 */
			packagingWeight: number | null;
			/**
			 * Send payments to vendors automatically
			 * @description Automatically pay the vendor for any outstanding invoices. Vendors will be sent a confirmation email. You will also receive an alert if any payments aren't successfully sent (e.g. the payment source is declined).
			 */
			payAutomatically?: boolean | null;
			/** @description Payment code */
			paymentCode?: string | null;
			/**
			 * @description Payment day
			 * @default monday
			 * @enum {string|null}
			 */
			paymentDay:
				| "monday"
				| "tuesday"
				| "wednesday"
				| "thursday"
				| "friday"
				| "saturday"
				| "sunday"
				| null;
			/**
			 * @description Payment day monthly
			 * @default firstDay
			 * @enum {string|null}
			 */
			paymentDayMonthly:
				| "firstMonday"
				| "firstDay"
				| "lastDay"
				| "lastFriday"
				| null;
			/**
			 * Format: int32
			 * @description Payment days
			 */
			paymentDays?: number | null;
			/** @description Payment message */
			paymentMessage?: string | null;
			/**
			 * Format: int32
			 * @description Payment method
			 */
			paymentMethodId?: number | null;
			/**
			 * @description Payment module
			 * @enum {string|null}
			 */
			paymentModule?: "enabled" | "disabled" | null;
			/** @description Payment notes */
			paymentNotes?: string | null;
			/**
			 * @description Payment schedule
			 * @default daily
			 * @enum {string|null}
			 */
			paymentSchedule: "daily" | "weekly" | "monthly" | null;
			/**
			 * @description Payment setup status
			 * @default pending
			 * @enum {string|null}
			 */
			paymentSetupStatus: "pending" | "requested" | "complete" | "error" | null;
			/** @description Payment setup status message */
			paymentSetupStatusMessage?: string | null;
			/** @description Paypal email */
			paypalEmail?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * Currency for order sync
			 * Format: int32
			 * @description When syncing orders, you can convert the prices from the currency in your store with the currency in the vendor's store. This will also convert the price of the shipping into the currency of the store.
			 */
			platformCurrencyId?: number | null;
			/** @description Platform customer external */
			platformCustomerExternalId?: string | null;
			/**
			 * Cancel items in the dropship provider store
			 * @description Orders will be cancelled in the dropship providers store as returns and cancellations are raised in Jetti.
			 * @default none
			 * @enum {string|null}
			 */
			platformExportReturns: "none" | "always" | null;
			/**
			 * @description Platform invoice address
			 * @default company
			 * @enum {string|null}
			 */
			platformInvoiceAddress: "customer" | "company" | "none" | null;
			/**
			 * @description Platform notification
			 * @default default
			 * @enum {string|null}
			 */
			platformNotification: "enable" | "disable" | "default" | null;
			/**
			 * @description Platform price
			 * @default purchase
			 * @enum {string|null}
			 */
			platformPrice: "purchase" | "sale" | "platform" | "zero" | null;
			/**
			 * @description Platform products
			 * @default connected
			 * @enum {string|null}
			 */
			platformProducts: "connected" | "notConnected" | "all" | null;
			/**
			 * @description Platform properties
			 * @default default
			 * @enum {string|null}
			 */
			platformProperties: "default" | "optionValues" | "notes" | null;
			/**
			 * Code
			 * @description System code shipping rate (e.g. "UPS_GROUND").
			 */
			platformShippingCode?: string | null;
			/**
			 * @description Platform shipping cost
			 * @default false
			 */
			platformShippingCost: boolean | null;
			/**
			 * Map the shipping rate on the order
			 * @description When syncing the shipping rate with the dropship providers store, you can change the display of the rates. This may be useful where their shipping platform requires the shipping names/codes to have specific values to be routed correctly.
			 * @default default
			 * @enum {string|null}
			 */
			platformShippingMapping: "default" | "mapping" | "override" | null;
			/**
			 * @description Platform shipping mapping fallback
			 * @default default
			 * @enum {string|null}
			 */
			platformShippingMappingFallback: "default" | "none" | "override" | null;
			/**
			 * @description Platform shipping price
			 * @default true
			 */
			platformShippingPrice: boolean | null;
			/**
			 * Provider
			 * @description Carrier/provider name for the shipping rate (e.g. FedEx).
			 */
			platformShippingProvider?: string | null;
			/**
			 * Service level
			 * @description Service level for the shipping rate (e.g. Ground).
			 */
			platformShippingServiceLevel?: string | null;
			/**
			 * Address format for US states
			 * @description Change the format for US states on the shipping and invoice address.
			 * @default none
			 * @enum {string|null}
			 */
			platformStateCode: "ISO3166-2" | "none" | null;
			/** @description Platform tags */
			platformTags?: string[] | null;
			/**
			 * Tax calculation for reverse invoices
			 * @description When syncing orders with the vendor store, a different tax rate can be applied than the one used to calculate payments. This will have no impact on the payout amounts. However, is typically requested by vendors if they want a specific tax rate applied to their orders other than that calculated at checkout by the marketplace.
			 * @default default
			 * @enum {string|null}
			 */
			platformTax: "default" | "manual" | "eu" | "domestic" | null;
			/**
			 * Format: int32
			 * @description Platform tax rate
			 */
			platformTaxRateId?: number | null;
			/**
			 * Require tracking  number when importing shipments
			 * @description You can disable shipments from being import from your dropship provider if no tracking is available. This may be useful where vendors first mark as shipped and later enter tracking. Or, if you want to sync orders to their platform, but have them enter tracking from the vendor portal.
			 *
			 * If this is enabled, it might mean the shipments are never marked as shipped if the tracking details are not available in their store.
			 * @default disabled
			 * @enum {string|null}
			 */
			platformTrackingRequirement: "skip" | "enabled" | "disabled" | null;
			/** @description Prestashop shop group */
			prestashopShopGroupId?: string | null;
			/**
			 * @description Product type filter
			 * @default all
			 * @enum {string|null}
			 */
			productTypeFilter: "all" | "include" | "exclude" | null;
			/** @description Product types */
			productTypes?: string[] | null;
			/**
			 * Notes to include in packing slip
			 * @description These notes are automatically included on emails, in the dropship portal and when syncing external orders.
			 */
			purchaseNotes?: string | null;
			/** @description Purchase shipping label automatically */
			purchaseShippingLabelAutomatically?: boolean | null;
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/** @description Receiver required */
			receiverRequired?: boolean | null;
			/**
			 * Format: int32
			 * @description Reminder days
			 */
			reminderDays?: number | null;
			/**
			 * @description Require inventory feed variant
			 * @default false
			 */
			requireInventoryFeedVariant: boolean | null;
			/** @default false */
			requiresShippingApproval: boolean | null;
			/**
			 * Format: int32
			 * @description Return dropship provider address
			 */
			returnDropshipProviderAddressId?: number | null;
			/** @description Return in house */
			returnInHouse?: boolean | null;
			/**
			 * Return label type
			 * @description Type of label to generate when creating the return label on sale returns. You can either create a pre-paid scan based return label. Or, a regular shipping label with the ship-to/from addresses switched, so the items are send back from the customer.
			 *
			 * @default paid
			 * @enum {string|null}
			 */
			returnLabelType: "prePaid" | "paid" | null;
			/**
			 * When should pre-paid return labels be generated?
			 * @description Jetti can automatically provide pre-paid return labels from your connected carrier integrations. The return labels are provided seperately from the outbound label. For example, you can provide a return label even if you are not providing the original outbound label.
			 * @enum {string|null}
			 */
			returnLabels?: "none" | "manual" | "onSend" | null;
			/**
			 * @description Return shipment trigger
			 * @default any
			 * @enum {string|null}
			 */
			returnShipmentTrigger: "any" | "none" | null;
			/** @description Returns policy */
			returnsPolicy?: string | null;
			/**
			 * Approval for returns
			 * @description You can automatically set the approval status when returns are raised by staff or customers. A default can be set for all dropship providers in the [returns setup area](/returns). Or, you can specify a different value here if needed.
			 * @default default
			 * @enum {string|null}
			 */
			saleReturnCustomerStatus: "default" | "requested" | "finalized" | null;
			/**
			 * @description Sale return refund trigger
			 * @default none
			 * @enum {string|null}
			 */
			saleReturnRefundTrigger:
				| "none"
				| "any"
				| "draft"
				| "requested"
				| "finalized"
				| "shipped"
				| "received"
				| null;
			/**
			 * @description Send order notification
			 * @default false
			 */
			sendOrderNotification: boolean | null;
			/**
			 * @description Send reminder
			 * @default false
			 */
			sendReminder: boolean | null;
			/**
			 * When should dropship purchase orders be sent?
			 * @description Orders can either be sent in real time, sent in daily batches or you can review before sending. The getting started with Jetti, we recommend setting this to *review before sending*, so no tests orders are accidently sent to the dropship provider.
			 * @enum {string|null}
			 */
			sendingSchedule?: "manual" | "immediate" | "daily" | null;
			/**
			 * @description Sending schedule hour
			 * @default 9
			 */
			sendingScheduleHour: string | null;
			/**
			 * @description Sending schedule minute
			 * @default 0
			 * @enum {string|null}
			 */
			sendingScheduleMinute: "0" | "15" | "30" | "45" | null;
			/** @description Set merchant reference */
			setMerchantReference?: boolean | null;
			/**
			 * @description Shipment routing
			 * @default customer
			 * @enum {string|null}
			 */
			shipmentRouting:
				| "customer"
				| "consolidated"
				| "consolidatedInternational"
				| null;
			/**
			 * Email used for the ship-from address on shipping labels
			 * @description Select which email address should be used when generating shipping labels. You can select either to use the dropship provider's email, or your email. If the dropship provider doesn't have any email set, it will default back to your email.
			 * @default company
			 * @enum {string|null}
			 */
			shippingEmail: "company" | "dropshipProvider" | null;
			/** @description Shipping endpoint */
			shippingEndpoint?: string | null;
			/**
			 * @description Shipping endpoint format
			 * @default none
			 * @enum {string|null}
			 */
			shippingEndpointFormat:
				| "ftp"
				| "json"
				| "none"
				| "googleSheet"
				| "upload"
				| "xml"
				| null;
			/**
			 * @description Shipping endpoint grouping
			 * @default order
			 * @enum {string|null}
			 */
			shippingEndpointGrouping: "order" | "lineItem" | null;
			/**
			 * @description Shipping endpoint mapping
			 * @default default
			 * @enum {string|null}
			 */
			shippingEndpointMapping: "default" | "custom" | null;
			/**
			 * @description Shipping endpoint purpose
			 * @default all
			 * @enum {string|null}
			 */
			shippingEndpointPurpose: "all" | "invoice" | null;
			/**
			 * Phone number used for the ship-from address on shipping labels
			 * @description Select which phone number should be used when generating shipping labels. You can select either to use the dropship provider's phone number, or yours. If the dropship provider doesn't have any phone number set, it will default back to yours.
			 * @default company
			 * @enum {string|null}
			 */
			shippingPhone: "company" | "dropshipProvider" | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/** @description Shipping rates */
			shippingRates?: string | null;
			/**
			 * @description Shipping setup status
			 * @default pending
			 * @enum {string|null}
			 */
			shippingSetupStatus:
				| "pending"
				| "requested"
				| "complete"
				| "error"
				| null;
			/** @description Shipping setup status message */
			shippingSetupStatusMessage?: string | null;
			/**
			 * @description Shipping type
			 * @enum {string|null}
			 */
			shippingType?:
				| "rechargeShipping"
				| "generateShippingLabels"
				| "customRates"
				| "fixed"
				| null;
			/** @description Shipping update extension */
			shippingUpdateExtension?: boolean | null;
			/**
			 * Format: int32
			 * @description Shipping update extension duration
			 * @default 0
			 */
			shippingUpdateExtensionDuration: number | null;
			/** @description Shippo token */
			shippoToken?: string | null;
			/** @description Silence alerts */
			silenceAlerts?: boolean | null;
			/**
			 * @description Sku filter
			 * @default all
			 * @enum {string|null}
			 */
			skuFilter: "all" | "startsWith" | null;
			/** @description Skus */
			skus?: string[] | null;
			/** @description State */
			state?: string | null;
			/**
			 * @description Status
			 * @default accepted
			 * @enum {string|null}
			 */
			status:
				| "pending"
				| "accepted"
				| "onboarding"
				| "away"
				| "disabled"
				| "archived"
				| null;
			/** @description Stripe */
			stripeId?: string | null;
			/**
			 * @description Stripe managed
			 * @default false
			 */
			stripeManaged: boolean | null;
			/**
			 * @description Stripe managed enabled
			 * @default false
			 */
			stripeManagedEnabled: boolean | null;
			/** @description Stripe managed */
			stripeManagedId?: string | null;
			/**
			 * @description Stripe payout
			 * @enum {string|null}
			 */
			stripePayout?: "jetti" | "retailer" | null;
			/**
			 * @description Stripe payout source
			 * @default balance
			 * @enum {string|null}
			 */
			stripePayoutSource: "balance" | "customer" | null;
			/**
			 * @description Sync external returns
			 * @default false
			 */
			syncExternalReturns: boolean | null;
			/**
			 * @description Sync order tax
			 * @default true
			 */
			syncOrderTax: boolean | null;
			/**
			 * @description Tag filter
			 * @default all
			 * @enum {string|null}
			 */
			tagFilter: "all" | "include" | "exclude" | null;
			/**
			 * @description Tag splitting
			 * @default []
			 */
			tagSplitting: string[] | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax calculation
			 * @default disabled
			 * @enum {string|null}
			 */
			taxCalculation: "disabled" | "taxjar" | "channel" | "manual" | null;
			/**
			 * Tax ID
			 * @description Tax ID used for commerical invoices when generating shipping labels for international shipments.
			 */
			taxId?: string | null;
			/**
			 * @description Tax included
			 * @default true
			 */
			taxIncluded: boolean | null;
			/** @description Tax jar token */
			taxJarToken?: string | null;
			/** @description Tax number */
			taxNumber?: string | null;
			/**
			 * Format: int32
			 * @description Tax rate
			 */
			taxRateId?: number | null;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean | null;
			/** @description Terms */
			terms?: string | null;
			/** @description Timezone */
			timezone?: string | null;
			/**
			 * @description Tracking scope
			 * @enum {string|null}
			 */
			trackingScope?: "full" | "none" | null;
			/** @description Transferwise recipient */
			transferwiseRecipientId?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Use channel shipping rate
			 * @default false
			 */
			useChannelShippingRate: boolean | null;
			/**
			 * Enable API Pipeline for commission rates
			 * @description API endpoint for sending the API payload for custom commission rate calculation.
			 * @default false
			 */
			useCommissionRateEndpoint: boolean | null;
			/** @description Use dropshipment splitting endpoint */
			useDropshipmentSplittingEndpoint?: boolean | null;
			/**
			 * @description Use internal reference template
			 * @default false
			 */
			useInternalReferenceTemplate: boolean | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Validation message */
			validationMessage?: string[] | null;
			/** @description W9 form */
			w9Form?: string | null;
			/** @description Website url */
			websiteUrl?: string | null;
			/** @description Xero */
			xeroId?: string | null;
			/** @description Zip */
			zip?: string | null;
			/** @description Zoho */
			zohoId?: string | null;
		};
		"dropship-provider-new": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/**
			 * @description Address routing
			 * @enum {string|null}
			 */
			addressRouting?: "default" | "requireAssigned" | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * @description Any vendor
			 * @default false
			 */
			anyVendor: boolean | null;
			/**
			 * @description Apply discount code
			 * @default false
			 */
			applyDiscountCode: boolean | null;
			/** @description Authentication secret */
			authenticationSecret?: string | null;
			/** @description Authentication token */
			authenticationToken?: string | null;
			/** @description Automatically pickup */
			automaticallyPickup?: boolean | null;
			/**
			 * @description Automatically send label
			 * @default false
			 */
			automaticallySendLabel: boolean | null;
			/** @description Calculate cost prices */
			calculateCostPrices?: boolean | null;
			/** @description City */
			city?: string | null;
			/**
			 * @description Combine rates
			 * @default false
			 */
			combineRates: boolean | null;
			/**
			 * @description Commission method
			 * @default retained
			 * @enum {string|null}
			 */
			commissionMethod: "retained" | "reverse" | null;
			/** @description This is the percentage or fixed amount of the price you will keep. For example if choosing percentage, enter 20 to deduct 20% from the retail price on the sales order. This is based on the item price in the cart, so its important that prices are up to date. */
			commissionRate?: number | null;
			/** @description Commission rate discount */
			commissionRateDiscount?: boolean | null;
			/** @description Commission rate discount codes */
			commissionRateDiscountCodes?: string[] | null;
			/**
			 * Limit the discount codes to apply
			 * @description Select whether the payout should be reduced for all discount codes. Or, only a subset of the discount codes used on the website. You may want to use this to omit certain discount codes from discounting payouts.
			 * @default all
			 * @enum {string|null}
			 */
			commissionRateDiscountScope: "all" | "selected" | null;
			/**
			 * Percentage split for discount
			 * @description Select the percentage of the discount to be paid out to the brand. For example, if you want allocate all of the discount to the brand, enter 100%.
			 * @default 100
			 */
			commissionRateDiscountSplit: number;
			/** @description Commission rate endpoint */
			commissionRateEndpoint?: string | null;
			/**
			 * @description Commission rate fixed type
			 * @default deduct_by
			 * @enum {string|null}
			 */
			commissionRateFixedType: "set_to" | "deduct_by" | null;
			/**
			 * @description Commission rate type
			 * @enum {string|null}
			 */
			commissionRateType?: "percentage" | "fixed" | null;
			/**
			 * Tax calculation for commission invoices
			 * @description When invoicing for the commission amount, a different amount can be applied than the amount of tax applied on the customer order. For example, if no tax was applied to the customer order (e.g. where the customer an international customer placed an order), tax may still be applicable on the commission amount (e.g. where the vendor and marketplace are in the same tax justistriction).
			 * @default disabled
			 * @enum {string|null}
			 */
			commissionTaxCalculation: "disabled" | "manual" | null;
			/**
			 * Format: int32
			 * @description Commission tax rate
			 */
			commissionTaxRateId?: number | null;
			/**
			 * Format: int32
			 * @description Company referral
			 */
			companyReferralId?: number | null;
			/** @description Countries */
			countries?: string[] | null;
			/** @description Country */
			country?: string | null;
			/**
			 * @description Country filter
			 * @default all
			 * @enum {string|null}
			 */
			countryFilter: "all" | "include" | "exclude" | null;
			/**
			 * @description Default address
			 * @default default
			 * @enum {string|null}
			 */
			defaultAddress: "default" | "selected" | null;
			/**
			 * @description Default return address
			 * @default default
			 * @enum {string|null}
			 */
			defaultReturnAddress: "default" | "selected" | null;
			/** @description Default shipping code */
			defaultShippingCode?: string | null;
			/**
			 * Format: float
			 * @description Default weight
			 * @default 0
			 */
			defaultWeight: number | null;
			/**
			 * @description Default weight unit
			 * @default g
			 * @enum {string|null}
			 */
			defaultWeightUnit: "g" | "kg" | "oz" | "lb" | null;
			/** @description Discount code */
			discountCode?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/** @description Dropshipment splitting endpoint */
			dropshipmentSplittingEndpoint?: string | null;
			/**
			 * @description Email copy
			 * @default false
			 */
			emailCopy: boolean | null;
			/**
			 * @description Enable publishing
			 * @default false
			 */
			enablePublishing: boolean | null;
			/** @description External */
			externalId?: string | null;
			/** @description External payment */
			externalPaymentId?: string | null;
			/**
			 * Payment status when syncing orders
			 * @description Select when the order should be marked as paid within the dropship providers store. Some dropship providers may require orders to be immediately marked as paid if they have a shipping or 3PL system connected.
			 * @default ignore
			 * @enum {string|null}
			 */
			externalPaymentStatus: "ignore" | "onPayment" | "onOrder" | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Delimiter used in the shipping files
			 * @description You can leave this blank if you are using a regular CSV file. However, some dropship providers might want to import TSV or use a customer character for separating the columns in the file (e.g. the ":" character).
			 */
			ftpShipmentImportDelimiter?: string | null;
			/**
			 * @description Ftp shipment import type
			 * @default single
			 * @enum {string|null}
			 */
			ftpShipmentImportType: "single" | "combined" | null;
			/** @description Generate shipping labels */
			generateShippingLabels?: boolean | null;
			/**
			 * @description Ignore cost price alerts
			 * @default false
			 */
			ignoreCostPriceAlerts: boolean | null;
			/** @description Import adjustments */
			importAdjustments?: boolean | null;
			/**
			 * @description Include customer email
			 * @enum {string|null}
			 */
			includeCustomerEmail?:
				| "customer"
				| "company"
				| "companyUnique"
				| "reference"
				| "none"
				| null;
			/**
			 * @description Include customer invoice
			 * @default none
			 * @enum {string|null}
			 */
			includeCustomerInvoice: "none" | "vendor" | "sale" | null;
			/** @description Include customer phone */
			includeCustomerPhone?: boolean | null;
			/**
			 * @description Include invoice
			 * @default false
			 */
			includeInvoice: boolean | null;
			/** @description Include label in packing slip */
			includeLabelInPackingSlip?: boolean | null;
			/**
			 * @description Include order summary
			 * @default true
			 */
			includeOrderSummary: boolean | null;
			/**
			 * @description Include a packing slip  when sending the order notification, or, when syncing an order into the dropship providers platform. They'll still be able to download from the dropship portal if needed.
			 * @default true
			 */
			includePackingSlip: boolean | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Internal notes */
			internalNotes?: string | null;
			/**
			 * Internal reference template
			 * @description When generating purchase orders, an reference can be generated using a template to confirm with your own internal structure. For example, if you wanted to assign the reference ORDER_10001-01_MYVENDOR you can use the template "ORDER_NAME_{{REFERENCE}}_{{name}}".
			 */
			internalReferenceTemplate?: string | null;
			/** @description Internal reference template date format */
			internalReferenceTemplateDateFormat?: string | null;
			/** @description Internal tags */
			internalTags?: string[] | null;
			/** @description Inventory routing */
			inventoryRouting?: boolean | null;
			/**
			 * How do you want to sync inventory?
			 * @description Jetti can automatically publish items from an inventory feed. Once published, pricing and inventory levels will then automatically be kept in sync. Setting up an inventory feed usually requires generating a set of API credentials for your dropship provider's platform. Or, setting up a CSV file to import. If you don't want to sync an inventory feed, you can also set Jetti up so they can update the pricing and inventory levels of their products currently in your store.
			 * @enum {string|null}
			 */
			inventorySetup?: "feed" | "mapped" | "none" | null;
			/**
			 * @description Inventory setup status
			 * @default complete
			 * @enum {string|null}
			 */
			inventorySetupStatus:
				| "pending"
				| "requested"
				| "complete"
				| "error"
				| null;
			/** @description Inventory setup status message */
			inventorySetupStatusMessage?: string | null;
			/**
			 * @description Invoice notification
			 * @enum {string|null}
			 */
			invoiceNotification?:
				| "staff"
				| "dropship_provider"
				| "both"
				| "none"
				| null;
			/**
			 * Invoice shipping
			 * @description Setup the invoicing flow for shipping. You can opt to add funds to the payout, deduct funds from the payout (e.g. to cover the costs of shipping labels) or handle commission flows on the shipping.
			 */
			invoiceShipping?: boolean | null;
			/**
			 * Eligibility for free shipping
			 * @description Select the conditions under which there should be an invoice / payout for the shipping amount. You can select between always. Or, only invoicing a shipping amount when there was shipping income collected from the customer.
			 * @default all
			 * @enum {string|null}
			 */
			invoiceShippingEligibility: "all" | "freeShipping" | null;
			/**
			 * @description Invoice shipping source
			 * @enum {string|null}
			 */
			invoiceShippingSource?:
				| "shippingRate"
				| "dropshipment"
				| "customer"
				| null;
			/**
			 * How should the shipping amount be applied?
			 * @description Select whether to pay the vendor for the shipping amount, deduct the amount from the vendor. Or, whether you want to payout an amount, but deduct a commission from that amount.
			 * @enum {string|null}
			 */
			invoiceShippingType?: "addition" | "deduct" | "commission" | null;
			/**
			 * Format: int32
			 * @description Invoice template
			 */
			invoiceTemplateId?: number | null;
			/** @description Invoice terms */
			invoiceTerms?: string | null;
			/**
			 * @description Invoicing stage
			 * @enum {string|null}
			 */
			invoicingStage?:
				| "beforeShipping"
				| "afterShipping"
				| "delivered"
				| "manual"
				| null;
			/**
			 * @description Is valid
			 * @default true
			 */
			isValid: boolean | null;
			/**
			 * Allow-list of ship-to countries to generate labels
			 * @description Select the countries that labels should be generated for. This should be the ship-to counties (i.e. where the customer is located).
			 */
			labelCountries?: string[] | null;
			/**
			 * What should happen when labels cannot be generated?
			 * @description When labels cannot be generated (e.g. maybe there is an error, or, the labels aren't provided for the destination), Jetti can either prevent the order from being shipped / sent. Or, allow the order to be processed and the instead, allow tracking to be entered.
			 * @default prevent
			 * @enum {string|null}
			 */
			labelError: "prevent" | "tracking" | null;
			/**
			 * @description Label format
			 * @default pdf
			 * @enum {string|null}
			 */
			labelFormat: "pdf" | "png" | "pdf_4x6" | "pdf_4x8" | null;
			/** @description Label name */
			labelName?: string | null;
			/**
			 * How should the shipping label be selected?
			 * @enum {string|null}
			 */
			labelRouting?: "bestMatch" | "cheapest" | null;
			/**
			 * When should labels be used?
			 * @description Select whether to generate labels for all shipments, or limit to only certain shipments, such as domestic or international.
			 * @default all
			 * @enum {string|null}
			 */
			labelScope: "all" | "domestic" | "international" | "selected" | null;
			/** @description Last name */
			lastName?: string | null;
			/**
			 * Format: int32
			 * @description Magento store
			 */
			magentoStoreId?: number | null;
			/** @description Minimum order requirements */
			minimumOrderRequirements?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Name */
			name: string;
			/** @description Order carrier code */
			orderCarrierCode?: string | null;
			/** @description Order currency code */
			orderCurrencyCode?: string | null;
			/** @description Order endpoint path */
			orderEndpointPath?: string | null;
			/** @description Order endpoint url */
			orderEndpointUrl?: string | null;
			/** @description Order flatten seperator */
			orderFlattenSeperator?: string | null;
			/**
			 * @description Order format
			 * @default csv
			 * @enum {string|null}
			 */
			orderFormat: "csv" | "json" | "xml" | null;
			/** @description Order language code */
			orderLanguageCode?: string | null;
			/** @description Order minimum */
			orderMinimum?: boolean | null;
			/** @description Order minimum amount */
			orderMinimumAmount?: number | null;
			/**
			 * @description Order platform
			 * @enum {string|null}
			 */
			orderPlatform?:
				| "api"
				| "bigCommerce"
				| "digital"
				| "email"
				| "ftp"
				| "magento"
				| "magentoLegacy"
				| "manual"
				| "other"
				| "phone"
				| "prestaShop"
				| "shipstation"
				| "shopify"
				| "squareSpace"
				| "tradeGecko"
				| "website"
				| "wooCommerce"
				| "wooCommerceLegacy"
				| null;
			/**
			 * @description Order setup status
			 * @default pending
			 * @enum {string|null}
			 */
			orderSetupStatus: "pending" | "requested" | "complete" | "error" | null;
			/** @description Order setup status message */
			orderSetupStatusMessage?: string | null;
			/**
			 * Order splitting
			 * @description You can optionally split items across multiple dropship purchases if needed within the same vendor. For example, you may want to create a separate purchase order per item on the order if the vendor ships larger items.
			 * @default group
			 * @enum {string|null}
			 */
			orderSplitting:
				| "group"
				| "splitQuantity"
				| "splitTag"
				| "endpoint"
				| null;
			/** @description Order splitting endpoint */
			orderSplittingEndpoint?: string | null;
			/** @description Order status code */
			orderStatusCode?: string | null;
			/**
			 * Format: int32
			 * @description Order template
			 */
			orderTemplateId?: number | null;
			/**
			 * @description Order template type
			 * @default none
			 * @enum {string|null}
			 */
			orderTemplateType: "none" | "custom" | "default" | null;
			/** @description Order use proxy */
			orderUseProxy?: boolean | null;
			/** @description Ost user */
			ostUser?: string | null;
			/**
			 * Format: int32
			 * @description Packaging weight
			 * @default 0
			 */
			packagingWeight: number | null;
			/**
			 * Send payments to vendors automatically
			 * @description Automatically pay the vendor for any outstanding invoices. Vendors will be sent a confirmation email. You will also receive an alert if any payments aren't successfully sent (e.g. the payment source is declined).
			 */
			payAutomatically?: boolean | null;
			/** @description Payment code */
			paymentCode?: string | null;
			/**
			 * @description Payment day
			 * @default monday
			 * @enum {string|null}
			 */
			paymentDay:
				| "monday"
				| "tuesday"
				| "wednesday"
				| "thursday"
				| "friday"
				| "saturday"
				| "sunday"
				| null;
			/**
			 * @description Payment day monthly
			 * @default firstDay
			 * @enum {string|null}
			 */
			paymentDayMonthly:
				| "firstMonday"
				| "firstDay"
				| "lastDay"
				| "lastFriday"
				| null;
			/**
			 * Format: int32
			 * @description Payment days
			 */
			paymentDays?: number | null;
			/** @description Payment message */
			paymentMessage?: string | null;
			/**
			 * Format: int32
			 * @description Payment method
			 */
			paymentMethodId?: number | null;
			/**
			 * @description Payment module
			 * @enum {string|null}
			 */
			paymentModule?: "enabled" | "disabled" | null;
			/** @description Payment notes */
			paymentNotes?: string | null;
			/**
			 * @description Payment schedule
			 * @default daily
			 * @enum {string|null}
			 */
			paymentSchedule: "daily" | "weekly" | "monthly" | null;
			/**
			 * @description Payment setup status
			 * @default pending
			 * @enum {string|null}
			 */
			paymentSetupStatus: "pending" | "requested" | "complete" | "error" | null;
			/** @description Payment setup status message */
			paymentSetupStatusMessage?: string | null;
			/** @description Paypal email */
			paypalEmail?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * Currency for order sync
			 * Format: int32
			 * @description When syncing orders, you can convert the prices from the currency in your store with the currency in the vendor's store. This will also convert the price of the shipping into the currency of the store.
			 */
			platformCurrencyId?: number | null;
			/** @description Platform customer external */
			platformCustomerExternalId?: string | null;
			/**
			 * Cancel items in the dropship provider store
			 * @description Orders will be cancelled in the dropship providers store as returns and cancellations are raised in Jetti.
			 * @default none
			 * @enum {string|null}
			 */
			platformExportReturns: "none" | "always" | null;
			/**
			 * @description Platform invoice address
			 * @default company
			 * @enum {string|null}
			 */
			platformInvoiceAddress: "customer" | "company" | "none" | null;
			/**
			 * @description Platform notification
			 * @default default
			 * @enum {string|null}
			 */
			platformNotification: "enable" | "disable" | "default" | null;
			/**
			 * @description Platform price
			 * @default purchase
			 * @enum {string|null}
			 */
			platformPrice: "purchase" | "sale" | "platform" | "zero" | null;
			/**
			 * @description Platform products
			 * @default connected
			 * @enum {string|null}
			 */
			platformProducts: "connected" | "notConnected" | "all" | null;
			/**
			 * @description Platform properties
			 * @default default
			 * @enum {string|null}
			 */
			platformProperties: "default" | "optionValues" | "notes" | null;
			/**
			 * Code
			 * @description System code shipping rate (e.g. "UPS_GROUND").
			 */
			platformShippingCode?: string | null;
			/**
			 * @description Platform shipping cost
			 * @default false
			 */
			platformShippingCost: boolean | null;
			/**
			 * Map the shipping rate on the order
			 * @description When syncing the shipping rate with the dropship providers store, you can change the display of the rates. This may be useful where their shipping platform requires the shipping names/codes to have specific values to be routed correctly.
			 * @default default
			 * @enum {string|null}
			 */
			platformShippingMapping: "default" | "mapping" | "override" | null;
			/**
			 * @description Platform shipping mapping fallback
			 * @default default
			 * @enum {string|null}
			 */
			platformShippingMappingFallback: "default" | "none" | "override" | null;
			/**
			 * @description Platform shipping price
			 * @default true
			 */
			platformShippingPrice: boolean | null;
			/**
			 * Provider
			 * @description Carrier/provider name for the shipping rate (e.g. FedEx).
			 */
			platformShippingProvider?: string | null;
			/**
			 * Service level
			 * @description Service level for the shipping rate (e.g. Ground).
			 */
			platformShippingServiceLevel?: string | null;
			/**
			 * Address format for US states
			 * @description Change the format for US states on the shipping and invoice address.
			 * @default none
			 * @enum {string|null}
			 */
			platformStateCode: "ISO3166-2" | "none" | null;
			/** @description Platform tags */
			platformTags?: string[] | null;
			/**
			 * Tax calculation for reverse invoices
			 * @description When syncing orders with the vendor store, a different tax rate can be applied than the one used to calculate payments. This will have no impact on the payout amounts. However, is typically requested by vendors if they want a specific tax rate applied to their orders other than that calculated at checkout by the marketplace.
			 * @default default
			 * @enum {string|null}
			 */
			platformTax: "default" | "manual" | "eu" | "domestic" | null;
			/**
			 * Format: int32
			 * @description Platform tax rate
			 */
			platformTaxRateId?: number | null;
			/**
			 * Require tracking  number when importing shipments
			 * @description You can disable shipments from being import from your dropship provider if no tracking is available. This may be useful where vendors first mark as shipped and later enter tracking. Or, if you want to sync orders to their platform, but have them enter tracking from the vendor portal.
			 *
			 * If this is enabled, it might mean the shipments are never marked as shipped if the tracking details are not available in their store.
			 * @default disabled
			 * @enum {string|null}
			 */
			platformTrackingRequirement: "skip" | "enabled" | "disabled" | null;
			/** @description Prestashop shop group */
			prestashopShopGroupId?: string | null;
			/**
			 * @description Product type filter
			 * @default all
			 * @enum {string|null}
			 */
			productTypeFilter: "all" | "include" | "exclude" | null;
			/** @description Product types */
			productTypes?: string[] | null;
			/**
			 * Notes to include in packing slip
			 * @description These notes are automatically included on emails, in the dropship portal and when syncing external orders.
			 */
			purchaseNotes?: string | null;
			/** @description Purchase shipping label automatically */
			purchaseShippingLabelAutomatically?: boolean | null;
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/** @description Receiver required */
			receiverRequired?: boolean | null;
			/**
			 * Format: int32
			 * @description Reminder days
			 */
			reminderDays?: number | null;
			/**
			 * @description Require inventory feed variant
			 * @default false
			 */
			requireInventoryFeedVariant: boolean | null;
			/** @default false */
			requiresShippingApproval: boolean | null;
			/**
			 * Format: int32
			 * @description Return dropship provider address
			 */
			returnDropshipProviderAddressId?: number | null;
			/** @description Return in house */
			returnInHouse?: boolean | null;
			/**
			 * Return label type
			 * @description Type of label to generate when creating the return label on sale returns. You can either create a pre-paid scan based return label. Or, a regular shipping label with the ship-to/from addresses switched, so the items are send back from the customer.
			 *
			 * @default paid
			 * @enum {string|null}
			 */
			returnLabelType: "prePaid" | "paid" | null;
			/**
			 * When should pre-paid return labels be generated?
			 * @description Jetti can automatically provide pre-paid return labels from your connected carrier integrations. The return labels are provided seperately from the outbound label. For example, you can provide a return label even if you are not providing the original outbound label.
			 * @enum {string|null}
			 */
			returnLabels?: "none" | "manual" | "onSend" | null;
			/**
			 * @description Return shipment trigger
			 * @default any
			 * @enum {string|null}
			 */
			returnShipmentTrigger: "any" | "none" | null;
			/** @description Returns policy */
			returnsPolicy?: string | null;
			/**
			 * Approval for returns
			 * @description You can automatically set the approval status when returns are raised by staff or customers. A default can be set for all dropship providers in the [returns setup area](/returns). Or, you can specify a different value here if needed.
			 * @default default
			 * @enum {string|null}
			 */
			saleReturnCustomerStatus: "default" | "requested" | "finalized" | null;
			/**
			 * @description Sale return refund trigger
			 * @default none
			 * @enum {string|null}
			 */
			saleReturnRefundTrigger:
				| "none"
				| "any"
				| "draft"
				| "requested"
				| "finalized"
				| "shipped"
				| "received"
				| null;
			/**
			 * @description Send order notification
			 * @default false
			 */
			sendOrderNotification: boolean | null;
			/**
			 * @description Send reminder
			 * @default false
			 */
			sendReminder: boolean | null;
			/**
			 * When should dropship purchase orders be sent?
			 * @description Orders can either be sent in real time, sent in daily batches or you can review before sending. The getting started with Jetti, we recommend setting this to *review before sending*, so no tests orders are accidently sent to the dropship provider.
			 * @enum {string|null}
			 */
			sendingSchedule?: "manual" | "immediate" | "daily" | null;
			/**
			 * @description Sending schedule hour
			 * @default 9
			 */
			sendingScheduleHour: string | null;
			/**
			 * @description Sending schedule minute
			 * @default 0
			 * @enum {string|null}
			 */
			sendingScheduleMinute: "0" | "15" | "30" | "45" | null;
			/** @description Set merchant reference */
			setMerchantReference?: boolean | null;
			/**
			 * @description Shipment routing
			 * @default customer
			 * @enum {string|null}
			 */
			shipmentRouting:
				| "customer"
				| "consolidated"
				| "consolidatedInternational"
				| null;
			/**
			 * Email used for the ship-from address on shipping labels
			 * @description Select which email address should be used when generating shipping labels. You can select either to use the dropship provider's email, or your email. If the dropship provider doesn't have any email set, it will default back to your email.
			 * @default company
			 * @enum {string|null}
			 */
			shippingEmail: "company" | "dropshipProvider" | null;
			/** @description Shipping endpoint */
			shippingEndpoint?: string | null;
			/**
			 * @description Shipping endpoint format
			 * @default none
			 * @enum {string|null}
			 */
			shippingEndpointFormat:
				| "ftp"
				| "json"
				| "none"
				| "googleSheet"
				| "upload"
				| "xml"
				| null;
			/**
			 * @description Shipping endpoint grouping
			 * @default order
			 * @enum {string|null}
			 */
			shippingEndpointGrouping: "order" | "lineItem" | null;
			/**
			 * @description Shipping endpoint mapping
			 * @default default
			 * @enum {string|null}
			 */
			shippingEndpointMapping: "default" | "custom" | null;
			/**
			 * @description Shipping endpoint purpose
			 * @default all
			 * @enum {string|null}
			 */
			shippingEndpointPurpose: "all" | "invoice" | null;
			/**
			 * Phone number used for the ship-from address on shipping labels
			 * @description Select which phone number should be used when generating shipping labels. You can select either to use the dropship provider's phone number, or yours. If the dropship provider doesn't have any phone number set, it will default back to yours.
			 * @default company
			 * @enum {string|null}
			 */
			shippingPhone: "company" | "dropshipProvider" | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/** @description Shipping rates */
			shippingRates?: string | null;
			/**
			 * @description Shipping setup status
			 * @default pending
			 * @enum {string|null}
			 */
			shippingSetupStatus:
				| "pending"
				| "requested"
				| "complete"
				| "error"
				| null;
			/** @description Shipping setup status message */
			shippingSetupStatusMessage?: string | null;
			/**
			 * @description Shipping type
			 * @enum {string|null}
			 */
			shippingType?:
				| "rechargeShipping"
				| "generateShippingLabels"
				| "customRates"
				| "fixed"
				| null;
			/** @description Shipping update extension */
			shippingUpdateExtension?: boolean | null;
			/**
			 * Format: int32
			 * @description Shipping update extension duration
			 * @default 0
			 */
			shippingUpdateExtensionDuration: number | null;
			/** @description Shippo token */
			shippoToken?: string | null;
			/** @description Silence alerts */
			silenceAlerts?: boolean | null;
			/**
			 * @description Sku filter
			 * @default all
			 * @enum {string|null}
			 */
			skuFilter: "all" | "startsWith" | null;
			/** @description Skus */
			skus?: string[] | null;
			/** @description State */
			state?: string | null;
			/**
			 * @description Status
			 * @default accepted
			 * @enum {string|null}
			 */
			status:
				| "pending"
				| "accepted"
				| "onboarding"
				| "away"
				| "disabled"
				| "archived"
				| null;
			/** @description Stripe */
			stripeId?: string | null;
			/**
			 * @description Stripe managed
			 * @default false
			 */
			stripeManaged: boolean | null;
			/**
			 * @description Stripe managed enabled
			 * @default false
			 */
			stripeManagedEnabled: boolean | null;
			/** @description Stripe managed */
			stripeManagedId?: string | null;
			/**
			 * @description Stripe payout
			 * @enum {string|null}
			 */
			stripePayout?: "jetti" | "retailer" | null;
			/**
			 * @description Stripe payout source
			 * @default balance
			 * @enum {string|null}
			 */
			stripePayoutSource: "balance" | "customer" | null;
			/**
			 * @description Sync external returns
			 * @default false
			 */
			syncExternalReturns: boolean | null;
			/**
			 * @description Sync order tax
			 * @default true
			 */
			syncOrderTax: boolean | null;
			/**
			 * @description Tag filter
			 * @default all
			 * @enum {string|null}
			 */
			tagFilter: "all" | "include" | "exclude" | null;
			/**
			 * @description Tag splitting
			 * @default []
			 */
			tagSplitting: string[] | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax calculation
			 * @default disabled
			 * @enum {string|null}
			 */
			taxCalculation: "disabled" | "taxjar" | "channel" | "manual" | null;
			/**
			 * Tax ID
			 * @description Tax ID used for commerical invoices when generating shipping labels for international shipments.
			 */
			taxId?: string | null;
			/**
			 * @description Tax included
			 * @default true
			 */
			taxIncluded: boolean | null;
			/** @description Tax jar token */
			taxJarToken?: string | null;
			/** @description Tax number */
			taxNumber?: string | null;
			/**
			 * Format: int32
			 * @description Tax rate
			 */
			taxRateId?: number | null;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean | null;
			/** @description Terms */
			terms?: string | null;
			/** @description Timezone */
			timezone?: string | null;
			/**
			 * @description Tracking scope
			 * @enum {string|null}
			 */
			trackingScope?: "full" | "none" | null;
			/** @description Transferwise recipient */
			transferwiseRecipientId?: string | null;
			/**
			 * @description Use channel shipping rate
			 * @default false
			 */
			useChannelShippingRate: boolean | null;
			/**
			 * Enable API Pipeline for commission rates
			 * @description API endpoint for sending the API payload for custom commission rate calculation.
			 * @default false
			 */
			useCommissionRateEndpoint: boolean | null;
			/** @description Use dropshipment splitting endpoint */
			useDropshipmentSplittingEndpoint?: boolean | null;
			/**
			 * @description Use internal reference template
			 * @default false
			 */
			useInternalReferenceTemplate: boolean | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Validation message */
			validationMessage?: string[] | null;
			/** @description W9 form */
			w9Form?: string | null;
			/** @description Website url */
			websiteUrl?: string | null;
			/** @description Xero */
			xeroId?: string | null;
			/** @description Zip */
			zip?: string | null;
			/** @description Zoho */
			zohoId?: string | null;
		};
		"dropship-provider-address": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Email */
			email?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Phone */
			phone?: string | null;
			/** @description State */
			state?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zip */
			zip?: string | null;
		};
		"dropship-provider-address-new": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Email */
			email?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description First name */
			firstName?: string | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Phone */
			phone?: string | null;
			/** @description State */
			state?: string | null;
			/** @description Zip */
			zip?: string | null;
		};
		"dropship-provider-agreement": {
			/**
			 * Format: int32
			 * @description Agreement
			 */
			agreementId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Files required
			 * @default false
			 */
			filesRequired: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status: "pending" | "agreed" | "declined" | "cancelled" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropship-provider-agreement-new": {
			/**
			 * Format: int32
			 * @description Agreement
			 */
			agreementId: number;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Files required
			 * @default false
			 */
			filesRequired: boolean | null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status: "pending" | "agreed" | "declined" | "cancelled" | null;
		};
		"dropship-provider-collection": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropship-provider-collection-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description External */
			externalId?: string | null;
		};
		"dropship-provider-collection-payload": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider collection
			 */
			dropshipProviderCollectionId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "error" | "success" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropship-provider-collection-payload-new": {
			/**
			 * Format: int32
			 * @description Dropship provider collection
			 */
			dropshipProviderCollectionId: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "error" | "success" | null;
		};
		"dropship-provider-shipping-field": {
			/**
			 * @description Column type
			 * @default attribute
			 * @enum {string|null}
			 */
			columnType: "attribute" | "placeholder" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Purpose
			 * @enum {string|null}
			 */
			purpose?:
				| "channelReference"
				| "internalReference"
				| "invoiceAmount"
				| "price"
				| "reference"
				| "serviceLevel"
				| "sku"
				| "trackingCompany"
				| "trackingNumber"
				| "vendorExternalId"
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropship-provider-shipping-field-new": {
			/**
			 * @description Column type
			 * @default attribute
			 * @enum {string|null}
			 */
			columnType: "attribute" | "placeholder" | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Purpose
			 * @enum {string|null}
			 */
			purpose?:
				| "channelReference"
				| "internalReference"
				| "invoiceAmount"
				| "price"
				| "reference"
				| "serviceLevel"
				| "sku"
				| "trackingCompany"
				| "trackingNumber"
				| "vendorExternalId"
				| null;
		};
		"dropship-purchase-import": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Duoplane password */
			duoplanePassword: string;
			/** @description Duoplane username */
			duoplaneUsername: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number | null;
			/**
			 * @description Import schedule
			 * @default manual
			 * @enum {string|null}
			 */
			importSchedule: "daily" | "hourly" | "manual" | null;
			/**
			 * Format: date-time
			 * @description Last imported at
			 */
			lastImportedAt?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropship-purchase-import-new": {
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description Duoplane password */
			duoplanePassword: string;
			/** @description Duoplane username */
			duoplaneUsername: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * @description Import schedule
			 * @default manual
			 * @enum {string|null}
			 */
			importSchedule: "daily" | "hourly" | "manual" | null;
			/**
			 * Format: date-time
			 * @description Last imported at
			 */
			lastImportedAt?: string | null;
		};
		dropshipment: {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/**
			 * Format: int32
			 * @description Carrier pickup
			 */
			carrierPickupId?: number | null;
			/**
			 * Format: int32
			 * @description Channel attempts
			 * @default 0
			 */
			channelAttempts: number | null;
			/** @description Channel error */
			channelError?: boolean | null;
			/**
			 * @description Channel notification
			 * @default trigger
			 * @enum {string|null}
			 */
			channelNotification: "trigger" | "mute" | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Import source
			 * @default manual
			 * @enum {string|null}
			 */
			importSource:
				| "api"
				| "manual"
				| "platform"
				| "portal"
				| "shippingEndpoint"
				| null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory status
			 * @default notShipped
			 * @enum {string}
			 */
			inventoryStatus: "notShipped" | "shipped";
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Label problem */
			labelProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label uris */
			labelUris?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * Format: int32
			 * @description Manifest
			 */
			manifestId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Packing depth
			 * @default 2.4
			 */
			packingDepth: number | null;
			/**
			 * @description Packing height
			 * @default 13.3
			 */
			packingHeight: number | null;
			/**
			 * @description Packing width
			 * @default 11.5
			 */
			packingWidth: number | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/**
			 * @description Printed label
			 * @default false
			 */
			printedLabel: boolean | null;
			/**
			 * Format: date-time
			 * @description Printed label at
			 */
			printedLabelAt?: string | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Requires shipping approval
			 * @default notRequired
			 * @enum {string|null}
			 */
			requiresShippingApproval:
				| "notRequired"
				| "approvalRequired"
				| "rateRequired"
				| "approved"
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/**
			 * @description Shipment routing
			 * @default customer
			 * @enum {string|null}
			 */
			shipmentRouting:
				| "customer"
				| "consolidated"
				| "consolidatedInternational"
				| null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/**
			 * @description Source
			 * @default sale
			 * @enum {string|null}
			 */
			source: "sale" | "dropship_purchase_import" | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Format: float
			 * @description Total weight
			 * @default 0
			 */
			totalWeight: number | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Vendor external */
			vendorExternalId?: string | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
		};
		"dropshipment-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/**
			 * Format: int32
			 * @description Carrier pickup
			 */
			carrierPickupId?: number | null;
			/**
			 * Format: int32
			 * @description Channel attempts
			 * @default 0
			 */
			channelAttempts: number | null;
			/** @description Channel error */
			channelError?: boolean | null;
			/**
			 * @description Channel notification
			 * @default trigger
			 * @enum {string|null}
			 */
			channelNotification: "trigger" | "mute" | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * @description Import source
			 * @default manual
			 * @enum {string|null}
			 */
			importSource:
				| "api"
				| "manual"
				| "platform"
				| "portal"
				| "shippingEndpoint"
				| null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory status
			 * @default notShipped
			 * @enum {string}
			 */
			inventoryStatus: "notShipped" | "shipped";
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Label problem */
			labelProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label uris */
			labelUris?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * Format: int32
			 * @description Manifest
			 */
			manifestId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Packing depth
			 * @default 2.4
			 */
			packingDepth: number | null;
			/**
			 * @description Packing height
			 * @default 13.3
			 */
			packingHeight: number | null;
			/**
			 * @description Packing width
			 * @default 11.5
			 */
			packingWidth: number | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/**
			 * @description Printed label
			 * @default false
			 */
			printedLabel: boolean | null;
			/**
			 * Format: date-time
			 * @description Printed label at
			 */
			printedLabelAt?: string | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Requires shipping approval
			 * @default notRequired
			 * @enum {string|null}
			 */
			requiresShippingApproval:
				| "notRequired"
				| "approvalRequired"
				| "rateRequired"
				| "approved"
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/**
			 * @description Shipment routing
			 * @default customer
			 * @enum {string|null}
			 */
			shipmentRouting:
				| "customer"
				| "consolidated"
				| "consolidatedInternational"
				| null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/**
			 * @description Source
			 * @default sale
			 * @enum {string|null}
			 */
			source: "sale" | "dropship_purchase_import" | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Format: float
			 * @description Total weight
			 * @default 0
			 */
			totalWeight: number | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Vendor external */
			vendorExternalId?: string | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
		};
		"dropshipment-import": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropshipment-import-new": {
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId: number;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
		};
		"dropshipment-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/**
			 * @description Source
			 * @default sale_item
			 * @enum {string|null}
			 */
			source: "sale_item" | "dropship_purchase_import" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"dropshipment-item-new": {
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId: number;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/**
			 * @description Source
			 * @default sale_item
			 * @enum {string|null}
			 */
			source: "sale_item" | "dropship_purchase_import" | null;
		};
		"duoplane-account": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Duoplane password */
			duoplanePassword: string;
			/** @description Duoplane username */
			duoplaneUsername: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"duoplane-account-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/** @description Duoplane password */
			duoplanePassword: string;
			/** @description Duoplane username */
			duoplaneUsername: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
		};
		"elastic-path-store": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/** @description Client */
			clientId: string;
			/** @description Client secret */
			clientSecret: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Fulfillment endpoint */
			fulfillmentEndpoint?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/** @description Store */
			storeId: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"elastic-path-store-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/** @description Client */
			clientId: string;
			/** @description Client secret */
			clientSecret: string;
			/** @description Fulfillment endpoint */
			fulfillmentEndpoint?: string | null;
			/** @description Name */
			name: string;
			/** @description Store */
			storeId: string;
		};
		error: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Entry */
			entryId: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Message */
			message?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/**
			 * @description Resolved
			 * @default false
			 */
			resolved: boolean | null;
			/** @description Stack trace */
			stackTrace?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"error-new": {
			/** @description Entry */
			entryId: string;
			/** @description Message */
			message?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/**
			 * @description Resolved
			 * @default false
			 */
			resolved: boolean | null;
			/** @description Stack trace */
			stackTrace?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		fulfillment: {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/**
			 * Format: int32
			 * @description Channel attempts
			 * @default 0
			 */
			channelAttempts: number | null;
			/** @description Channel error */
			channelError?: boolean | null;
			/**
			 * @description Channel notification
			 * @default trigger
			 * @enum {string|null}
			 */
			channelNotification: "trigger" | "mute" | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Fulfillment type
			 * @default manual
			 * @enum {string}
			 */
			fulfillmentType: "automated" | "manual" | "adjusted";
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory status
			 * @default notShipped
			 * @enum {string}
			 */
			inventoryStatus: "notShipped" | "shipped";
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * Format: int32
			 * @description Manifest
			 */
			manifestId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Packed
			 * @default false
			 */
			packed: boolean | null;
			/**
			 * Format: date-time
			 * @description Packed at
			 */
			packedAt?: string | null;
			/**
			 * @description Picked
			 * @default false
			 */
			picked: boolean | null;
			/**
			 * Format: date-time
			 * @description Picked at
			 */
			pickedAt?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/**
			 * @description Printed label
			 * @default false
			 */
			printedLabel: boolean | null;
			/**
			 * Format: date-time
			 * @description Printed label at
			 */
			printedLabelAt?: string | null;
			/** @description Provider */
			provider?: string | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Requires shipping approval
			 * @default notRequired
			 * @enum {string|null}
			 */
			requiresShippingApproval:
				| "notRequired"
				| "rateRequired"
				| "approvalRequired"
				| "approved"
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/**
			 * Format: date-time
			 * @description Shipped at
			 */
			shippedAt?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/** @description Shipstation */
			shipstationId?: string | null;
			/**
			 * @description Status
			 * @default finalized
			 * @enum {string|null}
			 */
			status: "pending" | "finalized" | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"fulfillment-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/**
			 * Format: int32
			 * @description Channel attempts
			 * @default 0
			 */
			channelAttempts: number | null;
			/** @description Channel error */
			channelError?: boolean | null;
			/**
			 * @description Channel notification
			 * @default trigger
			 * @enum {string|null}
			 */
			channelNotification: "trigger" | "mute" | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Fulfillment type
			 * @default manual
			 * @enum {string}
			 */
			fulfillmentType: "automated" | "manual" | "adjusted";
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory status
			 * @default notShipped
			 * @enum {string}
			 */
			inventoryStatus: "notShipped" | "shipped";
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * Format: int32
			 * @description Manifest
			 */
			manifestId?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Packed
			 * @default false
			 */
			packed: boolean | null;
			/**
			 * Format: date-time
			 * @description Packed at
			 */
			packedAt?: string | null;
			/**
			 * @description Picked
			 * @default false
			 */
			picked: boolean | null;
			/**
			 * Format: date-time
			 * @description Picked at
			 */
			pickedAt?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/**
			 * @description Printed label
			 * @default false
			 */
			printedLabel: boolean | null;
			/**
			 * Format: date-time
			 * @description Printed label at
			 */
			printedLabelAt?: string | null;
			/** @description Provider */
			provider?: string | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Requires shipping approval
			 * @default notRequired
			 * @enum {string|null}
			 */
			requiresShippingApproval:
				| "notRequired"
				| "rateRequired"
				| "approvalRequired"
				| "approved"
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/**
			 * Format: date-time
			 * @description Shipped at
			 */
			shippedAt?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/** @description Shipstation */
			shipstationId?: string | null;
			/**
			 * @description Status
			 * @default finalized
			 * @enum {string|null}
			 */
			status: "pending" | "finalized" | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"fulfillment-item": {
			/** @description Cost price */
			costPrice?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Packed
			 * @default 0
			 */
			packed: number | null;
			/**
			 * Format: int32
			 * @description Picked
			 * @default 0
			 */
			picked: number | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/** @description Shipstation */
			shipstationId?: string | null;
			/**
			 * @description Skip inventory change
			 * @default false
			 */
			skipInventoryChange: boolean;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"fulfillment-item-new": {
			/** @description Cost price */
			costPrice?: number | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId: number;
			/**
			 * Format: int32
			 * @description Packed
			 * @default 0
			 */
			packed: number | null;
			/**
			 * Format: int32
			 * @description Picked
			 * @default 0
			 */
			picked: number | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/** @description Shipstation */
			shipstationId?: string | null;
			/**
			 * @description Skip inventory change
			 * @default false
			 */
			skipInventoryChange: boolean;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"goods-receipt": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory status
			 * @default received
			 * @enum {string}
			 */
			inventoryStatus: "received" | "packedAway";
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"goods-receipt-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory status
			 * @default received
			 * @enum {string}
			 */
			inventoryStatus: "received" | "packedAway";
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"goods-receipt-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Goods receipt
			 */
			goodsReceiptId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * @description Skip inventory change
			 * @default false
			 */
			skipInventoryChange: boolean;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"goods-receipt-item-new": {
			/**
			 * Format: int32
			 * @description Goods receipt
			 */
			goodsReceiptId: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * @description Skip inventory change
			 * @default false
			 */
			skipInventoryChange: boolean;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		importer: {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Countries */
			countries?: string[] | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Email */
			email?: string | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Phone */
			phone?: string | null;
			/** @description State */
			state?: string | null;
			/** @description Tax */
			taxId?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zip */
			zip?: string | null;
		};
		"importer-new": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Countries */
			countries?: string[] | null;
			/** @description Country */
			country?: string | null;
			/** @description Email */
			email?: string | null;
			/** @description First name */
			firstName?: string | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Phone */
			phone?: string | null;
			/** @description State */
			state?: string | null;
			/** @description Tax */
			taxId?: string | null;
			/** @description Zip */
			zip?: string | null;
		};
		"inventory-export": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Delivery
			 * @default s3
			 * @enum {string|null}
			 */
			delivery: "email" | "s3" | "s3_external" | null;
			/** @description Emails */
			emails?: string[] | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number | null;
			/**
			 * @description Inventory type
			 * @default all
			 * @enum {string|null}
			 */
			inventoryType: "all" | "inventory_feeds" | "inhouse" | null;
			/**
			 * Format: date-time
			 * @description Last exported at
			 */
			lastExportedAt?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description Overwrite
			 * @default true
			 */
			overwrite: boolean | null;
			/** @description S3 bucket */
			s3Bucket?: string | null;
			/** @description S3 key */
			s3Key?: string | null;
			/** @description S3 path */
			s3Path?: string | null;
			/** @description S3 secret */
			s3Secret?: string | null;
			/**
			 * @description Scheduled type
			 * @default shared
			 * @enum {string|null}
			 */
			scheduledType: "shared" | "dedicated" | null;
			/**
			 * @description Sending schedule
			 * @default manual
			 * @enum {string|null}
			 */
			sendingSchedule: "daily" | "hourly" | "manual" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-export-new": {
			/**
			 * @description Delivery
			 * @default s3
			 * @enum {string|null}
			 */
			delivery: "email" | "s3" | "s3_external" | null;
			/** @description Emails */
			emails?: string[] | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * @description Inventory type
			 * @default all
			 * @enum {string|null}
			 */
			inventoryType: "all" | "inventory_feeds" | "inhouse" | null;
			/**
			 * Format: date-time
			 * @description Last exported at
			 */
			lastExportedAt?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description Overwrite
			 * @default true
			 */
			overwrite: boolean | null;
			/** @description S3 bucket */
			s3Bucket?: string | null;
			/** @description S3 key */
			s3Key?: string | null;
			/** @description S3 path */
			s3Path?: string | null;
			/** @description S3 secret */
			s3Secret?: string | null;
			/**
			 * @description Scheduled type
			 * @default shared
			 * @enum {string|null}
			 */
			scheduledType: "shared" | "dedicated" | null;
			/**
			 * @description Sending schedule
			 * @default manual
			 * @enum {string|null}
			 */
			sendingSchedule: "daily" | "hourly" | "manual" | null;
		};
		"inventory-export-field": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number | null;
			/**
			 * Format: int32
			 * @description Inventory export
			 */
			inventoryExportId: number;
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Position
			 */
			position: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "available"
				| "barcode"
				| "costPrice"
				| "grams"
				| "id"
				| "inventoryAllocated"
				| "inventoryQuantity"
				| "price"
				| "productName"
				| "sku"
				| "tags"
				| "vendorSku"
				| "vendorFulfillmentPolicy"
				| "vendorName";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-export-field-new": {
			/**
			 * Format: int32
			 * @description Inventory export
			 */
			inventoryExportId: number;
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Position
			 */
			position: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "available"
				| "barcode"
				| "costPrice"
				| "grams"
				| "id"
				| "inventoryAllocated"
				| "inventoryQuantity"
				| "price"
				| "productName"
				| "sku"
				| "tags"
				| "vendorSku"
				| "vendorFulfillmentPolicy"
				| "vendorName";
		};
		"inventory-feed": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * @description Allocate inventory
			 * @default false
			 */
			allocateInventory: boolean | null;
			/**
			 * Format: int32
			 * @description Allocation buffer
			 */
			allocationBuffer?: number | null;
			/** @description Authentication secret */
			authenticationSecret?: string | null;
			/** @description Authentication token */
			authenticationToken?: string | null;
			/**
			 * @description Automatically connect
			 * @default true
			 */
			automaticallyConnect: boolean | null;
			/**
			 * @description Automatically connect by barcode
			 * @default false
			 */
			automaticallyConnectByBarcode: boolean | null;
			/**
			 * @description Automatically connect prefix
			 * @default both
			 * @enum {string|null}
			 */
			automaticallyConnectPrefix: "both" | "prefixOnly" | null;
			/**
			 * @description Cache imports
			 * @default false
			 */
			cacheImports: boolean | null;
			/**
			 * @description Case insensitive skus
			 * @default false
			 */
			caseInsensitiveSkus: boolean | null;
			/**
			 * Format: int32
			 * @description Connected
			 * @default 0
			 */
			connected: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Csv has header */
			csvHasHeader?: boolean | null;
			/**
			 * Format: int32
			 * @description Currency
			 */
			currencyId?: number | null;
			/**
			 * @description Decimal notation
			 * @default decimal
			 * @enum {string|null}
			 */
			decimalNotation: "decimal" | "comma" | null;
			/** @description Delimiter */
			delimiter?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Provide the list of tags
			 * @description Enter the list of tags to check against when fetching items.
			 */
			excludeTags?: string[] | null;
			/**
			 * @description External id strategy
			 * @enum {string|null}
			 */
			externalIdStrategy?: "none" | "options" | null;
			/**
			 * Automatically remove missing or deleted products
			 * @description If a product is missing from the last time the feed was fetched, Jetti can automatically remove it from the feed. This will set the inventory to 0 in the store for that item.
			 * @default enabled
			 * @enum {string|null}
			 */
			fetchCleanup: "enabled" | "disabled" | null;
			/**
			 * @description Fetch frequency
			 * @default hourly
			 * @enum {string|null}
			 */
			fetchFrequency: "never" | "hourly" | "daily" | null;
			/** @description Fetch meta fields */
			fetchMetaFields?: boolean | null;
			/** @description Fetch problem */
			fetchProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Fetched
			 * @default 0
			 */
			fetched: number | null;
			/**
			 * Format: int32
			 * @description Google sheet tab
			 */
			googleSheetTab?: number | null;
			/** @description Handle prefix */
			handlePrefix?: string | null;
			/**
			 * @description Handle strategy
			 * @default externalGroupId
			 * @enum {string|null}
			 */
			handleStrategy:
				| "externalGroupId"
				| "externalGroupIdStart"
				| "name"
				| null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Import seconds
			 * @default 0
			 */
			importSeconds: number | null;
			/**
			 * Format: int32
			 * @description Import seconds partial
			 * @default 0
			 */
			importSecondsPartial: number | null;
			/**
			 * @description Import tags
			 * @default true
			 */
			importTags: boolean | null;
			/**
			 * @description Individual products
			 * @default false
			 */
			individualProducts: boolean | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory policy
			 * @default default
			 * @enum {string|null}
			 */
			inventoryPolicy: "default" | "ignore" | "continue" | "track" | null;
			/**
			 * Sync inventory policy
			 * @description When enabled, the inventory policy from the vendor. For example, if the vendor changes the item from tracked to untracked, this will be reflected within your online store. We'd recommend keeping this enabled unless you are trying to cover a specific use case, such as selling the item into negative quantities if you have an agreement to oversell the item with the vendor.
			 * @default true
			 */
			inventoryPolicySync: boolean | null;
			/** @description Inventory quantity field */
			inventoryQuantityField?: string | null;
			/**
			 * Format: int32
			 * @description Inventory restriction level
			 * @default 0
			 */
			inventoryRestrictionLevel: number | null;
			/**
			 * @description Inventory sync
			 * @default all
			 * @enum {string|null}
			 */
			inventorySync: "all" | "selected" | "none" | null;
			/** @description Is beta */
			isBeta?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Is valid
			 * @default true
			 */
			isValid: boolean | null;
			/**
			 * @description Json mapping
			 * @default default
			 * @enum {string|null}
			 */
			jsonMapping: "default" | "custom" | null;
			/** @description Json root */
			jsonRoot?: string | null;
			/**
			 * Structure of the JSON API
			 * @description Select whether the feed has a nested or flat structure. A nested structure will have variants listed within a parent product object. Whereas a flat structure will list our all items individually.
			 * @default nested
			 * @enum {string|null}
			 */
			jsonStructure: "nested" | "flat" | null;
			/**
			 * Format: date-time
			 * @description Last fetched at
			 */
			lastFetchedAt?: string | null;
			/** @description Last fetched file */
			lastFetchedFile?: string | null;
			/** @description Location ids */
			locationIds?: string[] | null;
			/** @description Magento store */
			magentoStoreId?: string | null;
			/**
			 * @description Manual fetch fequency
			 * @default default
			 * @enum {string|null}
			 */
			manualFetchFequency: "default" | "hourly" | "daily" | null;
			/**
			 * @description Mapping
			 * @default inventory
			 * @enum {string|null}
			 */
			mapping:
				| "inventory"
				| "inventory_pricing"
				| "shopify"
				| "custom"
				| "publishing"
				| "channelEngine"
				| null;
			/**
			 * @description Mapping type
			 * @default import
			 * @enum {string|null}
			 */
			mappingType: "fetch" | "import" | null;
			/**
			 * Format: int32
			 * @description Minimum inventory quantity
			 */
			minimumInventoryQuantity?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Name */
			name: string;
			/**
			 * @description Override vendor name
			 * @default true
			 */
			overrideVendorName: boolean | null;
			/**
			 * @description Overwrite tags
			 * @default false
			 */
			overwriteTags: boolean | null;
			/** @description Parse webhook endpoint */
			parseWebhookEndpoint?: string | null;
			/**
			 * @description Prefix handle
			 * @default false
			 */
			prefixHandle: boolean | null;
			/**
			 * @description Prefix name
			 * @default false
			 */
			prefixName: boolean | null;
			/** @description Prefix seperator */
			prefixSeperator?: string | null;
			/**
			 * @description Prefix sku
			 * @default false
			 */
			prefixSku: boolean | null;
			/**
			 * @description Presta shop legacy
			 * @default false
			 */
			prestaShopLegacy: boolean | null;
			/**
			 * @description Price change base
			 * @default retail_price
			 * @enum {string|null}
			 */
			priceChangeBase: "retail_price" | "cost_price" | null;
			/** @description Price field */
			priceField?: string | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Process type
			 * @default default
			 * @enum {string|null}
			 */
			processType: "default" | "push" | null;
			/**
			 * @description Publish changes automatically
			 * @default false
			 */
			publishChangesAutomatically: boolean | null;
			/**
			 * @description Publish products
			 * @default false
			 */
			publishProducts: boolean | null;
			/**
			 * @description Purpose
			 * @default publishing
			 * @enum {string|null}
			 */
			purpose: "publishing" | "inventory" | null;
			/**
			 * @description Require barcode
			 * @default false
			 */
			requireBarcode: boolean | null;
			/** @description Resource location */
			resourceLocation?: string | null;
			/** @description Resource path */
			resourcePath?: string | null;
			/**
			 * @description Resource type
			 * @enum {string}
			 */
			resourceType:
				| "api"
				| "bigCommerce"
				| "channelEngine"
				| "channelEngineCsv"
				| "etsy"
				| "ftpCsv"
				| "googleDrive"
				| "json"
				| "magento"
				| "magentoLegacy"
				| "manual"
				| "prestaShop"
				| "salesforce"
				| "selz"
				| "shopify_csv"
				| "shopify"
				| "squareSpace"
				| "tradeGecko"
				| "upload"
				| "webhook"
				| "wooCommerce"
				| "wooCommerceLegacy"
				| "wix"
				| "xml";
			/**
			 * @description Restrict inventory import
			 * @default false
			 */
			restrictInventoryImport: boolean | null;
			/**
			 * @description Retail price change
			 * @default 0
			 */
			retailPriceChange: number | null;
			/**
			 * @description Retail price change type
			 * @default percentage
			 * @enum {string|null}
			 */
			retailPriceChangeType: "percentage" | "fixed" | null;
			/**
			 * @description Review changes
			 * @default false
			 */
			reviewChanges: boolean | null;
			/**
			 * New Product(s) email Notification
			 * @description Send a notification email whenever new items are discovered in the feed. Currently, this will not specify new items, only alert you that items have been added.
			 * @default false
			 */
			sendNotification: boolean | null;
			/**
			 * @description Send webhook
			 * @default false
			 */
			sendWebhook: boolean | null;
			/**
			 * Format: int32
			 * @description Skipped
			 * @default 0
			 */
			skipped: number | null;
			/** @description Sku exempt */
			skuExempt?: boolean | null;
			/** @description Sku field */
			skuField?: string | null;
			/** @description Sku prefix */
			skuPrefix?: string | null;
			/**
			 * @description Strip tags
			 * @default false
			 */
			stripTags: boolean | null;
			/**
			 * Strip the following tags when importing
			 * @description Jetti will automatically import tags from your vendors, alongside adding additional tags automatically. However, your search or product page may automatically show any new tags from products published through Jetti. This will lead to unwanted tags appearing to customers. You can specify any tags you do not wanted imported here.
			 */
			strippedTags?: string[] | null;
			/**
			 * @description Sync all price lists
			 * @default true
			 */
			syncAllPriceLists: boolean | null;
			/**
			 * @description Sync cost prices
			 * @default false
			 */
			syncCostPrices: boolean | null;
			/**
			 * @description Sync description
			 * @default false
			 */
			syncDescription: boolean | null;
			/**
			 * @description Sync images
			 * @default false
			 */
			syncImages: boolean | null;
			/**
			 * @description Sync name
			 * @default false
			 */
			syncName: boolean | null;
			/**
			 * @description Sync options
			 * @default false
			 */
			syncOptions: boolean | null;
			/**
			 * @description Sync pricing
			 * @default false
			 */
			syncPricing: boolean | null;
			/**
			 * @description Sync product type
			 * @default false
			 */
			syncProductType: boolean | null;
			/**
			 * @description Sync sale prices
			 * @default true
			 */
			syncSalePrices: boolean | null;
			/**
			 * @description Sync tags
			 * @default false
			 */
			syncTags: boolean | null;
			/**
			 * @description Sync weight
			 * @default false
			 */
			syncWeight: boolean | null;
			/**
			 * Sync the weight, even when zero
			 * @description You may want to disable the syncing of weights if an item has no weight in the inventory feed. Otherwise, if you've manually adjusted the weight in Jetti or your store, it might reset the weight back to zero again the next time the feed is refetched
			 * @default false
			 */
			syncWeightZero: boolean | null;
			/**
			 * Include of exclude items based on tag
			 * @default deny
			 * @enum {string|null}
			 */
			tagRestriction: "deny" | "allow" | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Tax handling when publishing
			 * @description Change whether the item should use the taxable status of the item when importer. Or, whether you want to override this. This may be useful if you wanted to publish the items as non-taxable for example, when the dropship provider has them flagged as taxable.
			 * @default default
			 * @enum {string|null}
			 */
			taxableOverride: "default" | "taxable" | "notTaxable" | null;
			/** @description Transform image template */
			transformImageTemplate?: string | null;
			/** @description Transform images */
			transformImages?: boolean | null;
			/**
			 * @description Transform tags
			 * @default unchanged
			 * @enum {string|null}
			 */
			transformTags:
				| "unchanged"
				| "uppercase"
				| "lowercase"
				| "humanize"
				| "dasherize"
				| null;
			/**
			 * @description Unpublish removed items
			 * @default false
			 */
			unpublishRemovedItems: boolean | null;
			/** @description Unpublished products */
			unpublishedProducts?: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Upload pricing */
			uploadPricing?: boolean | null;
			/** @description Use parse webhook endpoint */
			useParseWebhookEndpoint?: boolean | null;
			/** @description Use proxy */
			useProxy?: boolean | null;
			/** @description Validation message */
			validationMessage?: string[] | null;
			/** @description Vendor name */
			vendorName?: string | null;
			/** @description Vendor name metafields */
			vendorNameMetafields?: boolean | null;
			/** @description Webhook endpoint */
			webhookEndpoint?: string | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
			/**
			 * @description Xml mapping
			 * @default google
			 * @enum {string|null}
			 */
			xmlMapping: "custom" | "google" | null;
			/** @description Xml path */
			xmlPath?: string | null;
			/**
			 * @description Zero null prices
			 * @default false
			 */
			zeroNullPrices: boolean | null;
		};
		"inventory-feed-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * @description Allocate inventory
			 * @default false
			 */
			allocateInventory: boolean | null;
			/**
			 * Format: int32
			 * @description Allocation buffer
			 */
			allocationBuffer?: number | null;
			/** @description Authentication secret */
			authenticationSecret?: string | null;
			/** @description Authentication token */
			authenticationToken?: string | null;
			/**
			 * @description Automatically connect
			 * @default true
			 */
			automaticallyConnect: boolean | null;
			/**
			 * @description Automatically connect by barcode
			 * @default false
			 */
			automaticallyConnectByBarcode: boolean | null;
			/**
			 * @description Automatically connect prefix
			 * @default both
			 * @enum {string|null}
			 */
			automaticallyConnectPrefix: "both" | "prefixOnly" | null;
			/**
			 * @description Cache imports
			 * @default false
			 */
			cacheImports: boolean | null;
			/**
			 * @description Case insensitive skus
			 * @default false
			 */
			caseInsensitiveSkus: boolean | null;
			/**
			 * Format: int32
			 * @description Connected
			 * @default 0
			 */
			connected: number | null;
			/** @description Csv has header */
			csvHasHeader?: boolean | null;
			/**
			 * Format: int32
			 * @description Currency
			 */
			currencyId?: number | null;
			/**
			 * @description Decimal notation
			 * @default decimal
			 * @enum {string|null}
			 */
			decimalNotation: "decimal" | "comma" | null;
			/** @description Delimiter */
			delimiter?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Provide the list of tags
			 * @description Enter the list of tags to check against when fetching items.
			 */
			excludeTags?: string[] | null;
			/**
			 * @description External id strategy
			 * @enum {string|null}
			 */
			externalIdStrategy?: "none" | "options" | null;
			/**
			 * Automatically remove missing or deleted products
			 * @description If a product is missing from the last time the feed was fetched, Jetti can automatically remove it from the feed. This will set the inventory to 0 in the store for that item.
			 * @default enabled
			 * @enum {string|null}
			 */
			fetchCleanup: "enabled" | "disabled" | null;
			/**
			 * @description Fetch frequency
			 * @default hourly
			 * @enum {string|null}
			 */
			fetchFrequency: "never" | "hourly" | "daily" | null;
			/** @description Fetch meta fields */
			fetchMetaFields?: boolean | null;
			/** @description Fetch problem */
			fetchProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Fetched
			 * @default 0
			 */
			fetched: number | null;
			/**
			 * Format: int32
			 * @description Google sheet tab
			 */
			googleSheetTab?: number | null;
			/** @description Handle prefix */
			handlePrefix?: string | null;
			/**
			 * @description Handle strategy
			 * @default externalGroupId
			 * @enum {string|null}
			 */
			handleStrategy:
				| "externalGroupId"
				| "externalGroupIdStart"
				| "name"
				| null;
			/**
			 * Format: int32
			 * @description Import seconds
			 * @default 0
			 */
			importSeconds: number | null;
			/**
			 * Format: int32
			 * @description Import seconds partial
			 * @default 0
			 */
			importSecondsPartial: number | null;
			/**
			 * @description Import tags
			 * @default true
			 */
			importTags: boolean | null;
			/**
			 * @description Individual products
			 * @default false
			 */
			individualProducts: boolean | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/**
			 * @description Inventory policy
			 * @default default
			 * @enum {string|null}
			 */
			inventoryPolicy: "default" | "ignore" | "continue" | "track" | null;
			/**
			 * Sync inventory policy
			 * @description When enabled, the inventory policy from the vendor. For example, if the vendor changes the item from tracked to untracked, this will be reflected within your online store. We'd recommend keeping this enabled unless you are trying to cover a specific use case, such as selling the item into negative quantities if you have an agreement to oversell the item with the vendor.
			 * @default true
			 */
			inventoryPolicySync: boolean | null;
			/** @description Inventory quantity field */
			inventoryQuantityField?: string | null;
			/**
			 * Format: int32
			 * @description Inventory restriction level
			 * @default 0
			 */
			inventoryRestrictionLevel: number | null;
			/**
			 * @description Inventory sync
			 * @default all
			 * @enum {string|null}
			 */
			inventorySync: "all" | "selected" | "none" | null;
			/** @description Is beta */
			isBeta?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Is valid
			 * @default true
			 */
			isValid: boolean | null;
			/**
			 * @description Json mapping
			 * @default default
			 * @enum {string|null}
			 */
			jsonMapping: "default" | "custom" | null;
			/** @description Json root */
			jsonRoot?: string | null;
			/**
			 * Structure of the JSON API
			 * @description Select whether the feed has a nested or flat structure. A nested structure will have variants listed within a parent product object. Whereas a flat structure will list our all items individually.
			 * @default nested
			 * @enum {string|null}
			 */
			jsonStructure: "nested" | "flat" | null;
			/**
			 * Format: date-time
			 * @description Last fetched at
			 */
			lastFetchedAt?: string | null;
			/** @description Last fetched file */
			lastFetchedFile?: string | null;
			/** @description Location ids */
			locationIds?: string[] | null;
			/** @description Magento store */
			magentoStoreId?: string | null;
			/**
			 * @description Manual fetch fequency
			 * @default default
			 * @enum {string|null}
			 */
			manualFetchFequency: "default" | "hourly" | "daily" | null;
			/**
			 * @description Mapping
			 * @default inventory
			 * @enum {string|null}
			 */
			mapping:
				| "inventory"
				| "inventory_pricing"
				| "shopify"
				| "custom"
				| "publishing"
				| "channelEngine"
				| null;
			/**
			 * @description Mapping type
			 * @default import
			 * @enum {string|null}
			 */
			mappingType: "fetch" | "import" | null;
			/**
			 * Format: int32
			 * @description Minimum inventory quantity
			 */
			minimumInventoryQuantity?: number | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Name */
			name: string;
			/**
			 * @description Override vendor name
			 * @default true
			 */
			overrideVendorName: boolean | null;
			/**
			 * @description Overwrite tags
			 * @default false
			 */
			overwriteTags: boolean | null;
			/** @description Parse webhook endpoint */
			parseWebhookEndpoint?: string | null;
			/**
			 * @description Prefix handle
			 * @default false
			 */
			prefixHandle: boolean | null;
			/**
			 * @description Prefix name
			 * @default false
			 */
			prefixName: boolean | null;
			/** @description Prefix seperator */
			prefixSeperator?: string | null;
			/**
			 * @description Prefix sku
			 * @default false
			 */
			prefixSku: boolean | null;
			/**
			 * @description Presta shop legacy
			 * @default false
			 */
			prestaShopLegacy: boolean | null;
			/**
			 * @description Price change base
			 * @default retail_price
			 * @enum {string|null}
			 */
			priceChangeBase: "retail_price" | "cost_price" | null;
			/** @description Price field */
			priceField?: string | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Process type
			 * @default default
			 * @enum {string|null}
			 */
			processType: "default" | "push" | null;
			/**
			 * @description Publish changes automatically
			 * @default false
			 */
			publishChangesAutomatically: boolean | null;
			/**
			 * @description Publish products
			 * @default false
			 */
			publishProducts: boolean | null;
			/**
			 * @description Purpose
			 * @default publishing
			 * @enum {string|null}
			 */
			purpose: "publishing" | "inventory" | null;
			/**
			 * @description Require barcode
			 * @default false
			 */
			requireBarcode: boolean | null;
			/** @description Resource location */
			resourceLocation?: string | null;
			/** @description Resource path */
			resourcePath?: string | null;
			/**
			 * @description Resource type
			 * @enum {string}
			 */
			resourceType:
				| "api"
				| "bigCommerce"
				| "channelEngine"
				| "channelEngineCsv"
				| "etsy"
				| "ftpCsv"
				| "googleDrive"
				| "json"
				| "magento"
				| "magentoLegacy"
				| "manual"
				| "prestaShop"
				| "salesforce"
				| "selz"
				| "shopify_csv"
				| "shopify"
				| "squareSpace"
				| "tradeGecko"
				| "upload"
				| "webhook"
				| "wooCommerce"
				| "wooCommerceLegacy"
				| "wix"
				| "xml";
			/**
			 * @description Restrict inventory import
			 * @default false
			 */
			restrictInventoryImport: boolean | null;
			/**
			 * @description Retail price change
			 * @default 0
			 */
			retailPriceChange: number | null;
			/**
			 * @description Retail price change type
			 * @default percentage
			 * @enum {string|null}
			 */
			retailPriceChangeType: "percentage" | "fixed" | null;
			/**
			 * @description Review changes
			 * @default false
			 */
			reviewChanges: boolean | null;
			/**
			 * New Product(s) email Notification
			 * @description Send a notification email whenever new items are discovered in the feed. Currently, this will not specify new items, only alert you that items have been added.
			 * @default false
			 */
			sendNotification: boolean | null;
			/**
			 * @description Send webhook
			 * @default false
			 */
			sendWebhook: boolean | null;
			/**
			 * Format: int32
			 * @description Skipped
			 * @default 0
			 */
			skipped: number | null;
			/** @description Sku exempt */
			skuExempt?: boolean | null;
			/** @description Sku field */
			skuField?: string | null;
			/** @description Sku prefix */
			skuPrefix?: string | null;
			/**
			 * @description Strip tags
			 * @default false
			 */
			stripTags: boolean | null;
			/**
			 * Strip the following tags when importing
			 * @description Jetti will automatically import tags from your vendors, alongside adding additional tags automatically. However, your search or product page may automatically show any new tags from products published through Jetti. This will lead to unwanted tags appearing to customers. You can specify any tags you do not wanted imported here.
			 */
			strippedTags?: string[] | null;
			/**
			 * @description Sync all price lists
			 * @default true
			 */
			syncAllPriceLists: boolean | null;
			/**
			 * @description Sync cost prices
			 * @default false
			 */
			syncCostPrices: boolean | null;
			/**
			 * @description Sync description
			 * @default false
			 */
			syncDescription: boolean | null;
			/**
			 * @description Sync images
			 * @default false
			 */
			syncImages: boolean | null;
			/**
			 * @description Sync name
			 * @default false
			 */
			syncName: boolean | null;
			/**
			 * @description Sync options
			 * @default false
			 */
			syncOptions: boolean | null;
			/**
			 * @description Sync pricing
			 * @default false
			 */
			syncPricing: boolean | null;
			/**
			 * @description Sync product type
			 * @default false
			 */
			syncProductType: boolean | null;
			/**
			 * @description Sync sale prices
			 * @default true
			 */
			syncSalePrices: boolean | null;
			/**
			 * @description Sync tags
			 * @default false
			 */
			syncTags: boolean | null;
			/**
			 * @description Sync weight
			 * @default false
			 */
			syncWeight: boolean | null;
			/**
			 * Sync the weight, even when zero
			 * @description You may want to disable the syncing of weights if an item has no weight in the inventory feed. Otherwise, if you've manually adjusted the weight in Jetti or your store, it might reset the weight back to zero again the next time the feed is refetched
			 * @default false
			 */
			syncWeightZero: boolean | null;
			/**
			 * Include of exclude items based on tag
			 * @default deny
			 * @enum {string|null}
			 */
			tagRestriction: "deny" | "allow" | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Tax handling when publishing
			 * @description Change whether the item should use the taxable status of the item when importer. Or, whether you want to override this. This may be useful if you wanted to publish the items as non-taxable for example, when the dropship provider has them flagged as taxable.
			 * @default default
			 * @enum {string|null}
			 */
			taxableOverride: "default" | "taxable" | "notTaxable" | null;
			/** @description Transform image template */
			transformImageTemplate?: string | null;
			/** @description Transform images */
			transformImages?: boolean | null;
			/**
			 * @description Transform tags
			 * @default unchanged
			 * @enum {string|null}
			 */
			transformTags:
				| "unchanged"
				| "uppercase"
				| "lowercase"
				| "humanize"
				| "dasherize"
				| null;
			/**
			 * @description Unpublish removed items
			 * @default false
			 */
			unpublishRemovedItems: boolean | null;
			/** @description Unpublished products */
			unpublishedProducts?: boolean | null;
			/** @description Upload pricing */
			uploadPricing?: boolean | null;
			/** @description Use parse webhook endpoint */
			useParseWebhookEndpoint?: boolean | null;
			/** @description Use proxy */
			useProxy?: boolean | null;
			/** @description Validation message */
			validationMessage?: string[] | null;
			/** @description Vendor name */
			vendorName?: string | null;
			/** @description Vendor name metafields */
			vendorNameMetafields?: boolean | null;
			/** @description Webhook endpoint */
			webhookEndpoint?: string | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
			/**
			 * @description Xml mapping
			 * @default google
			 * @enum {string|null}
			 */
			xmlMapping: "custom" | "google" | null;
			/** @description Xml path */
			xmlPath?: string | null;
			/**
			 * @description Zero null prices
			 * @default false
			 */
			zeroNullPrices: boolean | null;
		};
		"inventory-feed-channel": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-channel-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
		};
		"inventory-feed-field": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/** @description Inventory quantity boolean */
			inventoryQuantityBoolean?: string | null;
			/**
			 * Format: int32
			 * @description Inventory quantity default
			 */
			inventoryQuantityDefault?: number | null;
			/** @description Meta fields scope */
			metaFieldsScope?: string | null;
			/**
			 * Header name
			 * @description The header name is __case sensitive__, so make sure it matches exactly with your document's header.
			 */
			name: string;
			/** @description Normalize image url */
			normalizeImageUrl?: boolean | null;
			/** @description Option name */
			optionName?: string | null;
			/** @description Parse number */
			parseNumber?: boolean | null;
			/** @description Prefix */
			prefix?: string | null;
			/**
			 * @description Price operator
			 * @default addition
			 * @enum {string|null}
			 */
			priceOperator: "addition" | "subtract" | "multiply" | "divide" | null;
			/** @description Price operator field */
			priceOperatorField?: string | null;
			/**
			 * @description Price operator value
			 * @default 0
			 */
			priceOperatorValue: number | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "barcode"
				| "compareAtPrice"
				| "costPrice"
				| "description"
				| "externalGroupId"
				| "externalId"
				| "grams"
				| "handle"
				| "images"
				| "inventoryQuantity"
				| "inventoryQuantityBoolean"
				| "metaFields"
				| "name"
				| "option"
				| "productType"
				| "requiresShipping"
				| "retailPrice"
				| "sku"
				| "tags"
				| "vendorName"
				| "weight";
			/** @description Seperator */
			seperator?: string | null;
			/** @description Slugify */
			slugify?: boolean | null;
			/** @description Strip */
			strip?: string[] | null;
			/**
			 * @description Subfield purpose
			 * @enum {string|null}
			 */
			subfieldPurpose?:
				| "inventoryQuantity"
				| "externalId"
				| "externalGroupId"
				| "sku"
				| "vendorName"
				| "costPrice"
				| "retailPrice"
				| "name"
				| "images"
				| "productType"
				| "requiresShipping"
				| "barcode"
				| "grams"
				| "options"
				| "tags"
				| "description"
				| null;
			/** @description Subfield regex */
			subfieldRegex?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-field-new": {
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/** @description Inventory quantity boolean */
			inventoryQuantityBoolean?: string | null;
			/**
			 * Format: int32
			 * @description Inventory quantity default
			 */
			inventoryQuantityDefault?: number | null;
			/** @description Meta fields scope */
			metaFieldsScope?: string | null;
			/**
			 * Header name
			 * @description The header name is __case sensitive__, so make sure it matches exactly with your document's header.
			 */
			name: string;
			/** @description Normalize image url */
			normalizeImageUrl?: boolean | null;
			/** @description Option name */
			optionName?: string | null;
			/** @description Parse number */
			parseNumber?: boolean | null;
			/** @description Prefix */
			prefix?: string | null;
			/**
			 * @description Price operator
			 * @default addition
			 * @enum {string|null}
			 */
			priceOperator: "addition" | "subtract" | "multiply" | "divide" | null;
			/** @description Price operator field */
			priceOperatorField?: string | null;
			/**
			 * @description Price operator value
			 * @default 0
			 */
			priceOperatorValue: number | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "barcode"
				| "compareAtPrice"
				| "costPrice"
				| "description"
				| "externalGroupId"
				| "externalId"
				| "grams"
				| "handle"
				| "images"
				| "inventoryQuantity"
				| "inventoryQuantityBoolean"
				| "metaFields"
				| "name"
				| "option"
				| "productType"
				| "requiresShipping"
				| "retailPrice"
				| "sku"
				| "tags"
				| "vendorName"
				| "weight";
			/** @description Seperator */
			seperator?: string | null;
			/** @description Slugify */
			slugify?: boolean | null;
			/** @description Strip */
			strip?: string[] | null;
			/**
			 * @description Subfield purpose
			 * @enum {string|null}
			 */
			subfieldPurpose?:
				| "inventoryQuantity"
				| "externalId"
				| "externalGroupId"
				| "sku"
				| "vendorName"
				| "costPrice"
				| "retailPrice"
				| "name"
				| "images"
				| "productType"
				| "requiresShipping"
				| "barcode"
				| "grams"
				| "options"
				| "tags"
				| "description"
				| null;
			/** @description Subfield regex */
			subfieldRegex?: string | null;
		};
		"inventory-feed-file": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description File type
			 * @enum {string|null}
			 */
			fileType?: "json" | "csv" | "xml" | null;
			/** @description File uri */
			fileUri?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-file-new": {
			/**
			 * @description File type
			 * @enum {string|null}
			 */
			fileType?: "json" | "csv" | "xml" | null;
			/** @description File uri */
			fileUri?: string | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
		};
		"inventory-feed-json-field": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/** @description Inventory quantity boolean */
			inventoryQuantityBoolean?: string | null;
			/**
			 * Format: int32
			 * @description Inventory quantity default
			 */
			inventoryQuantityDefault?: number | null;
			/**
			 * @description Object
			 * @default variant
			 * @enum {string}
			 */
			object: "product" | "variant";
			/** @description Parse number */
			parseNumber?: boolean | null;
			/** @description Path */
			path?: string | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "barcode"
				| "compareAtPrice"
				| "costPrice"
				| "description"
				| "externalGroupId"
				| "externalId"
				| "grams"
				| "images"
				| "inventoryQuantity"
				| "inventoryQuantityBoolean"
				| "name"
				| "options"
				| "productType"
				| "requiresShipping"
				| "retailPrice"
				| "sku"
				| "tags"
				| "vendorName";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-json-field-new": {
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/** @description Inventory quantity boolean */
			inventoryQuantityBoolean?: string | null;
			/**
			 * Format: int32
			 * @description Inventory quantity default
			 */
			inventoryQuantityDefault?: number | null;
			/**
			 * @description Object
			 * @default variant
			 * @enum {string}
			 */
			object: "product" | "variant";
			/** @description Parse number */
			parseNumber?: boolean | null;
			/** @description Path */
			path?: string | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "barcode"
				| "compareAtPrice"
				| "costPrice"
				| "description"
				| "externalGroupId"
				| "externalId"
				| "grams"
				| "images"
				| "inventoryQuantity"
				| "inventoryQuantityBoolean"
				| "name"
				| "options"
				| "productType"
				| "requiresShipping"
				| "retailPrice"
				| "sku"
				| "tags"
				| "vendorName";
		};
		"inventory-feed-mapping": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Field
			 * @enum {string}
			 */
			field: "optionName" | "optionValue";
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId?: number | null;
			/**
			 * @description Match type
			 * @enum {string}
			 */
			matchType:
				| "includes"
				| "excludes"
				| "matches"
				| "startsWith"
				| "endsWith";
			/** @description Transform from */
			transformFrom: string[];
			/** @description Transform to */
			transformTo: string;
			/**
			 * @description Transform type
			 * @default none
			 * @enum {string}
			 */
			transformType: "capitalize" | "humanize" | "none";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-mapping-new": {
			/**
			 * @description Field
			 * @enum {string}
			 */
			field: "optionName" | "optionValue";
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId?: number | null;
			/**
			 * @description Match type
			 * @enum {string}
			 */
			matchType:
				| "includes"
				| "excludes"
				| "matches"
				| "startsWith"
				| "endsWith";
			/** @description Transform from */
			transformFrom: string[];
			/** @description Transform to */
			transformTo: string;
			/**
			 * @description Transform type
			 * @default none
			 * @enum {string}
			 */
			transformType: "capitalize" | "humanize" | "none";
		};
		"inventory-feed-parameter": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Type
			 * @default query
			 * @enum {string|null}
			 */
			type: "header" | "query" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?: string | null;
		};
		"inventory-feed-parameter-new": {
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Type
			 * @default query
			 * @enum {string|null}
			 */
			type: "header" | "query" | null;
			/** @description Value */
			value?: string | null;
		};
		"inventory-feed-price-list": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-price-list-new": {
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
		};
		"inventory-feed-product": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Images
			 * @default []
			 */
			images: string[] | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-feed-product-new": {
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Images
			 * @default []
			 */
			images: string[] | null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
		};
		"inventory-feed-variant": {
			/** @description Barcode */
			barcode?: string | null;
			/** @description Cached compare at price */
			cachedCompareAtPrice?: string | null;
			/** @description Cached handle */
			cachedHandle?: string | null;
			/** @description Cached name */
			cachedName?: string | null;
			/** @description Cached retail price */
			cachedRetailPrice?: string | null;
			/** @description Cached tags */
			cachedTags?: string[] | null;
			/**
			 * @description Changes pending
			 * @default false
			 */
			changesPending: boolean | null;
			/** @description Compare at price */
			compareAtPrice?: number | null;
			/** @description Cost price */
			costPrice?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Description */
			description?: string | null;
			/** @description External group */
			externalGroupId?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: float
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Handle */
			handle?: string | null;
			/** @description Hash */
			hash?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Images
			 * @default []
			 */
			images:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * @description Inventory policy
			 * @default track
			 * @enum {string|null}
			 */
			inventoryPolicy:
				| "ignore"
				| "deny"
				| "continue"
				| "dropship"
				| "track"
				| null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/**
			 * Format: date-time
			 * @description Last fetched at
			 */
			lastFetchedAt?: string | null;
			/** @description Messages */
			messages?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Meta fields */
			metaFields?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Options
			 * @default []
			 */
			options:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Original sku */
			originalSku?: string | null;
			/**
			 * Format: int32
			 * @description Position
			 */
			position?: number | null;
			/** @description Product type */
			productType?: string | null;
			/**
			 * @description Requires shipping
			 * @default true
			 */
			requiresShipping: boolean | null;
			/** @description Retail price */
			retailPrice?: number | null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status:
				| "pending"
				| "connected"
				| "error"
				| "removed"
				| "publishing"
				| "queued";
			/**
			 * @description Tags
			 * @default []
			 */
			tags: string[] | null;
			/**
			 * @description Taxable
			 * @default true
			 */
			taxable: boolean | null;
			/**
			 * @description Unique on
			 * @default none
			 * @enum {string|null}
			 */
			uniqueOn: "none" | "externalId" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
			/** @description Vendor name */
			vendorName?: string | null;
			/** @description Vendor sku */
			vendorSku: string;
		};
		"inventory-feed-variant-new": {
			/** @description Barcode */
			barcode?: string | null;
			/** @description Cached compare at price */
			cachedCompareAtPrice?: string | null;
			/** @description Cached handle */
			cachedHandle?: string | null;
			/** @description Cached name */
			cachedName?: string | null;
			/** @description Cached retail price */
			cachedRetailPrice?: string | null;
			/** @description Cached tags */
			cachedTags?: string[] | null;
			/**
			 * @description Changes pending
			 * @default false
			 */
			changesPending: boolean | null;
			/** @description Compare at price */
			compareAtPrice?: number | null;
			/** @description Cost price */
			costPrice?: number | null;
			/** @description Description */
			description?: string | null;
			/** @description External group */
			externalGroupId?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: float
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Handle */
			handle?: string | null;
			/** @description Hash */
			hash?: string | null;
			/**
			 * @description Images
			 * @default []
			 */
			images:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Inventory feed
			 */
			inventoryFeedId: number;
			/**
			 * @description Inventory policy
			 * @default track
			 * @enum {string|null}
			 */
			inventoryPolicy:
				| "ignore"
				| "deny"
				| "continue"
				| "dropship"
				| "track"
				| null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/**
			 * Format: date-time
			 * @description Last fetched at
			 */
			lastFetchedAt?: string | null;
			/** @description Messages */
			messages?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Meta fields */
			metaFields?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Options
			 * @default []
			 */
			options:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Original sku */
			originalSku?: string | null;
			/**
			 * Format: int32
			 * @description Position
			 */
			position?: number | null;
			/** @description Product type */
			productType?: string | null;
			/**
			 * @description Requires shipping
			 * @default true
			 */
			requiresShipping: boolean | null;
			/** @description Retail price */
			retailPrice?: number | null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status:
				| "pending"
				| "connected"
				| "error"
				| "removed"
				| "publishing"
				| "queued";
			/**
			 * @description Tags
			 * @default []
			 */
			tags: string[] | null;
			/**
			 * @description Taxable
			 * @default true
			 */
			taxable: boolean | null;
			/**
			 * @description Unique on
			 * @default none
			 * @enum {string|null}
			 */
			uniqueOn: "none" | "externalId" | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
			/** @description Vendor name */
			vendorName?: string | null;
			/** @description Vendor sku */
			vendorSku: string;
		};
		"inventory-feed-variant-connection": {
			/**
			 * @description Action
			 * @enum {string|null}
			 */
			action?: "connected" | "disconnected" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed variant
			 */
			inventoryFeedVariantId: number;
			/**
			 * @description Scope
			 * @default unknown
			 * @enum {string|null}
			 */
			scope: "automated" | "manual" | "unknown" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
		};
		"inventory-feed-variant-connection-new": {
			/**
			 * @description Action
			 * @enum {string|null}
			 */
			action?: "connected" | "disconnected" | null;
			/**
			 * Format: int32
			 * @description Inventory feed variant
			 */
			inventoryFeedVariantId: number;
			/**
			 * @description Scope
			 * @default unknown
			 * @enum {string|null}
			 */
			scope: "automated" | "manual" | "unknown" | null;
			/** @description Value */
			value?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
		};
		"inventory-import": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description Case insensitive skus */
			caseInsensitiveSkus?: boolean | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/** @description File uri */
			fileUri: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number | null;
			/**
			 * @description Import schedule
			 * @default manual
			 * @enum {string|null}
			 */
			importSchedule: "daily" | "hourly" | "manual" | null;
			/**
			 * Format: date-time
			 * @description Last imported at
			 */
			lastImportedAt?: string | null;
			/** @description Last imported uri */
			lastImportedUri?: string | null;
			/** @description Name */
			name: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"inventory-import-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description Case insensitive skus */
			caseInsensitiveSkus?: boolean | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/** @description File uri */
			fileUri: string;
			/**
			 * @description Import schedule
			 * @default manual
			 * @enum {string|null}
			 */
			importSchedule: "daily" | "hourly" | "manual" | null;
			/**
			 * Format: date-time
			 * @description Last imported at
			 */
			lastImportedAt?: string | null;
			/** @description Last imported uri */
			lastImportedUri?: string | null;
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"inventory-import-field": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number | null;
			/**
			 * Format: int32
			 * @description Inventory import
			 */
			inventoryImportId: number;
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "automaticallyBackorder"
				| "backorderQuantity"
				| "barcode"
				| "compareAtPrice"
				| "costPrice"
				| "denyThreshold"
				| "grams"
				| "inventoryPolicy"
				| "inventoryQuantity"
				| "price"
				| "sku"
				| "vendorSku";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"inventory-import-field-new": {
			/**
			 * Format: int32
			 * @description Inventory import
			 */
			inventoryImportId: number;
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Purpose
			 * @enum {string}
			 */
			purpose:
				| "automaticallyBackorder"
				| "backorderQuantity"
				| "barcode"
				| "compareAtPrice"
				| "costPrice"
				| "denyThreshold"
				| "grams"
				| "inventoryPolicy"
				| "inventoryQuantity"
				| "price"
				| "sku"
				| "vendorSku";
		};
		"inventory-transfer": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description From warehouse
			 */
			fromWarehouseId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Notes */
			notes?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: int32
			 * @description To warehouse
			 */
			toWarehouseId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"inventory-transfer-new": {
			/**
			 * Format: int32
			 * @description From warehouse
			 */
			fromWarehouseId: number;
			/** @description Notes */
			notes?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: int32
			 * @description To warehouse
			 */
			toWarehouseId: number;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"inventory-transfer-item": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory transfer
			 */
			inventoryTransferId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"inventory-transfer-item-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: int32
			 * @description Inventory transfer
			 */
			inventoryTransferId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"label-payload": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Rate */
			rate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Shipping rate cache
			 */
			shippingRateCacheId?: number | null;
			/**
			 * @description Status
			 * @enum {string}
			 */
			status: "success" | "error";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"label-payload-new": {
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Rate */
			rate?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Shipping rate cache
			 */
			shippingRateCacheId?: number | null;
			/**
			 * @description Status
			 * @enum {string}
			 */
			status: "success" | "error";
		};
		"landed-cost": {
			/** @description Countries */
			countries?: string[] | null;
			/**
			 * @description Country scope
			 * @default all
			 * @enum {string|null}
			 */
			countryScope:
				| "all"
				| "domestic"
				| "international"
				| "selected"
				| "excluded"
				| null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Dropship provider filter
			 * @default all
			 * @enum {string|null}
			 */
			dropshipProviderFilter: "all" | "include" | "exclude" | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * @description Type
			 * @default purchase_item
			 * @enum {string}
			 */
			type: "purchase" | "purchase_item" | "purchase_shipping_rate";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Value */
			value: number;
			/**
			 * @description Value type
			 * @enum {string}
			 */
			valueType: "absolute" | "percentage";
		};
		"landed-cost-new": {
			/** @description Countries */
			countries?: string[] | null;
			/**
			 * @description Country scope
			 * @default all
			 * @enum {string|null}
			 */
			countryScope:
				| "all"
				| "domestic"
				| "international"
				| "selected"
				| "excluded"
				| null;
			/**
			 * @description Dropship provider filter
			 * @default all
			 * @enum {string|null}
			 */
			dropshipProviderFilter: "all" | "include" | "exclude" | null;
			/** @description Name */
			name: string;
			/**
			 * @description Type
			 * @default purchase_item
			 * @enum {string}
			 */
			type: "purchase" | "purchase_item" | "purchase_shipping_rate";
			/** @description Value */
			value: number;
			/**
			 * @description Value type
			 * @enum {string}
			 */
			valueType: "absolute" | "percentage";
		};
		"landed-cost-dropship-provider": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Landed cost
			 */
			landedCostId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"landed-cost-dropship-provider-new": {
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Landed cost
			 */
			landedCostId: number;
		};
		"landed-cost-purchase-invoice": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Landed cost
			 */
			landedCostId: number;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"landed-cost-purchase-invoice-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: int32
			 * @description Landed cost
			 */
			landedCostId: number;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId: number;
		};
		"landed-cost-purchase-invoice-item": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Landed cost
			 */
			landedCostId: number;
			/**
			 * Format: int32
			 * @description Purchase invoice item
			 */
			purchaseInvoiceItemId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"landed-cost-purchase-invoice-item-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: int32
			 * @description Landed cost
			 */
			landedCostId: number;
			/**
			 * Format: int32
			 * @description Purchase invoice item
			 */
			purchaseInvoiceItemId: number;
		};
		"magento-store": {
			/** @description Api password */
			apiPassword: string;
			/** @description Api username */
			apiUsername: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Last fetched sales at
			 */
			lastFetchedSalesAt?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Paid statuses */
			paidStatuses?: string[] | null;
			/**
			 * @description Send shipment notifications
			 * @default true
			 */
			sendShipmentNotifications: boolean | null;
			/** @description Shop */
			shop: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Vendor field */
			vendorField?: string | null;
		};
		"magento-store-new": {
			/** @description Api password */
			apiPassword: string;
			/** @description Api username */
			apiUsername: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: date-time
			 * @description Last fetched sales at
			 */
			lastFetchedSalesAt?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Paid statuses */
			paidStatuses?: string[] | null;
			/**
			 * @description Send shipment notifications
			 * @default true
			 */
			sendShipmentNotifications: boolean | null;
			/** @description Shop */
			shop: string;
			/** @description Vendor field */
			vendorField?: string | null;
		};
		manifest: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Documents */
			documents: string[];
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description External */
			externalId: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
		};
		"manifest-new": {
			/** @description Documents */
			documents: string[];
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description External */
			externalId: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
		};
		note: {
			/**
			 * @description Action status
			 * @default pending
			 * @enum {string|null}
			 */
			actionStatus: "pending" | "complete" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Notes */
			notes?: string | null;
			/** @description Timekit */
			timekitId?: string | null;
			/** @description Timekit response */
			timekitResponse?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Type
			 * @default note
			 * @enum {string|null}
			 */
			type: "note" | "action" | "meeting" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"note-new": {
			/**
			 * @description Action status
			 * @default pending
			 * @enum {string|null}
			 */
			actionStatus: "pending" | "complete" | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Timekit */
			timekitId?: string | null;
			/** @description Timekit response */
			timekitResponse?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Type
			 * @default note
			 * @enum {string|null}
			 */
			type: "note" | "action" | "meeting" | null;
		};
		option: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Position
			 * @default 1
			 */
			position: number;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"option-new": {
			/** @description Name */
			name: string;
			/**
			 * Format: int32
			 * @description Position
			 * @default 1
			 */
			position: number;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId: number;
		};
		"option-value": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Option
			 */
			optionId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/** @description Variant value */
			variantValue: string;
		};
		"option-value-new": {
			/**
			 * Format: int32
			 * @description Option
			 */
			optionId: number;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/** @description Variant value */
			variantValue: string;
		};
		"payment-method": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/** @description Redirect url */
			redirectUrl?: string | null;
			/**
			 * @description Show in vendor portal
			 * @default true
			 */
			showInVendorPortal: boolean | null;
			/**
			 * Show the notes field
			 * @description This may be useful if you want the vendor to add in an email or other details in the vendor portal when selecting their payout method.
			 * @default false
			 */
			showNotes: boolean | null;
			/**
			 * @description Source
			 * @default other
			 * @enum {string}
			 */
			source:
				| "bacs"
				| "check"
				| "custom"
				| "ost"
				| "other"
				| "paypal"
				| "stripe_managed"
				| "stripe"
				| "transferwise";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"payment-method-new": {
			/** @description Name */
			name: string;
			/** @description Redirect url */
			redirectUrl?: string | null;
			/**
			 * @description Show in vendor portal
			 * @default true
			 */
			showInVendorPortal: boolean | null;
			/**
			 * Show the notes field
			 * @description This may be useful if you want the vendor to add in an email or other details in the vendor portal when selecting their payout method.
			 * @default false
			 */
			showNotes: boolean | null;
			/**
			 * @description Source
			 * @default other
			 * @enum {string}
			 */
			source:
				| "bacs"
				| "check"
				| "custom"
				| "ost"
				| "other"
				| "paypal"
				| "stripe_managed"
				| "stripe"
				| "transferwise";
		};
		"platform-shipping-mapping": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description From provider */
			fromProvider?: string | null;
			/** @description From service level */
			fromServiceLevel?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description To code */
			toCode?: string | null;
			/** @description To provider */
			toProvider?: string | null;
			/** @description To service level */
			toServiceLevel?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"platform-shipping-mapping-new": {
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description From provider */
			fromProvider?: string | null;
			/** @description From service level */
			fromServiceLevel?: string | null;
			/** @description To code */
			toCode?: string | null;
			/** @description To provider */
			toProvider?: string | null;
			/** @description To service level */
			toServiceLevel?: string | null;
		};
		price: {
			/** @description Compare at price */
			compareAtPrice?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Price */
			price: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"price-new": {
			/** @description Compare at price */
			compareAtPrice?: number | null;
			/** @description Price */
			price: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"price-list": {
			/** @description Compare at price header */
			compareAtPriceHeader?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Currency
			 */
			currencyId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Import from url */
			importFromUrl?: boolean | null;
			/** @description Import url */
			importUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Last fetched at
			 */
			lastFetchedAt?: string | null;
			/** @description Last fetched file */
			lastFetchedFile?: string | null;
			/** @description Name */
			name: string;
			/** @description Parse number */
			parseNumber?: boolean | null;
			/** @description Price header */
			priceHeader?: string | null;
			/** @description Sku header */
			skuHeader?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "archived" | null;
			/**
			 * @description Type
			 * @default sale
			 * @enum {string}
			 */
			type: "sale" | "purchase";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zero compare at prices */
			zeroCompareAtPrices?: boolean | null;
		};
		"price-list-new": {
			/** @description Compare at price header */
			compareAtPriceHeader?: string | null;
			/**
			 * Format: int32
			 * @description Currency
			 */
			currencyId: number;
			/** @description Import from url */
			importFromUrl?: boolean | null;
			/** @description Import url */
			importUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Last fetched at
			 */
			lastFetchedAt?: string | null;
			/** @description Last fetched file */
			lastFetchedFile?: string | null;
			/** @description Name */
			name: string;
			/** @description Parse number */
			parseNumber?: boolean | null;
			/** @description Price header */
			priceHeader?: string | null;
			/** @description Sku header */
			skuHeader?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "archived" | null;
			/**
			 * @description Type
			 * @default sale
			 * @enum {string}
			 */
			type: "sale" | "purchase";
			/** @description Zero compare at prices */
			zeroCompareAtPrices?: boolean | null;
		};
		"price-update": {
			/**
			 * Format: int32
			 * @description Channel variant
			 */
			channelVariantId?: number | null;
			/** @description Compare at price cache */
			compareAtPriceCache?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Exchange rate */
			exchangeRate?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory feed variant
			 */
			inventoryFeedVariantId?: number | null;
			/** @description Price cache */
			priceCache?: number | null;
			/**
			 * Format: int32
			 * @description Price
			 */
			priceId: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Trigger
			 * @enum {string|null}
			 */
			trigger?:
				| "channelImport"
				| "inventoryFeed"
				| "priceList"
				| "manual"
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"price-update-new": {
			/**
			 * Format: int32
			 * @description Channel variant
			 */
			channelVariantId?: number | null;
			/** @description Compare at price cache */
			compareAtPriceCache?: number | null;
			/** @description Exchange rate */
			exchangeRate?: number | null;
			/**
			 * Format: int32
			 * @description Inventory feed variant
			 */
			inventoryFeedVariantId?: number | null;
			/** @description Price cache */
			priceCache?: number | null;
			/**
			 * Format: int32
			 * @description Price
			 */
			priceId: number;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Trigger
			 * @enum {string|null}
			 */
			trigger?:
				| "channelImport"
				| "inventoryFeed"
				| "priceList"
				| "manual"
				| null;
		};
		product: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Handle */
			handle: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Vendor */
			vendor?: string | null;
		};
		"product-new": {
			/** @description Handle */
			handle: string;
			/** @description Name */
			name: string;
			/** @description Vendor */
			vendor?: string | null;
		};
		purchase: {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * @description Approved
			 * @default true
			 */
			approved: boolean;
			/** @description Billing address line one */
			billingAddressLineOne?: string | null;
			/** @description Billing address line two */
			billingAddressLineTwo?: string | null;
			/** @description Billing address message */
			billingAddressMessage?: string | null;
			/** @description Billing city */
			billingCity?: string | null;
			/** @description Billing country */
			billingCountry?: string | null;
			/** @description Billing first name */
			billingFirstName?: string | null;
			/** @description Billing full name */
			billingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Billing last name */
			billingLastName?: string | null;
			/** @description Billing name */
			billingName?: string | null;
			/** @description Billing state */
			billingState?: string | null;
			/** @description Billing zip */
			billingZip?: string | null;
			/**
			 * @description Cancellation status
			 * @default none
			 * @enum {string}
			 */
			cancellationStatus: "none" | "partial" | "full";
			/**
			 * @description Cancelled
			 * @default false
			 */
			cancelled: boolean;
			/**
			 * Format: date-time
			 * @description Cancelled at
			 */
			cancelledAt?: string | null;
			/** @description City tax location */
			cityTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description City tax rate
			 */
			cityTaxRate?: number | null;
			/**
			 * Format: float
			 * @description Combined tax rate
			 */
			combinedTaxRate?: number | null;
			/** @description County tax location */
			countyTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description County tax rate
			 */
			countyTaxRate?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Customer reference */
			customerReference?: string | null;
			/**
			 * Format: date-time
			 * @description Date ordered
			 * @default {}
			 */
			dateOrdered: string;
			/**
			 * Format: date-time
			 * @description Delivery expected at
			 */
			deliveryExpectedAt?: string | null;
			/**
			 * @description Discounts
			 * @default 0
			 */
			discounts: number;
			/**
			 * Format: float
			 * @description District tax rate
			 */
			districtTaxRate?: number | null;
			/** @description Dropship notes */
			dropshipNotes?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Finalized
			 * @default true
			 */
			finalized: boolean;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Internal reference */
			internalReference?: string | null;
			/** @description Invalid billing address */
			invalidBillingAddress?: string | null;
			/**
			 * @description Invalid shipping address
			 * @default false
			 */
			invalidShippingAddress: boolean | null;
			/**
			 * @description Inventory status
			 * @default notReceived
			 * @enum {string}
			 */
			inventoryStatus: "notReceived" | "partiallyReceived" | "received";
			/**
			 * @description Invoice status
			 * @default notInvoiced
			 * @enum {string}
			 */
			invoiceStatus: "notInvoiced" | "partiallyInvoiced" | "invoiced";
			/** @description Is dropship */
			isDropship: boolean;
			/** @description Label problem */
			labelProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Last dropshipment reference
			 * @default 0
			 */
			lastDropshipmentReference: number | null;
			/**
			 * Format: int32
			 * @description Last goods receipt reference
			 * @default 0
			 */
			lastGoodsReceiptReference: number | null;
			/**
			 * Format: int32
			 * @description Last purchase invoice reference
			 * @default 0
			 */
			lastPurchaseInvoiceReference: number | null;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Order problem */
			orderProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Order splitting
			 * @default group
			 * @enum {string|null}
			 */
			orderSplitting: "group" | "splitTag" | "splitQuantity" | null;
			/** @description Order splitting key */
			orderSplittingKey?: string | null;
			/**
			 * Format: date-time
			 * @description Payment expected at
			 */
			paymentExpectedAt?: string | null;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/**
			 * Format: int32
			 * @description Purchase status
			 */
			purchaseStatusId?: number | null;
			/**
			 * @description Purchase type
			 * @default replenishment
			 * @enum {string}
			 */
			purchaseType:
				| "replenishment"
				| "dropship"
				| "automated_dropship"
				| "automated_replenishment"
				| "adjusted_dropship";
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/** @description Receiver address line one */
			receiverAddressLineOne?: string | null;
			/** @description Receiver address line two */
			receiverAddressLineTwo?: string | null;
			/** @description Receiver city */
			receiverCity?: string | null;
			/** @description Receiver country */
			receiverCountry?: string | null;
			/** @description Receiver name */
			receiverName?: string | null;
			/** @description Receiver state */
			receiverState?: string | null;
			/** @description Receiver zip */
			receiverZip?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: date-time
			 * @description Reminder last sent
			 */
			reminderLastSent?: string | null;
			/**
			 * Format: int32
			 * @description Reminder sent
			 * @default false
			 */
			reminderSent: number | null;
			/**
			 * @description Return status
			 * @default notReturned
			 * @enum {string}
			 */
			returnStatus: "notReturned" | "partiallyReturned" | "returned";
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * @description Shipment routing
			 * @default customer
			 * @enum {string|null}
			 */
			shipmentRouting:
				| "customer"
				| "consolidated"
				| "consolidatedInternational"
				| null;
			/** @description Shipping address line one */
			shippingAddressLineOne?: string | null;
			/** @description Shipping address line two */
			shippingAddressLineTwo?: string | null;
			/**
			 * @description Shipping address message
			 * @default false
			 */
			shippingAddressMessage: boolean | null;
			/** @description Shipping city */
			shippingCity?: string | null;
			/** @description Shipping country */
			shippingCountry?: string | null;
			/**
			 * Format: date-time
			 * @description Shipping expected at
			 */
			shippingExpectedAt?: string | null;
			/** @description Shipping first name */
			shippingFirstName?: string | null;
			/** @description Shipping full name */
			shippingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shipping last name */
			shippingLastName?: string | null;
			/** @description Shipping name */
			shippingName?: string | null;
			/**
			 * @description Shipping rate error
			 * @enum {string|null}
			 */
			shippingRateError?: "value" | "weight" | null;
			/** @description Shipping state */
			shippingState?: string | null;
			/** @description Shipping zip */
			shippingZip?: string | null;
			/** @description Split tag */
			splitTag?: string | null;
			/** @description State tax location */
			stateTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description State tax rate
			 */
			stateTaxRate?: number | null;
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * @description Tax calculation
			 * @default default
			 * @enum {string|null}
			 */
			taxCalculation: "default" | "custom" | null;
			/**
			 * @description Tax included
			 * @default false
			 */
			taxIncluded: boolean;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean | null;
			/**
			 * @description Total
			 * @default 0
			 */
			total: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * @description Vendor endpoint format
			 * @enum {string|null}
			 */
			vendorEndpointFormat?:
				| "json"
				| "xml"
				| "csv"
				| "text"
				| "email"
				| "website"
				| "phone"
				| null;
			/** @description Vendor endpoint headers */
			vendorEndpointHeaders?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Vendor endpoint response */
			vendorEndpointResponse?: string | null;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId?: number | null;
			/** @description Vendor received */
			vendorReceivedId?: string | null;
			/** @description Vendor received reference */
			vendorReceivedReference?: string | null;
			/**
			 * @description Vendor received status
			 * @default notSent
			 * @enum {string|null}
			 */
			vendorReceivedStatus: "notSent" | "received" | "error" | null;
			/** @description Vendor reference */
			vendorReference?: string | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
			/**
			 * Format: float
			 * @description Weight
			 * @default 0
			 */
			weight: number | null;
		};
		"purchase-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/**
			 * @description Approved
			 * @default true
			 */
			approved: boolean;
			/** @description Billing address line one */
			billingAddressLineOne?: string | null;
			/** @description Billing address line two */
			billingAddressLineTwo?: string | null;
			/** @description Billing address message */
			billingAddressMessage?: string | null;
			/** @description Billing city */
			billingCity?: string | null;
			/** @description Billing country */
			billingCountry?: string | null;
			/** @description Billing first name */
			billingFirstName?: string | null;
			/** @description Billing full name */
			billingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Billing last name */
			billingLastName?: string | null;
			/** @description Billing name */
			billingName?: string | null;
			/** @description Billing state */
			billingState?: string | null;
			/** @description Billing zip */
			billingZip?: string | null;
			/**
			 * @description Cancellation status
			 * @default none
			 * @enum {string}
			 */
			cancellationStatus: "none" | "partial" | "full";
			/**
			 * @description Cancelled
			 * @default false
			 */
			cancelled: boolean;
			/**
			 * Format: date-time
			 * @description Cancelled at
			 */
			cancelledAt?: string | null;
			/** @description City tax location */
			cityTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description City tax rate
			 */
			cityTaxRate?: number | null;
			/**
			 * Format: float
			 * @description Combined tax rate
			 */
			combinedTaxRate?: number | null;
			/** @description County tax location */
			countyTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description County tax rate
			 */
			countyTaxRate?: number | null;
			/** @description Customer reference */
			customerReference?: string | null;
			/**
			 * Format: date-time
			 * @description Date ordered
			 * @default {}
			 */
			dateOrdered: string;
			/**
			 * Format: date-time
			 * @description Delivery expected at
			 */
			deliveryExpectedAt?: string | null;
			/**
			 * @description Discounts
			 * @default 0
			 */
			discounts: number;
			/**
			 * Format: float
			 * @description District tax rate
			 */
			districtTaxRate?: number | null;
			/** @description Dropship notes */
			dropshipNotes?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Finalized
			 * @default true
			 */
			finalized: boolean;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Internal reference */
			internalReference?: string | null;
			/** @description Invalid billing address */
			invalidBillingAddress?: string | null;
			/**
			 * @description Invalid shipping address
			 * @default false
			 */
			invalidShippingAddress: boolean | null;
			/**
			 * @description Inventory status
			 * @default notReceived
			 * @enum {string}
			 */
			inventoryStatus: "notReceived" | "partiallyReceived" | "received";
			/**
			 * @description Invoice status
			 * @default notInvoiced
			 * @enum {string}
			 */
			invoiceStatus: "notInvoiced" | "partiallyInvoiced" | "invoiced";
			/** @description Is dropship */
			isDropship: boolean;
			/** @description Label problem */
			labelProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Last dropshipment reference
			 * @default 0
			 */
			lastDropshipmentReference: number | null;
			/**
			 * Format: int32
			 * @description Last goods receipt reference
			 * @default 0
			 */
			lastGoodsReceiptReference: number | null;
			/**
			 * Format: int32
			 * @description Last purchase invoice reference
			 * @default 0
			 */
			lastPurchaseInvoiceReference: number | null;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Order problem */
			orderProblem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Order splitting
			 * @default group
			 * @enum {string|null}
			 */
			orderSplitting: "group" | "splitTag" | "splitQuantity" | null;
			/** @description Order splitting key */
			orderSplittingKey?: string | null;
			/**
			 * Format: date-time
			 * @description Payment expected at
			 */
			paymentExpectedAt?: string | null;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/**
			 * Format: int32
			 * @description Purchase status
			 */
			purchaseStatusId?: number | null;
			/**
			 * @description Purchase type
			 * @default replenishment
			 * @enum {string}
			 */
			purchaseType:
				| "replenishment"
				| "dropship"
				| "automated_dropship"
				| "automated_replenishment"
				| "adjusted_dropship";
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/** @description Receiver address line one */
			receiverAddressLineOne?: string | null;
			/** @description Receiver address line two */
			receiverAddressLineTwo?: string | null;
			/** @description Receiver city */
			receiverCity?: string | null;
			/** @description Receiver country */
			receiverCountry?: string | null;
			/** @description Receiver name */
			receiverName?: string | null;
			/** @description Receiver state */
			receiverState?: string | null;
			/** @description Receiver zip */
			receiverZip?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: date-time
			 * @description Reminder last sent
			 */
			reminderLastSent?: string | null;
			/**
			 * Format: int32
			 * @description Reminder sent
			 * @default false
			 */
			reminderSent: number | null;
			/**
			 * @description Return status
			 * @default notReturned
			 * @enum {string}
			 */
			returnStatus: "notReturned" | "partiallyReturned" | "returned";
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * @description Shipment routing
			 * @default customer
			 * @enum {string|null}
			 */
			shipmentRouting:
				| "customer"
				| "consolidated"
				| "consolidatedInternational"
				| null;
			/** @description Shipping address line one */
			shippingAddressLineOne?: string | null;
			/** @description Shipping address line two */
			shippingAddressLineTwo?: string | null;
			/**
			 * @description Shipping address message
			 * @default false
			 */
			shippingAddressMessage: boolean | null;
			/** @description Shipping city */
			shippingCity?: string | null;
			/** @description Shipping country */
			shippingCountry?: string | null;
			/**
			 * Format: date-time
			 * @description Shipping expected at
			 */
			shippingExpectedAt?: string | null;
			/** @description Shipping first name */
			shippingFirstName?: string | null;
			/** @description Shipping full name */
			shippingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shipping last name */
			shippingLastName?: string | null;
			/** @description Shipping name */
			shippingName?: string | null;
			/**
			 * @description Shipping rate error
			 * @enum {string|null}
			 */
			shippingRateError?: "value" | "weight" | null;
			/** @description Shipping state */
			shippingState?: string | null;
			/** @description Shipping zip */
			shippingZip?: string | null;
			/** @description Split tag */
			splitTag?: string | null;
			/** @description State tax location */
			stateTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description State tax rate
			 */
			stateTaxRate?: number | null;
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * @description Tax calculation
			 * @default default
			 * @enum {string|null}
			 */
			taxCalculation: "default" | "custom" | null;
			/**
			 * @description Tax included
			 * @default false
			 */
			taxIncluded: boolean;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean | null;
			/**
			 * @description Total
			 * @default 0
			 */
			total: number;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * @description Vendor endpoint format
			 * @enum {string|null}
			 */
			vendorEndpointFormat?:
				| "json"
				| "xml"
				| "csv"
				| "text"
				| "email"
				| "website"
				| "phone"
				| null;
			/** @description Vendor endpoint headers */
			vendorEndpointHeaders?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Vendor endpoint response */
			vendorEndpointResponse?: string | null;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId?: number | null;
			/** @description Vendor received */
			vendorReceivedId?: string | null;
			/** @description Vendor received reference */
			vendorReceivedReference?: string | null;
			/**
			 * @description Vendor received status
			 * @default notSent
			 * @enum {string|null}
			 */
			vendorReceivedStatus: "notSent" | "received" | "error" | null;
			/** @description Vendor reference */
			vendorReference?: string | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
			/**
			 * Format: float
			 * @description Weight
			 * @default 0
			 */
			weight: number | null;
		};
		"purchase-invoice": {
			/** @description Accounting error */
			accountingError?: string | null;
			/** @description Accounting integration external */
			accountingIntegrationExternalId?: boolean | null;
			/** @description Adjustment */
			adjustment?: number | null;
			/** @description Adjustment reason */
			adjustmentReason?: string | null;
			/**
			 * @description Commission method
			 * @default retained
			 * @enum {string|null}
			 */
			commissionMethod: "retained" | "reverse" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Finalized
			 * @default false
			 */
			finalized: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Invoicing stage
			 * @default manual
			 * @enum {string|null}
			 */
			invoicingStage:
				| "beforeShipping"
				| "afterShipping"
				| "delivered"
				| "manual"
				| null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Source
			 * @default automated
			 * @enum {string|null}
			 */
			source: "manual" | "automated" | "catchup" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"purchase-invoice-new": {
			/** @description Accounting error */
			accountingError?: string | null;
			/** @description Accounting integration external */
			accountingIntegrationExternalId?: boolean | null;
			/** @description Adjustment */
			adjustment?: number | null;
			/** @description Adjustment reason */
			adjustmentReason?: string | null;
			/**
			 * @description Commission method
			 * @default retained
			 * @enum {string|null}
			 */
			commissionMethod: "retained" | "reverse" | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Finalized
			 * @default false
			 */
			finalized: boolean | null;
			/**
			 * @description Invoicing stage
			 * @default manual
			 * @enum {string|null}
			 */
			invoicingStage:
				| "beforeShipping"
				| "afterShipping"
				| "delivered"
				| "manual"
				| null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Source
			 * @default automated
			 * @enum {string|null}
			 */
			source: "manual" | "automated" | "catchup" | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"purchase-invoice-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"purchase-invoice-item-new": {
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
		};
		"purchase-invoice-payment": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/**
			 * Format: int32
			 * @description Payment method
			 */
			paymentMethodId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/** @description Reference */
			reference?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "cancelled" | null;
			/** @description Transfer */
			transferId?: string | null;
			/**
			 * @description Type
			 * @default payment
			 * @enum {string|null}
			 */
			type:
				| "payment"
				| "overpayment"
				| "correction"
				| "refund"
				| "refundCommission"
				| null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"purchase-invoice-payment-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/**
			 * Format: int32
			 * @description Payment method
			 */
			paymentMethodId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/** @description Reference */
			reference?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "cancelled" | null;
			/** @description Transfer */
			transferId?: string | null;
			/**
			 * @description Type
			 * @default payment
			 * @enum {string|null}
			 */
			type:
				| "payment"
				| "overpayment"
				| "correction"
				| "refund"
				| "refundCommission"
				| null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"purchase-item": {
			/**
			 * Format: int32
			 * @description Bundle purchase item
			 */
			bundlePurchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Bundle quantity
			 * @default 0
			 */
			bundleQuantity: number | null;
			/**
			 * Format: int32
			 * @description Clone purchase item
			 */
			clonePurchaseItemId?: number | null;
			/**
			 * @description Commission refund
			 * @default none
			 * @enum {string|null}
			 */
			commissionRefund: "none" | "full" | null;
			/**
			 * @description Commission retained
			 * @default 0
			 */
			commissionRetained: number | null;
			/**
			 * @description Commission tax rate
			 * @default 0
			 */
			commissionTaxRate: number | null;
			/**
			 * @description Commission tax retained
			 * @default 0
			 */
			commissionTaxRetained: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Exchange iso */
			exchangeIso?: string | null;
			/**
			 * Format: float
			 * @description Exchange rate
			 */
			exchangeRate?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory processed
			 * @default 0
			 */
			inventoryProcessed: number;
			/**
			 * @description Is bundle
			 * @default false
			 */
			isBundle: boolean;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/** @description Name */
			name: string;
			/** @description Notes */
			notes?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Prevent duplicates
			 * @default false
			 */
			preventDuplicates: boolean | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Properties */
			properties?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Quantity cancelled
			 * @default 0
			 */
			quantityCancelled: number;
			/**
			 * Format: int32
			 * @description Quantity invoiced
			 * @default 0
			 */
			quantityInvoiced: number;
			/**
			 * Format: int32
			 * @description Quantity returned
			 * @default 0
			 */
			quantityReturned: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * Format: float
			 * @description Tax rate
			 */
			taxRate?: number | null;
			/**
			 * @description Taxable
			 * @default false
			 */
			taxable: boolean;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"purchase-item-new": {
			/**
			 * Format: int32
			 * @description Bundle purchase item
			 */
			bundlePurchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Bundle quantity
			 * @default 0
			 */
			bundleQuantity: number | null;
			/**
			 * Format: int32
			 * @description Clone purchase item
			 */
			clonePurchaseItemId?: number | null;
			/**
			 * @description Commission refund
			 * @default none
			 * @enum {string|null}
			 */
			commissionRefund: "none" | "full" | null;
			/**
			 * @description Commission retained
			 * @default 0
			 */
			commissionRetained: number | null;
			/**
			 * @description Commission tax rate
			 * @default 0
			 */
			commissionTaxRate: number | null;
			/**
			 * @description Commission tax retained
			 * @default 0
			 */
			commissionTaxRetained: number | null;
			/** @description Exchange iso */
			exchangeIso?: string | null;
			/**
			 * Format: float
			 * @description Exchange rate
			 */
			exchangeRate?: number | null;
			/**
			 * Format: int32
			 * @description Inventory processed
			 * @default 0
			 */
			inventoryProcessed: number;
			/**
			 * @description Is bundle
			 * @default false
			 */
			isBundle: boolean;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/** @description Name */
			name: string;
			/** @description Notes */
			notes?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Prevent duplicates
			 * @default false
			 */
			preventDuplicates: boolean | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Properties */
			properties?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Purchase import external */
			purchaseImportExternalId?: string | null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Quantity cancelled
			 * @default 0
			 */
			quantityCancelled: number;
			/**
			 * Format: int32
			 * @description Quantity invoiced
			 * @default 0
			 */
			quantityInvoiced: number;
			/**
			 * Format: int32
			 * @description Quantity returned
			 * @default 0
			 */
			quantityReturned: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * Format: float
			 * @description Tax rate
			 */
			taxRate?: number | null;
			/**
			 * @description Taxable
			 * @default false
			 */
			taxable: boolean;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"purchase-notification": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Destination */
			destination?: string | null;
			/** @description Events */
			events?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Format
			 * @enum {string|null}
			 */
			format?: "json" | "xml" | "csv" | "email" | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Raw */
			raw?: string | null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "pending" | "success" | "error" | "opened" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"purchase-notification-new": {
			/** @description Destination */
			destination?: string | null;
			/** @description Events */
			events?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Format
			 * @enum {string|null}
			 */
			format?: "json" | "xml" | "csv" | "email" | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Raw */
			raw?: string | null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "pending" | "success" | "error" | "opened" | null;
			/** @description Status message */
			statusMessage?: string | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
		};
		"purchase-return": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/**
			 * @description Status
			 * @default requested
			 * @enum {string}
			 */
			status: "requested" | "shipped" | "received" | "cancelled";
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"purchase-return-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/**
			 * @description Status
			 * @default requested
			 * @enum {string}
			 */
			status: "requested" | "shipped" | "received" | "cancelled";
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
		};
		"purchase-return-item": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Purchase return
			 */
			purchaseReturnId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"purchase-return-item-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId: number;
			/**
			 * Format: int32
			 * @description Purchase return
			 */
			purchaseReturnId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
		};
		"purchase-return-payment": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/**
			 * Format: int32
			 * @description Purchase return
			 */
			purchaseReturnId: number;
			/** @description Reference */
			reference?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"purchase-return-payment-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/**
			 * Format: int32
			 * @description Purchase return
			 */
			purchaseReturnId: number;
			/** @description Reference */
			reference?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"purchase-shipping-rate": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description Full price */
			fullPrice?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Invoice eligibility
			 * @default eligible
			 * @enum {string|null}
			 */
			invoiceEligibility: "eligible" | "freeShipping" | null;
			/**
			 * @description Invoice shipping
			 * @default false
			 */
			invoiceShipping: boolean | null;
			/**
			 * @description Invoice shipping type
			 * @enum {string|null}
			 */
			invoiceShippingType?: "addition" | "deduct" | "commission" | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/**
			 * @description Rate purpose
			 * @default label
			 * @enum {string|null}
			 */
			ratePurpose: "none" | "label" | "invoice" | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/**
			 * @description Shipping commission
			 * @default 0
			 */
			shippingCommission: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
		};
		"purchase-shipping-rate-new": {
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description Full price */
			fullPrice?: number | null;
			/**
			 * @description Invoice eligibility
			 * @default eligible
			 * @enum {string|null}
			 */
			invoiceEligibility: "eligible" | "freeShipping" | null;
			/**
			 * @description Invoice shipping
			 * @default false
			 */
			invoiceShipping: boolean | null;
			/**
			 * @description Invoice shipping type
			 * @enum {string|null}
			 */
			invoiceShippingType?: "addition" | "deduct" | "commission" | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId: number;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/**
			 * @description Rate purpose
			 * @default label
			 * @enum {string|null}
			 */
			ratePurpose: "none" | "label" | "invoice" | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/**
			 * @description Shipping commission
			 * @default 0
			 */
			shippingCommission: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
		};
		"purchase-status": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Status Tag Color
			 * @default default
			 * @enum {string|null}
			 */
			level: "default" | "warning" | "danger" | null;
			/** @description Name */
			name: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"purchase-status-new": {
			/**
			 * Status Tag Color
			 * @default default
			 * @enum {string|null}
			 */
			level: "default" | "warning" | "danger" | null;
			/** @description Name */
			name: string;
		};
		referral: {
			/** @description About */
			about?: string | null;
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description Authentication secret */
			authenticationSecret?: string | null;
			/** @description Authentication token */
			authenticationToken?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Commission rate */
			commissionRate?: number | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Email */
			email: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Iso */
			iso: string;
			/** @description Logo */
			logo?: string | null;
			/** @description Name */
			name: string;
			/** @description Order endpoint url */
			orderEndpointUrl?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * @description Platform
			 * @enum {string}
			 */
			platform: "wooCommerce" | "shopify";
			/** @description Referral code */
			referralCode: string;
			/** @description Returns policy */
			returnsPolicy?: string | null;
			/**
			 * Format: int32
			 * @description Shopify store
			 */
			shopifyStoreId?: number | null;
			/**
			 * @description Source type
			 * @enum {string|null}
			 */
			sourceType?: "channel" | "custom" | null;
			/** @description State */
			state?: string | null;
			/** @description Stripe */
			stripeId?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Welcome message */
			welcomeMessage?: string | null;
			/**
			 * Format: int32
			 * @description Woo commerce store
			 */
			wooCommerceStoreId?: number | null;
			/** @description Zip */
			zip?: string | null;
		};
		"referral-new": {
			/** @description About */
			about?: string | null;
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description Authentication secret */
			authenticationSecret?: string | null;
			/** @description Authentication token */
			authenticationToken?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Commission rate */
			commissionRate?: number | null;
			/** @description Country */
			country?: string | null;
			/** @description Email */
			email: string;
			/** @description Iso */
			iso: string;
			/** @description Logo */
			logo?: string | null;
			/** @description Name */
			name: string;
			/** @description Order endpoint url */
			orderEndpointUrl?: string | null;
			/** @description Phone */
			phone?: string | null;
			/**
			 * @description Platform
			 * @enum {string}
			 */
			platform: "wooCommerce" | "shopify";
			/** @description Referral code */
			referralCode: string;
			/** @description Returns policy */
			returnsPolicy?: string | null;
			/**
			 * Format: int32
			 * @description Shopify store
			 */
			shopifyStoreId?: number | null;
			/**
			 * @description Source type
			 * @enum {string|null}
			 */
			sourceType?: "channel" | "custom" | null;
			/** @description State */
			state?: string | null;
			/** @description Stripe */
			stripeId?: string | null;
			/** @description Welcome message */
			welcomeMessage?: string | null;
			/**
			 * Format: int32
			 * @description Woo commerce store
			 */
			wooCommerceStoreId?: number | null;
			/** @description Zip */
			zip?: string | null;
		};
		reseller: {
			/**
			 * @description Account type
			 * @default reseller
			 * @enum {string|null}
			 */
			accountType: "reseller" | "salesRep" | null;
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/**
			 * @description Customers scope
			 * @enum {string|null}
			 */
			customersScope?: "global" | "self" | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Include landed costs */
			includeLandedCosts?: boolean | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description Payment schedule
			 * @default beforeFinalize
			 * @enum {string|null}
			 */
			paymentSchedule: "beforeFinalize" | "manual" | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Pricing type
			 * @default channel
			 * @enum {string|null}
			 */
			pricingType: "channel" | "selected" | null;
			/**
			 * @description Qualification status
			 * @default pending
			 * @enum {string|null}
			 */
			qualificationStatus: "pending" | "started" | "complete" | null;
			/**
			 * @description Source
			 * @enum {string|null}
			 */
			source?: "application" | "manual" | "migration" | null;
			/** @description State */
			state?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "pending" | "active" | "archived" | "rejected" | null;
			/** @description Stripe customer */
			stripeCustomerId?: string | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax calculation
			 * @default channel
			 * @enum {string|null}
			 */
			taxCalculation: "channel" | "taxRate" | "disabled" | null;
			/**
			 * @description Tax calculation duration
			 * @default rolling
			 * @enum {string|null}
			 */
			taxCalculationDuration: "rolling" | "fixed" | null;
			/**
			 * Format: date-time
			 * @description Tax calculation expiration
			 */
			taxCalculationExpiration?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zip */
			zip?: string | null;
		};
		"reseller-new": {
			/**
			 * @description Account type
			 * @default reseller
			 * @enum {string|null}
			 */
			accountType: "reseller" | "salesRep" | null;
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/**
			 * @description Customers scope
			 * @enum {string|null}
			 */
			customersScope?: "global" | "self" | null;
			/** @description First name */
			firstName?: string | null;
			/** @description Include landed costs */
			includeLandedCosts?: boolean | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description Payment schedule
			 * @default beforeFinalize
			 * @enum {string|null}
			 */
			paymentSchedule: "beforeFinalize" | "manual" | null;
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId?: number | null;
			/**
			 * @description Pricing type
			 * @default channel
			 * @enum {string|null}
			 */
			pricingType: "channel" | "selected" | null;
			/**
			 * @description Qualification status
			 * @default pending
			 * @enum {string|null}
			 */
			qualificationStatus: "pending" | "started" | "complete" | null;
			/**
			 * @description Source
			 * @enum {string|null}
			 */
			source?: "application" | "manual" | "migration" | null;
			/** @description State */
			state?: string | null;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "pending" | "active" | "archived" | "rejected" | null;
			/** @description Stripe customer */
			stripeCustomerId?: string | null;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax calculation
			 * @default channel
			 * @enum {string|null}
			 */
			taxCalculation: "channel" | "taxRate" | "disabled" | null;
			/**
			 * @description Tax calculation duration
			 * @default rolling
			 * @enum {string|null}
			 */
			taxCalculationDuration: "rolling" | "fixed" | null;
			/**
			 * Format: date-time
			 * @description Tax calculation expiration
			 */
			taxCalculationExpiration?: string | null;
			/** @description Zip */
			zip?: string | null;
		};
		"reseller-commission": {
			/**
			 * @description Commission rate
			 * @default 0
			 */
			commissionRate: number | null;
			/**
			 * @description Commission rate type
			 * @default percentage
			 * @enum {string|null}
			 */
			commissionRateType: "percentage" | "fixed" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Referred reseller
			 */
			referredResellerId: number;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"reseller-commission-new": {
			/**
			 * @description Commission rate
			 * @default 0
			 */
			commissionRate: number | null;
			/**
			 * @description Commission rate type
			 * @default percentage
			 * @enum {string|null}
			 */
			commissionRateType: "percentage" | "fixed" | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Referred reseller
			 */
			referredResellerId: number;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
		};
		"reseller-subscription": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Discount */
			discount?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status:
				| "pending"
				| "active"
				| "error"
				| "lapsed"
				| "declined"
				| "cancelled"
				| null;
			/** @description Stripe product */
			stripeProductId?: string | null;
			/** @description Stripe subscription */
			stripeSubscriptionId?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"reseller-subscription-new": {
			/** @description Discount */
			discount?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Name */
			name?: string | null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status:
				| "pending"
				| "active"
				| "error"
				| "lapsed"
				| "declined"
				| "cancelled"
				| null;
			/** @description Stripe product */
			stripeProductId?: string | null;
			/** @description Stripe subscription */
			stripeSubscriptionId?: string | null;
		};
		"reseller-variant": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/**
			 * @description Trigger
			 * @enum {string|null}
			 */
			trigger?: "manual" | "saleItem" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"reseller-variant-new": {
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId: number;
			/**
			 * @description Trigger
			 * @enum {string|null}
			 */
			trigger?: "manual" | "saleItem" | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"return-shipment": {
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label uris */
			labelUris?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"return-shipment-new": {
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label uris */
			labelUris?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
		};
		sale: {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Billing address line one */
			billingAddressLineOne?: string | null;
			/** @description Billing address line two */
			billingAddressLineTwo?: string | null;
			/** @description Billing address message */
			billingAddressMessage?: string | null;
			/** @description Billing city */
			billingCity?: string | null;
			/** @description Billing country */
			billingCountry?: string | null;
			/** @description Billing first name */
			billingFirstName?: string | null;
			/** @description Billing full name */
			billingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Billing last name */
			billingLastName?: string | null;
			/** @description Billing name */
			billingName?: string | null;
			/** @description Billing state */
			billingState?: string | null;
			/** @description Billing zip */
			billingZip?: string | null;
			/**
			 * @description Cancel reason
			 * @enum {string|null}
			 */
			cancelReason?:
				| "customer"
				| "fraud"
				| "inventory"
				| "declined"
				| "other"
				| null;
			/**
			 * @description Cancellation status
			 * @default none
			 * @enum {string}
			 */
			cancellationStatus: "none" | "partial" | "full";
			/**
			 * @description Cancelled
			 * @default false
			 */
			cancelled: boolean;
			/**
			 * Format: date-time
			 * @description Cancelled at
			 */
			cancelledAt?: string | null;
			/**
			 * Format: date-time
			 * @description Channel cancelled at
			 */
			channelCancelledAt?: string | null;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description City tax location */
			cityTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description City tax rate
			 */
			cityTaxRate?: number | null;
			/**
			 * @description Clone reason
			 * @enum {string|null}
			 */
			cloneReason?: "exchange" | "new_sale" | null;
			/**
			 * Format: float
			 * @description Combined tax rate
			 */
			combinedTaxRate?: number | null;
			/** @description County tax location */
			countyTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description County tax rate
			 */
			countyTaxRate?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/** @description Customer reference */
			customerReference?: string | null;
			/**
			 * Format: date-time
			 * @description Date ordered
			 * @default {}
			 */
			dateOrdered: string;
			/**
			 * @description Discounts
			 * @default 0
			 */
			discounts: number;
			/**
			 * Format: float
			 * @description District tax rate
			 */
			districtTaxRate?: number | null;
			/** @description Dropship problems */
			dropshipProblems?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Finalized
			 * @default true
			 */
			finalized: boolean;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Internal notes */
			internalNotes?: string | null;
			/** @description Invalid billing address */
			invalidBillingAddress?: string | null;
			/**
			 * @description Invalid shipping address
			 * @default false
			 */
			invalidShippingAddress: boolean | null;
			/**
			 * @description Inventory status
			 * @default notFulfilled
			 * @enum {string}
			 */
			inventoryStatus: "notFulfilled" | "partiallyFulfilled" | "fulfilled";
			/**
			 * @description Invoice status
			 * @default notInvoiced
			 * @enum {string}
			 */
			invoiceStatus: "notInvoiced" | "partiallyInvoiced" | "invoiced";
			/**
			 * Format: int32
			 * @description Last fulfillment reference
			 * @default 0
			 */
			lastFulfillmentReference: number | null;
			/**
			 * Format: int32
			 * @description Last purchase reference
			 * @default 0
			 */
			lastPurchaseReference: number | null;
			/**
			 * Format: int32
			 * @description Last sale return reference
			 * @default 0
			 */
			lastSaleReturnReference: number | null;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Paid */
			paid?: number | null;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/** @description Receiver address line one */
			receiverAddressLineOne?: string | null;
			/** @description Receiver address line two */
			receiverAddressLineTwo?: string | null;
			/** @description Receiver city */
			receiverCity?: string | null;
			/** @description Receiver country */
			receiverCountry?: string | null;
			/** @description Receiver name */
			receiverName?: string | null;
			/** @description Receiver state */
			receiverState?: string | null;
			/** @description Receiver zip */
			receiverZip?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId?: number | null;
			/**
			 * @description Reseller payee
			 * @default reseller
			 * @enum {string|null}
			 */
			resellerPayee: "reseller" | "customer" | null;
			/** @description Reseller stripe charge */
			resellerStripeChargeId?: string | null;
			/**
			 * @description Return status
			 * @default notReturned
			 * @enum {string}
			 */
			returnStatus: "notReturned" | "partiallyReturned" | "returned";
			/**
			 * Format: int32
			 * @description Sale discount code
			 */
			saleDiscountCodeId?: number | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/** @description Shipping address line one */
			shippingAddressLineOne?: string | null;
			/** @description Shipping address line two */
			shippingAddressLineTwo?: string | null;
			/**
			 * @description Shipping address message
			 * @default false
			 */
			shippingAddressMessage: boolean | null;
			/** @description Shipping city */
			shippingCity?: string | null;
			/** @description Shipping country */
			shippingCountry?: string | null;
			/** @description Shipping first name */
			shippingFirstName?: string | null;
			/** @description Shipping full name */
			shippingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shipping last name */
			shippingLastName?: string | null;
			/** @description Shipping name */
			shippingName?: string | null;
			/** @description Shipping state */
			shippingState?: string | null;
			/** @description Shipping zip */
			shippingZip?: string | null;
			/** @description Shipstation */
			shipstationId?: string | null;
			/** @description State tax location */
			stateTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description State tax rate
			 */
			stateTaxRate?: number | null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "draft" | "pending" | "finalized";
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * @description Tax calculation
			 * @default default
			 * @enum {string|null}
			 */
			taxCalculation: "default" | "custom" | null;
			/**
			 * @description Tax included
			 * @default false
			 */
			taxIncluded: boolean;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean | null;
			/**
			 * @description Total
			 * @default 0
			 */
			total: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/**
			 * Format: float
			 * @description Weight
			 * @default 0
			 */
			weight: number | null;
		};
		"sale-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Billing address line one */
			billingAddressLineOne?: string | null;
			/** @description Billing address line two */
			billingAddressLineTwo?: string | null;
			/** @description Billing address message */
			billingAddressMessage?: string | null;
			/** @description Billing city */
			billingCity?: string | null;
			/** @description Billing country */
			billingCountry?: string | null;
			/** @description Billing first name */
			billingFirstName?: string | null;
			/** @description Billing full name */
			billingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Billing last name */
			billingLastName?: string | null;
			/** @description Billing name */
			billingName?: string | null;
			/** @description Billing state */
			billingState?: string | null;
			/** @description Billing zip */
			billingZip?: string | null;
			/**
			 * @description Cancel reason
			 * @enum {string|null}
			 */
			cancelReason?:
				| "customer"
				| "fraud"
				| "inventory"
				| "declined"
				| "other"
				| null;
			/**
			 * @description Cancellation status
			 * @default none
			 * @enum {string}
			 */
			cancellationStatus: "none" | "partial" | "full";
			/**
			 * @description Cancelled
			 * @default false
			 */
			cancelled: boolean;
			/**
			 * Format: date-time
			 * @description Cancelled at
			 */
			cancelledAt?: string | null;
			/**
			 * Format: date-time
			 * @description Channel cancelled at
			 */
			channelCancelledAt?: string | null;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description City tax location */
			cityTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description City tax rate
			 */
			cityTaxRate?: number | null;
			/**
			 * @description Clone reason
			 * @enum {string|null}
			 */
			cloneReason?: "exchange" | "new_sale" | null;
			/**
			 * Format: float
			 * @description Combined tax rate
			 */
			combinedTaxRate?: number | null;
			/** @description County tax location */
			countyTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description County tax rate
			 */
			countyTaxRate?: number | null;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/** @description Customer reference */
			customerReference?: string | null;
			/**
			 * Format: date-time
			 * @description Date ordered
			 * @default {}
			 */
			dateOrdered: string;
			/**
			 * @description Discounts
			 * @default 0
			 */
			discounts: number;
			/**
			 * Format: float
			 * @description District tax rate
			 */
			districtTaxRate?: number | null;
			/** @description Dropship problems */
			dropshipProblems?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Finalized
			 * @default true
			 */
			finalized: boolean;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Internal notes */
			internalNotes?: string | null;
			/** @description Invalid billing address */
			invalidBillingAddress?: string | null;
			/**
			 * @description Invalid shipping address
			 * @default false
			 */
			invalidShippingAddress: boolean | null;
			/**
			 * @description Inventory status
			 * @default notFulfilled
			 * @enum {string}
			 */
			inventoryStatus: "notFulfilled" | "partiallyFulfilled" | "fulfilled";
			/**
			 * @description Invoice status
			 * @default notInvoiced
			 * @enum {string}
			 */
			invoiceStatus: "notInvoiced" | "partiallyInvoiced" | "invoiced";
			/**
			 * Format: int32
			 * @description Last fulfillment reference
			 * @default 0
			 */
			lastFulfillmentReference: number | null;
			/**
			 * Format: int32
			 * @description Last purchase reference
			 * @default 0
			 */
			lastPurchaseReference: number | null;
			/**
			 * Format: int32
			 * @description Last sale return reference
			 * @default 0
			 */
			lastSaleReturnReference: number | null;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Paid */
			paid?: number | null;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * Format: int32
			 * @description Price list
			 */
			priceListId: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/** @description Receiver address line one */
			receiverAddressLineOne?: string | null;
			/** @description Receiver address line two */
			receiverAddressLineTwo?: string | null;
			/** @description Receiver city */
			receiverCity?: string | null;
			/** @description Receiver country */
			receiverCountry?: string | null;
			/** @description Receiver name */
			receiverName?: string | null;
			/** @description Receiver state */
			receiverState?: string | null;
			/** @description Receiver zip */
			receiverZip?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId?: number | null;
			/**
			 * @description Reseller payee
			 * @default reseller
			 * @enum {string|null}
			 */
			resellerPayee: "reseller" | "customer" | null;
			/** @description Reseller stripe charge */
			resellerStripeChargeId?: string | null;
			/**
			 * @description Return status
			 * @default notReturned
			 * @enum {string}
			 */
			returnStatus: "notReturned" | "partiallyReturned" | "returned";
			/**
			 * Format: int32
			 * @description Sale discount code
			 */
			saleDiscountCodeId?: number | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/** @description Shipping address line one */
			shippingAddressLineOne?: string | null;
			/** @description Shipping address line two */
			shippingAddressLineTwo?: string | null;
			/**
			 * @description Shipping address message
			 * @default false
			 */
			shippingAddressMessage: boolean | null;
			/** @description Shipping city */
			shippingCity?: string | null;
			/** @description Shipping country */
			shippingCountry?: string | null;
			/** @description Shipping first name */
			shippingFirstName?: string | null;
			/** @description Shipping full name */
			shippingFullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shipping last name */
			shippingLastName?: string | null;
			/** @description Shipping name */
			shippingName?: string | null;
			/** @description Shipping state */
			shippingState?: string | null;
			/** @description Shipping zip */
			shippingZip?: string | null;
			/** @description Shipstation */
			shipstationId?: string | null;
			/** @description State tax location */
			stateTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description State tax rate
			 */
			stateTaxRate?: number | null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "draft" | "pending" | "finalized";
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * @description Tax calculation
			 * @default default
			 * @enum {string|null}
			 */
			taxCalculation: "default" | "custom" | null;
			/**
			 * @description Tax included
			 * @default false
			 */
			taxIncluded: boolean;
			/**
			 * @description Tax shipping
			 * @default true
			 */
			taxShipping: boolean | null;
			/**
			 * @description Total
			 * @default 0
			 */
			total: number;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
			/**
			 * Format: float
			 * @description Weight
			 * @default 0
			 */
			weight: number | null;
		};
		"sale-discount-code": {
			/**
			 * Format: float
			 * @description Amount
			 */
			amount: number;
			/** @description Code */
			code: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * @description Type
			 * @default fixed_amount
			 * @enum {string}
			 */
			type: "percentage" | "shipping" | "fixed_amount";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"sale-discount-code-new": {
			/**
			 * Format: float
			 * @description Amount
			 */
			amount: number;
			/** @description Code */
			code: string;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * @description Type
			 * @default fixed_amount
			 * @enum {string}
			 */
			type: "percentage" | "shipping" | "fixed_amount";
		};
		"sale-import": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Email sent
			 * @default false
			 */
			emailSent: boolean | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Problem */
			problem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Read
			 * @default true
			 */
			read: boolean | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "success" | "error" | "skipped" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"sale-import-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * @description Email sent
			 * @default false
			 */
			emailSent: boolean | null;
			/** @description External */
			externalId?: string | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Problem */
			problem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Read
			 * @default true
			 */
			read: boolean | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId?: number | null;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "success" | "error" | "skipped" | null;
		};
		"sale-invoice": {
			/** @description Accounting integration external */
			accountingIntegrationExternalId?: boolean | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Finalized
			 * @default false
			 */
			finalized: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"sale-invoice-new": {
			/** @description Accounting integration external */
			accountingIntegrationExternalId?: boolean | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Finalized
			 * @default false
			 */
			finalized: boolean | null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/** @description Quickbooks */
			quickbooksId?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"sale-invoice-item": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"sale-invoice-item-new": {
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
		};
		"sale-invoice-payment": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/**
			 * Format: int32
			 * @description Payment method
			 */
			paymentMethodId?: number | null;
			/** @description Reference */
			reference?: string | null;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"sale-invoice-payment-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/**
			 * Format: int32
			 * @description Payment method
			 */
			paymentMethodId?: number | null;
			/** @description Reference */
			reference?: string | null;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"sale-item": {
			/** @description Allocation */
			allocation?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Bundle quantity
			 * @default 0
			 */
			bundleQuantity: number | null;
			/**
			 * Format: int32
			 * @description Bundle sale item
			 */
			bundleSaleItemId?: number | null;
			/** @description Channel compare at price */
			channelCompareAtPrice?: number | null;
			/** @description Channel price */
			channelPrice?: number | null;
			/**
			 * Format: int32
			 * @description Clone sale item
			 */
			cloneSaleItemId?: number | null;
			/** @description Commercial invoice price */
			commercialInvoicePrice?: number | null;
			/** @description Cost price */
			costPrice?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Discount */
			discount?: number | null;
			/** @description Discount allocated */
			discountAllocated?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Discounts */
			discounts?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description External */
			externalId?: string | null;
			/** @description External variant */
			externalVariantId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory processed
			 * @default 0
			 */
			inventoryProcessed: number;
			/**
			 * @description Is bundle
			 * @default false
			 */
			isBundle: boolean;
			/** @description Location */
			location?: string | null;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/**
			 * @description Manual routing
			 * @enum {string|null}
			 */
			manualRouting?: "dropship" | "fulfill" | null;
			/** @description Name */
			name: string;
			/** @description Notes */
			notes?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Order routing
			 * @default automated
			 * @enum {string|null}
			 */
			orderRouting: "automated" | "manual" | "ignore" | null;
			/**
			 * @description Prevent duplicates
			 * @default false
			 */
			preventDuplicates: boolean | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Properties */
			properties?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Quantity cancelled
			 * @default 0
			 */
			quantityCancelled: number;
			/**
			 * Format: int32
			 * @description Quantity invoiced
			 * @default 0
			 */
			quantityInvoiced: number;
			/**
			 * Format: int32
			 * @description Quantity refunded
			 * @default 0
			 */
			quantityRefunded: number;
			/**
			 * Format: int32
			 * @description Quantity returned
			 * @default 0
			 */
			quantityReturned: number;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * Format: float
			 * @description Tax rate
			 */
			taxRate?: number | null;
			/**
			 * @description Taxable
			 * @default false
			 */
			taxable: boolean;
			/**
			 * @description Unallocated
			 * @default false
			 */
			unallocated: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
		};
		"sale-item-new": {
			/** @description Allocation */
			allocation?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Bundle quantity
			 * @default 0
			 */
			bundleQuantity: number | null;
			/**
			 * Format: int32
			 * @description Bundle sale item
			 */
			bundleSaleItemId?: number | null;
			/** @description Channel compare at price */
			channelCompareAtPrice?: number | null;
			/** @description Channel price */
			channelPrice?: number | null;
			/**
			 * Format: int32
			 * @description Clone sale item
			 */
			cloneSaleItemId?: number | null;
			/** @description Commercial invoice price */
			commercialInvoicePrice?: number | null;
			/** @description Cost price */
			costPrice?: number | null;
			/** @description Discount */
			discount?: number | null;
			/** @description Discount allocated */
			discountAllocated?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Discounts */
			discounts?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description External */
			externalId?: string | null;
			/** @description External variant */
			externalVariantId?: string | null;
			/**
			 * Format: int32
			 * @description Inventory processed
			 * @default 0
			 */
			inventoryProcessed: number;
			/**
			 * @description Is bundle
			 * @default false
			 */
			isBundle: boolean;
			/** @description Location */
			location?: string | null;
			/**
			 * @description Locked
			 * @default false
			 */
			locked: boolean;
			/**
			 * @description Manual routing
			 * @enum {string|null}
			 */
			manualRouting?: "dropship" | "fulfill" | null;
			/** @description Name */
			name: string;
			/** @description Notes */
			notes?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Order routing
			 * @default automated
			 * @enum {string|null}
			 */
			orderRouting: "automated" | "manual" | "ignore" | null;
			/**
			 * @description Prevent duplicates
			 * @default false
			 */
			preventDuplicates: boolean | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Properties */
			properties?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 1
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Quantity cancelled
			 * @default 0
			 */
			quantityCancelled: number;
			/**
			 * Format: int32
			 * @description Quantity invoiced
			 * @default 0
			 */
			quantityInvoiced: number;
			/**
			 * Format: int32
			 * @description Quantity refunded
			 * @default 0
			 */
			quantityRefunded: number;
			/**
			 * Format: int32
			 * @description Quantity returned
			 * @default 0
			 */
			quantityReturned: number;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * @description Subtotal
			 * @default 0
			 */
			subtotal: number;
			/**
			 * @description Tax
			 * @default 0
			 */
			tax: number;
			/**
			 * Format: float
			 * @description Tax rate
			 */
			taxRate?: number | null;
			/**
			 * @description Taxable
			 * @default false
			 */
			taxable: boolean;
			/**
			 * @description Unallocated
			 * @default false
			 */
			unallocated: boolean | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
		};
		"sale-item-routing": {
			/** @description Context */
			context?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Label
			 * @enum {string}
			 */
			label: "dropship" | "fulfill";
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Values */
			values?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
		};
		"sale-item-routing-new": {
			/** @description Context */
			context?: string | null;
			/**
			 * @description Label
			 * @enum {string}
			 */
			label: "dropship" | "fulfill";
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/** @description Values */
			values?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
		};
		"sale-return": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Notes */
			notes?: string | null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/** @description Return address line one */
			returnAddressLineOne?: string | null;
			/** @description Return address line two */
			returnAddressLineTwo?: string | null;
			/** @description Return city */
			returnCity?: string | null;
			/** @description Return country */
			returnCountry?: string | null;
			/** @description Return first name */
			returnFirstName?: string | null;
			/**
			 * @description Return label type
			 * @default prePaid
			 * @enum {string|null}
			 */
			returnLabelType: "prePaid" | "paid" | null;
			/** @description Return last name */
			returnLastName?: string | null;
			/** @description Return name */
			returnName?: string | null;
			/**
			 * Format: int32
			 * @description Return shipment
			 */
			returnShipmentId?: number | null;
			/** @description Return state */
			returnState?: string | null;
			/** @description Return zip */
			returnZip?: string | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * @description Sale return source
			 * @default internal
			 * @enum {string|null}
			 */
			saleReturnSource: "internal" | "external" | null;
			/**
			 * @description Sale return type
			 * @enum {string|null}
			 */
			saleReturnType?:
				| "automated"
				| "customer"
				| "dropship_provider"
				| "merchant"
				| null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/**
			 * @description Status
			 * @default requested
			 * @enum {string}
			 */
			status:
				| "draft"
				| "requested"
				| "finalized"
				| "shipped"
				| "received"
				| "cancelled";
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: date-time
			 * @description Vendor cancelled at
			 */
			vendorCancelledAt?: string | null;
			/** @description Vendor received */
			vendorReceivedId?: string | null;
			/**
			 * @description Vendor received status
			 * @default notSent
			 * @enum {string|null}
			 */
			vendorReceivedStatus: "notSent" | "received" | "error" | null;
		};
		"sale-return-new": {
			/** @description Admin notes */
			adminNotes?: string | null;
			/** @description Aftership */
			aftershipId?: string | null;
			/** @description Commercial invoice url */
			commercialInvoiceUrl?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description External */
			externalId?: string | null;
			/** @description Files */
			files?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Intercom message */
			intercomMessageId?: string | null;
			/** @description Label error */
			labelError?: string | null;
			/**
			 * @description Label file format
			 * @enum {string|null}
			 */
			labelFileFormat?: "png" | "pdf" | null;
			/** @description Label files */
			labelFiles?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Label refund
			 * @default false
			 */
			labelRefund: boolean | null;
			/** @description Label url */
			labelUrl?: string | null;
			/**
			 * @description Mute error
			 * @default false
			 */
			muteError: boolean | null;
			/** @description Notes */
			notes?: string | null;
			/**
			 * @description Paid
			 * @default 0
			 */
			paid: number;
			/**
			 * @description Payment status
			 * @default notPaid
			 * @enum {string}
			 */
			paymentStatus: "notPaid" | "partiallyPaid" | "paid";
			/**
			 * @description Price
			 * @default 0
			 */
			price: number | null;
			/** @description Provider */
			provider?: string | null;
			/**
			 * Format: int32
			 * @description Purchase
			 */
			purchaseId?: number | null;
			/** @description Quote */
			quoteId?: string | null;
			/** @description Reference */
			reference: string;
			/** @description Return address line one */
			returnAddressLineOne?: string | null;
			/** @description Return address line two */
			returnAddressLineTwo?: string | null;
			/** @description Return city */
			returnCity?: string | null;
			/** @description Return country */
			returnCountry?: string | null;
			/** @description Return first name */
			returnFirstName?: string | null;
			/**
			 * @description Return label type
			 * @default prePaid
			 * @enum {string|null}
			 */
			returnLabelType: "prePaid" | "paid" | null;
			/** @description Return last name */
			returnLastName?: string | null;
			/** @description Return name */
			returnName?: string | null;
			/**
			 * Format: int32
			 * @description Return shipment
			 */
			returnShipmentId?: number | null;
			/** @description Return state */
			returnState?: string | null;
			/** @description Return zip */
			returnZip?: string | null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * @description Sale return source
			 * @default internal
			 * @enum {string|null}
			 */
			saleReturnSource: "internal" | "external" | null;
			/**
			 * @description Sale return type
			 * @enum {string|null}
			 */
			saleReturnType?:
				| "automated"
				| "customer"
				| "dropship_provider"
				| "merchant"
				| null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Shippo label ids */
			shippoLabelIds?: string[] | null;
			/**
			 * @description Status
			 * @default requested
			 * @enum {string}
			 */
			status:
				| "draft"
				| "requested"
				| "finalized"
				| "shipped"
				| "received"
				| "cancelled";
			/** @description Tags */
			tags?: string[] | null;
			/** @description Tracking company */
			trackingCompany?: string | null;
			/** @description Tracking number */
			trackingNumber?: string | null;
			/**
			 * @description Tracking status
			 * @enum {string|null}
			 */
			trackingStatus?:
				| "delivered"
				| "failure"
				| "pre_transit"
				| "returned"
				| "transit"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Tracking status date
			 */
			trackingStatusDate?: string | null;
			/** @description Tracking status details */
			trackingStatusDetails?: string | null;
			/** @description Tracking url */
			trackingUrl?: string | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: date-time
			 * @description Vendor cancelled at
			 */
			vendorCancelledAt?: string | null;
			/** @description Vendor received */
			vendorReceivedId?: string | null;
			/**
			 * @description Vendor received status
			 * @default notSent
			 * @enum {string|null}
			 */
			vendorReceivedStatus: "notSent" | "received" | "error" | null;
		};
		"sale-return-item": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Merchant status
			 * @default approved
			 * @enum {string|null}
			 */
			merchantStatus: "pending" | "approved" | "rejected" | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Quantity cancelled
			 * @default 0
			 */
			quantityCancelled: number;
			/**
			 * Format: int32
			 * @description Quantity refunded
			 * @default 0
			 */
			quantityRefunded: number;
			/**
			 * Format: int32
			 * @description Quantity written off
			 * @default 0
			 */
			quantityWrittenOff: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Vendor status
			 * @default pending
			 * @enum {string|null}
			 */
			vendorStatus: "pending" | "approved" | "rejected" | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"sale-return-item-new": {
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Merchant status
			 * @default approved
			 * @enum {string|null}
			 */
			merchantStatus: "pending" | "approved" | "rejected" | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Quantity
			 * @default 0
			 */
			quantity: number;
			/**
			 * Format: int32
			 * @description Quantity cancelled
			 * @default 0
			 */
			quantityCancelled: number;
			/**
			 * Format: int32
			 * @description Quantity refunded
			 * @default 0
			 */
			quantityRefunded: number;
			/**
			 * Format: int32
			 * @description Quantity written off
			 * @default 0
			 */
			quantityWrittenOff: number;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId: number;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/**
			 * @description Vendor status
			 * @default pending
			 * @enum {string|null}
			 */
			vendorStatus: "pending" | "approved" | "rejected" | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"sale-return-payload": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "error" | "success" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"sale-return-payload-new": {
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/**
			 * @description Status
			 * @default success
			 * @enum {string|null}
			 */
			status: "error" | "success" | null;
		};
		"sale-return-payment": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/** @description Reference */
			reference?: string | null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"sale-return-payment-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: float
			 * @description Exchange rate
			 * @default 1
			 */
			exchangeRate: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: date-time
			 * @description Paid at
			 * @default {}
			 */
			paidAt: string;
			/** @description Reference */
			reference?: string | null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId: number;
			/** @description Xero */
			xeroId?: string | null;
		};
		"sale-shipping-rate": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description Full price */
			fullPrice?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Provider */
			provider?: string | null;
			/** @description Quote */
			quoteId?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId?: number | null;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/**
			 * Format: int32
			 * @description Shipping rate cache
			 */
			shippingRateCacheId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/** @description Source */
			source?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string | null;
		};
		"sale-shipping-rate-new": {
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description Duration terms */
			durationTerms?: string | null;
			/** @description Full price */
			fullPrice?: number | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/** @description Provider */
			provider?: string | null;
			/** @description Quote */
			quoteId?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Sale
			 */
			saleId: number;
			/**
			 * Format: int32
			 * @description Sale invoice
			 */
			saleInvoiceId?: number | null;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/**
			 * Format: int32
			 * @description Shipping rate cache
			 */
			shippingRateCacheId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/** @description Source */
			source?: string | null;
		};
		"saleor-store": {
			/** @description Access token */
			accessToken: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External channel */
			externalChannelId?: string | null;
			/** @description External warehouse */
			externalWarehouseId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/** @description Product type attribute */
			productTypeAttribute?: string | null;
			/** @description Store url */
			storeUrl?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Vendor attribute */
			vendorAttribute?: string | null;
		};
		"saleor-store-new": {
			/** @description Access token */
			accessToken: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/** @description External channel */
			externalChannelId?: string | null;
			/** @description External warehouse */
			externalWarehouseId?: string | null;
			/** @description Name */
			name: string;
			/** @description Product type attribute */
			productTypeAttribute?: string | null;
			/** @description Store url */
			storeUrl?: string | null;
			/** @description Vendor attribute */
			vendorAttribute?: string | null;
		};
		"salesforce-account": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Login url */
			loginUrl: string;
			/** @description Name */
			name: string;
			/** @description Paid statuses */
			paidStatuses?: string[] | null;
			/** @description Password */
			password: string;
			/** @description Security token */
			securityToken?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Username */
			username: string;
		};
		"salesforce-account-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId?: number | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/** @description Login url */
			loginUrl: string;
			/** @description Name */
			name: string;
			/** @description Paid statuses */
			paidStatuses?: string[] | null;
			/** @description Password */
			password: string;
			/** @description Security token */
			securityToken?: string | null;
			/** @description Username */
			username: string;
		};
		"scheduled-task": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Duration
			 */
			duration?: number | null;
			/**
			 * Format: int32
			 * @description Foreign key
			 */
			foreignKey: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Message */
			message?: string | null;
			/** @description Script */
			script: string;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "success" | "error" | null;
			/** @description Table */
			table: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"scheduled-task-new": {
			/**
			 * Format: int32
			 * @description Duration
			 */
			duration?: number | null;
			/**
			 * Format: int32
			 * @description Foreign key
			 */
			foreignKey: number;
			/** @description Message */
			message?: string | null;
			/** @description Script */
			script: string;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "success" | "error" | null;
			/** @description Table */
			table: string;
		};
		"shipping-integration": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Label endpoint */
			labelEndpoint: string;
			/** @description Name */
			name?: string | null;
			/** @description Rate endpoint */
			rateEndpoint: string;
			/** @description Refund endpoint */
			refundEndpoint?: string | null;
			/** @description Tracking endpoint */
			trackingEndpoint?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-integration-new": {
			/** @description Label endpoint */
			labelEndpoint: string;
			/** @description Name */
			name?: string | null;
			/** @description Rate endpoint */
			rateEndpoint: string;
			/** @description Refund endpoint */
			refundEndpoint?: string | null;
			/** @description Tracking endpoint */
			trackingEndpoint?: string | null;
		};
		"shipping-rate": {
			/**
			 * @description Cache internal rates
			 * @default false
			 */
			cacheInternalRates: boolean | null;
			/** @description Code */
			code: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Custom carriers
			 * @enum {string|null}
			 */
			customCarriers?: "all" | "selected" | "none" | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Default weight
			 * @default 0
			 */
			defaultWeight: number | null;
			/**
			 * @description Dhl express service levels
			 * @default []
			 */
			dhlExpressServiceLevels: string[] | null;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/**
			 * @description Domestic band type
			 * @default price
			 * @enum {string|null}
			 */
			domesticBandType: "weight" | "price" | null;
			/**
			 * @description Enable discounted dhl express rates
			 * @default true
			 */
			enableDiscountedDhlExpressRates: boolean | null;
			/**
			 * @description Enable discounted parcelforce rates
			 * @default true
			 */
			enableDiscountedParcelforceRates: boolean | null;
			/**
			 * @description Enable discounted usps rates
			 * @default true
			 */
			enableDiscountedUspsRates: boolean | null;
			/** @description Free shipping override */
			freeShippingOverride?: boolean | null;
			/**
			 * @description Free shipping override scope
			 * @default value
			 * @enum {string|null}
			 */
			freeShippingOverrideScope: "value" | "tags" | null;
			/**
			 * @description Free shipping tags
			 * @default []
			 */
			freeShippingTags: string[] | null;
			/** @description Free shipping threshold */
			freeShippingThreshold?: number | null;
			/** @description Handling fee */
			handlingFee?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Integration filtering endpoint */
			integrationFilteringEndpoint?: string | null;
			/** @description Label */
			label?: string | null;
			/**
			 * Format: int32
			 * @description Max price
			 */
			maxPrice?: number | null;
			/**
			 * @description Max price unit
			 * @default fixed
			 * @enum {string|null}
			 */
			maxPriceUnit: "fixed" | "percentage" | null;
			/** @description Maximum order value */
			maximumOrderValue?: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description Parcel depth
			 * @default 0
			 */
			parcelDepth: number | null;
			/**
			 * @description Parcel height
			 * @default 0
			 */
			parcelHeight: number | null;
			/**
			 * @description Parcel width
			 * @default 0
			 */
			parcelWidth: number | null;
			/**
			 * @description Parcelforce service levels
			 * @default []
			 */
			parcelforceServiceLevels: string[] | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * @description Price type
			 * @default fixed
			 * @enum {string|null}
			 */
			priceType:
				| "carrier"
				| "fixed"
				| "fixed_per_item"
				| "weight"
				| "banded"
				| "banded_price"
				| "product_type"
				| "zones"
				| null;
			/** @description Provider */
			provider?: string | null;
			/** @description Provider code */
			providerCode?: string | null;
			/**
			 * Provider ID
			 * @description A system or internal ID of the provider.
			 */
			providerId?: string | null;
			/**
			 * Include the fallback rate in the response
			 * @description When / if to include the fallback rate within the list of alternative shipments.
			 * @default never
			 * @enum {string|null}
			 */
			pushFallbackRate: "always" | "noRates" | "never" | null;
			/**
			 * @description Rate preference
			 * @default cheapest
			 * @enum {string|null}
			 */
			ratePreference: "cheapest" | "best_value" | "fastest" | null;
			/**
			 * @description Rest of world band type
			 * @default price
			 * @enum {string|null}
			 */
			restOfWorldBandType: "weight" | "price" | null;
			/** @description Service filtering endpoint */
			serviceFilteringEndpoint?: string | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/** @description Signature required */
			signatureRequired?: boolean | null;
			/**
			 * @description Source
			 * @default Jetti
			 */
			source: string;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "archived" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Use fallback rate
			 * @default always
			 * @enum {string|null}
			 */
			useFallbackRate: "always" | "never" | null;
			/** @description Use integration filtering endpoint */
			useIntegrationFilteringEndpoint?: boolean | null;
			/**
			 * Filter service levels through an API Pipeline
			 * @description For advanced adjustment and filtering of rates, use the Service Levels API Pipeline to automatically handle the service levels generated through this shipping rate. For example, use a serverless function to automatically remove or refine return service levels based on your own advaned business logic.
			 */
			useServiceFilteringEndpoint?: boolean | null;
			/**
			 * @description Usps service levels
			 * @default []
			 */
			uspsServiceLevels: string[] | null;
			/**
			 * @description Weight multiplication
			 * @default per_item
			 * @enum {string|null}
			 */
			weightMultiplication: "per_shipment" | "per_item" | null;
		};
		"shipping-rate-new": {
			/**
			 * @description Cache internal rates
			 * @default false
			 */
			cacheInternalRates: boolean | null;
			/** @description Code */
			code: string;
			/**
			 * @description Custom carriers
			 * @enum {string|null}
			 */
			customCarriers?: "all" | "selected" | "none" | null;
			/**
			 * Format: int32
			 * @description Days
			 */
			days?: number | null;
			/**
			 * Format: int32
			 * @description Default weight
			 * @default 0
			 */
			defaultWeight: number | null;
			/**
			 * @description Dhl express service levels
			 * @default []
			 */
			dhlExpressServiceLevels: string[] | null;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/**
			 * @description Domestic band type
			 * @default price
			 * @enum {string|null}
			 */
			domesticBandType: "weight" | "price" | null;
			/**
			 * @description Enable discounted dhl express rates
			 * @default true
			 */
			enableDiscountedDhlExpressRates: boolean | null;
			/**
			 * @description Enable discounted parcelforce rates
			 * @default true
			 */
			enableDiscountedParcelforceRates: boolean | null;
			/**
			 * @description Enable discounted usps rates
			 * @default true
			 */
			enableDiscountedUspsRates: boolean | null;
			/** @description Free shipping override */
			freeShippingOverride?: boolean | null;
			/**
			 * @description Free shipping override scope
			 * @default value
			 * @enum {string|null}
			 */
			freeShippingOverrideScope: "value" | "tags" | null;
			/**
			 * @description Free shipping tags
			 * @default []
			 */
			freeShippingTags: string[] | null;
			/** @description Free shipping threshold */
			freeShippingThreshold?: number | null;
			/** @description Handling fee */
			handlingFee?: number | null;
			/** @description Integration filtering endpoint */
			integrationFilteringEndpoint?: string | null;
			/** @description Label */
			label?: string | null;
			/**
			 * Format: int32
			 * @description Max price
			 */
			maxPrice?: number | null;
			/**
			 * @description Max price unit
			 * @default fixed
			 * @enum {string|null}
			 */
			maxPriceUnit: "fixed" | "percentage" | null;
			/** @description Maximum order value */
			maximumOrderValue?: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description Parcel depth
			 * @default 0
			 */
			parcelDepth: number | null;
			/**
			 * @description Parcel height
			 * @default 0
			 */
			parcelHeight: number | null;
			/**
			 * @description Parcel width
			 * @default 0
			 */
			parcelWidth: number | null;
			/**
			 * @description Parcelforce service levels
			 * @default []
			 */
			parcelforceServiceLevels: string[] | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * @description Price type
			 * @default fixed
			 * @enum {string|null}
			 */
			priceType:
				| "carrier"
				| "fixed"
				| "fixed_per_item"
				| "weight"
				| "banded"
				| "banded_price"
				| "product_type"
				| "zones"
				| null;
			/** @description Provider */
			provider?: string | null;
			/** @description Provider code */
			providerCode?: string | null;
			/**
			 * Provider ID
			 * @description A system or internal ID of the provider.
			 */
			providerId?: string | null;
			/**
			 * Include the fallback rate in the response
			 * @description When / if to include the fallback rate within the list of alternative shipments.
			 * @default never
			 * @enum {string|null}
			 */
			pushFallbackRate: "always" | "noRates" | "never" | null;
			/**
			 * @description Rate preference
			 * @default cheapest
			 * @enum {string|null}
			 */
			ratePreference: "cheapest" | "best_value" | "fastest" | null;
			/**
			 * @description Rest of world band type
			 * @default price
			 * @enum {string|null}
			 */
			restOfWorldBandType: "weight" | "price" | null;
			/** @description Service filtering endpoint */
			serviceFilteringEndpoint?: string | null;
			/** @description Service level */
			serviceLevel?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/** @description Signature required */
			signatureRequired?: boolean | null;
			/**
			 * @description Source
			 * @default Jetti
			 */
			source: string;
			/**
			 * @description Status
			 * @default active
			 * @enum {string|null}
			 */
			status: "active" | "archived" | null;
			/**
			 * @description Use fallback rate
			 * @default always
			 * @enum {string|null}
			 */
			useFallbackRate: "always" | "never" | null;
			/** @description Use integration filtering endpoint */
			useIntegrationFilteringEndpoint?: boolean | null;
			/**
			 * Filter service levels through an API Pipeline
			 * @description For advanced adjustment and filtering of rates, use the Service Levels API Pipeline to automatically handle the service levels generated through this shipping rate. For example, use a serverless function to automatically remove or refine return service levels based on your own advaned business logic.
			 */
			useServiceFilteringEndpoint?: boolean | null;
			/**
			 * @description Usps service levels
			 * @default []
			 */
			uspsServiceLevels: string[] | null;
			/**
			 * @description Weight multiplication
			 * @default per_item
			 * @enum {string|null}
			 */
			weightMultiplication: "per_shipment" | "per_item" | null;
		};
		"shipping-rate-carrier": {
			/** @description Carrier type */
			carrierType?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Filter carrier
			 * @default true
			 */
			filterCarrier: boolean | null;
			/**
			 * @description Filter integrations
			 * @default all
			 * @enum {string|null}
			 */
			filterIntegrations: "all" | "selected" | null;
			/**
			 * @description Filter service levels
			 * @default all
			 * @enum {string|null}
			 */
			filterServiceLevels: "all" | "selected" | "exclude" | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Integrations */
			integrations?: string[] | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Platform
			 * @default manual
			 * @enum {string|null}
			 */
			platform: "shippo" | "postmen" | "manual" | null;
			/** @description Service levels */
			serviceLevels?: string[] | null;
			/**
			 * Format: int32
			 * @description Shipping integration
			 */
			shippingIntegrationId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * Format: int32
			 * @description Shipping rate zone
			 */
			shippingRateZoneId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-rate-carrier-new": {
			/** @description Carrier type */
			carrierType?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Filter carrier
			 * @default true
			 */
			filterCarrier: boolean | null;
			/**
			 * @description Filter integrations
			 * @default all
			 * @enum {string|null}
			 */
			filterIntegrations: "all" | "selected" | null;
			/**
			 * @description Filter service levels
			 * @default all
			 * @enum {string|null}
			 */
			filterServiceLevels: "all" | "selected" | "exclude" | null;
			/** @description Integrations */
			integrations?: string[] | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Platform
			 * @default manual
			 * @enum {string|null}
			 */
			platform: "shippo" | "postmen" | "manual" | null;
			/** @description Service levels */
			serviceLevels?: string[] | null;
			/**
			 * Format: int32
			 * @description Shipping integration
			 */
			shippingIntegrationId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * Format: int32
			 * @description Shipping rate zone
			 */
			shippingRateZoneId?: number | null;
		};
		"shipping-rate-mapping": {
			/** @description Channel service level */
			channelServiceLevel: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Provider
			 * @enum {string|null}
			 */
			provider?: "usps" | "fedex" | "ups" | null;
			/** @description Service level */
			serviceLevel: string;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-rate-mapping-new": {
			/** @description Channel service level */
			channelServiceLevel: string;
			/**
			 * @description Provider
			 * @enum {string|null}
			 */
			provider?: "usps" | "fedex" | "ups" | null;
			/** @description Service level */
			serviceLevel: string;
		};
		"shipping-rate-product-type": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * @description Shipping zone
			 * @default domestic
			 * @enum {string}
			 */
			shippingZone: "domestic" | "rest_of_world";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-rate-product-type-new": {
			/** @description Name */
			name: string;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * @description Shipping zone
			 * @default domestic
			 * @enum {string}
			 */
			shippingZone: "domestic" | "rest_of_world";
		};
		"shipping-rate-weight": {
			/** @description Code */
			code?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * @description Shipping zone
			 * @default domestic
			 * @enum {string}
			 */
			shippingZone: "domestic" | "rest_of_world";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-rate-weight-new": {
			/** @description Code */
			code?: string | null;
			/**
			 * @description Grams
			 * @default 0
			 */
			grams: number;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * @description Shipping zone
			 * @default domestic
			 * @enum {string}
			 */
			shippingZone: "domestic" | "rest_of_world";
		};
		"shipping-rate-zone": {
			/**
			 * @description Band type
			 * @default price
			 * @enum {string|null}
			 */
			bandType: "fixed" | "weight" | "price" | "carrier" | null;
			/**
			 * @description Countries
			 * @default []
			 */
			countries: string[] | null;
			/**
			 * @description Countries filter
			 * @default all
			 * @enum {string|null}
			 */
			countriesFilter:
				| "all"
				| "domestic"
				| "rest_of_world"
				| "exclude"
				| "include"
				| null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Custom carriers
			 * @default all
			 * @enum {string|null}
			 */
			customCarriers: "all" | "selected" | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Integration filtering endpoint */
			integrationFilteringEndpoint?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Service filtering endpoint */
			serviceFilteringEndpoint?: string | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * @description States
			 * @default []
			 */
			states: string[] | null;
			/**
			 * @description States filter
			 * @default all
			 * @enum {string|null}
			 */
			statesFilter: "all" | "exclude" | "include" | null;
			/**
			 * @description Tags
			 * @default []
			 */
			tags: string[] | null;
			/**
			 * @description Tags filter
			 * @default all
			 * @enum {string|null}
			 */
			tagsFilter: "all" | "exclude" | "include" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Use integration filtering endpoint */
			useIntegrationFilteringEndpoint?: boolean | null;
			/** @description Use service filtering endpoint */
			useServiceFilteringEndpoint?: boolean | null;
			/**
			 * @description Zips
			 * @default []
			 */
			zips: string[] | null;
			/**
			 * @description Zips filter
			 * @default all
			 * @enum {string|null}
			 */
			zipsFilter: "all" | "exclude" | "include" | "startsWith" | null;
		};
		"shipping-rate-zone-new": {
			/**
			 * @description Band type
			 * @default price
			 * @enum {string|null}
			 */
			bandType: "fixed" | "weight" | "price" | "carrier" | null;
			/**
			 * @description Countries
			 * @default []
			 */
			countries: string[] | null;
			/**
			 * @description Countries filter
			 * @default all
			 * @enum {string|null}
			 */
			countriesFilter:
				| "all"
				| "domestic"
				| "rest_of_world"
				| "exclude"
				| "include"
				| null;
			/**
			 * @description Custom carriers
			 * @default all
			 * @enum {string|null}
			 */
			customCarriers: "all" | "selected" | null;
			/** @description Integration filtering endpoint */
			integrationFilteringEndpoint?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Service filtering endpoint */
			serviceFilteringEndpoint?: string | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId: number;
			/**
			 * @description States
			 * @default []
			 */
			states: string[] | null;
			/**
			 * @description States filter
			 * @default all
			 * @enum {string|null}
			 */
			statesFilter: "all" | "exclude" | "include" | null;
			/**
			 * @description Tags
			 * @default []
			 */
			tags: string[] | null;
			/**
			 * @description Tags filter
			 * @default all
			 * @enum {string|null}
			 */
			tagsFilter: "all" | "exclude" | "include" | null;
			/** @description Use integration filtering endpoint */
			useIntegrationFilteringEndpoint?: boolean | null;
			/** @description Use service filtering endpoint */
			useServiceFilteringEndpoint?: boolean | null;
			/**
			 * @description Zips
			 * @default []
			 */
			zips: string[] | null;
			/**
			 * @description Zips filter
			 * @default all
			 * @enum {string|null}
			 */
			zipsFilter: "all" | "exclude" | "include" | "startsWith" | null;
		};
		"shipping-rate-zone-code": {
			/** @description Code */
			code?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Label */
			label?: string | null;
			/** @description Max limit */
			maxLimit?: boolean | null;
			/** @description Max limit value */
			maxLimitValue?: number | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/** @description Provider */
			provider?: string | null;
			/** @description Provider code */
			providerCode?: string | null;
			/** @description Provider */
			providerId?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/**
			 * Format: int32
			 * @description Shipping rate zone
			 */
			shippingRateZoneId: number;
			/** @description Signature required */
			signatureRequired?: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-rate-zone-code-new": {
			/** @description Code */
			code?: string | null;
			/** @description Label */
			label?: string | null;
			/** @description Max limit */
			maxLimit?: boolean | null;
			/** @description Max limit value */
			maxLimitValue?: number | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/** @description Provider */
			provider?: string | null;
			/** @description Provider code */
			providerCode?: string | null;
			/** @description Provider */
			providerId?: string | null;
			/** @description Service level terms */
			serviceLevelTerms?: string | null;
			/** @description Service level token */
			serviceLevelToken?: string | null;
			/**
			 * Format: int32
			 * @description Shipping rate zone
			 */
			shippingRateZoneId: number;
			/** @description Signature required */
			signatureRequired?: boolean | null;
		};
		"shipping-rate-zone-code-band": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate zone code
			 */
			shippingRateZoneCodeId: number;
			/**
			 * @description Threshold
			 * @default 0
			 */
			threshold: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shipping-rate-zone-code-band-new": {
			/**
			 * @description Price
			 * @default 0
			 */
			price: number;
			/**
			 * @description Price increase
			 * @default 0
			 */
			priceIncrease: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate zone code
			 */
			shippingRateZoneCodeId: number;
			/**
			 * @description Threshold
			 * @default 0
			 */
			threshold: number;
		};
		"shopify-store": {
			/** @description Access token */
			accessToken?: string | null;
			/** @description Api key */
			apiKey?: string | null;
			/**
			 * @description Authentication type
			 * @default public
			 * @enum {string|null}
			 */
			authenticationType: "public" | "private" | null;
			/** @description Backorder metafield */
			backorderMetafield?: boolean | null;
			/** @description Carrier service */
			carrierServiceId?: string | null;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * @description Closed
			 * @default false
			 */
			closed: boolean | null;
			/**
			 * Format: date-time
			 * @description Connected at
			 */
			connectedAt?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Delay order import
			 * @default false
			 */
			delayOrderImport: boolean | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * @description External fulfillment services
			 * @default []
			 */
			externalFulfillmentServices: string[] | null;
			/** @description Fetch recent products */
			fetchRecentProducts?: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Import draft orders from your store. These will need to be removed from Jetti once they are finalized and turned into full orders within Shopify.
			 * @default false
			 */
			importDraftOrders: boolean | null;
			/**
			 * @description Importing products
			 * @default false
			 */
			importingProducts: boolean;
			/**
			 * @description Importing sales
			 * @default false
			 */
			importingSales: boolean;
			/** @description Inventory feed location */
			inventoryFeedLocation?: string | null;
			/**
			 * @description Inventory feed location type
			 * @default default
			 * @enum {string|null}
			 */
			inventoryFeedLocationType: "default" | "selected" | null;
			/** @description Inventory feed metafield */
			inventoryFeedMetafield?: boolean | null;
			/**
			 * @description Inventory locations
			 * @default default
			 * @enum {string|null}
			 */
			inventoryLocations: "default" | "multiple" | null;
			/**
			 * @description Inventory migration
			 * @default true
			 */
			inventoryMigration: boolean | null;
			/**
			 * Format: date-time
			 * @description Last sales import
			 * @default null
			 */
			lastSalesImport: string | null;
			/** @description Location */
			locationId?: string | null;
			/** @description Name */
			name?: string | null;
			/**
			 * Format: int32
			 * @description Order import delay minutes
			 * @default 0
			 */
			orderImportDelayMinutes: number | null;
			/**
			 * @description Order metafields
			 * @default false
			 */
			orderMetafields: boolean | null;
			/** @description Order metafields key */
			orderMetafieldsKey?: string | null;
			/** @description Order metafields value */
			orderMetafieldsValue?: string | null;
			/** @description Password */
			password?: string | null;
			/**
			 * @description Send shipment notifications to your customers when items are marked as shipped in Jetti. This will use the template settings within your Shopify store.
			 * @default true
			 */
			sendShipmentNotifications: boolean;
			/**
			 * @description Setup complete
			 * @default false
			 */
			setupComplete: boolean;
			/** @description Shop */
			shop: string;
			/**
			 * @description Show days
			 * @default true
			 */
			showDays: boolean | null;
			/**
			 * @description Sso
			 * @default true
			 */
			sso: boolean | null;
			/**
			 * @description Throttle
			 * @default true
			 */
			throttle: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"shopify-store-new": {
			/** @description Access token */
			accessToken?: string | null;
			/** @description Api key */
			apiKey?: string | null;
			/**
			 * @description Authentication type
			 * @default public
			 * @enum {string|null}
			 */
			authenticationType: "public" | "private" | null;
			/** @description Backorder metafield */
			backorderMetafield?: boolean | null;
			/** @description Carrier service */
			carrierServiceId?: string | null;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * @description Closed
			 * @default false
			 */
			closed: boolean | null;
			/**
			 * Format: date-time
			 * @description Connected at
			 */
			connectedAt?: string | null;
			/**
			 * @description Delay order import
			 * @default false
			 */
			delayOrderImport: boolean | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * @description External fulfillment services
			 * @default []
			 */
			externalFulfillmentServices: string[] | null;
			/** @description Fetch recent products */
			fetchRecentProducts?: boolean | null;
			/**
			 * @description Import draft orders from your store. These will need to be removed from Jetti once they are finalized and turned into full orders within Shopify.
			 * @default false
			 */
			importDraftOrders: boolean | null;
			/**
			 * @description Importing products
			 * @default false
			 */
			importingProducts: boolean;
			/**
			 * @description Importing sales
			 * @default false
			 */
			importingSales: boolean;
			/** @description Inventory feed location */
			inventoryFeedLocation?: string | null;
			/**
			 * @description Inventory feed location type
			 * @default default
			 * @enum {string|null}
			 */
			inventoryFeedLocationType: "default" | "selected" | null;
			/** @description Inventory feed metafield */
			inventoryFeedMetafield?: boolean | null;
			/**
			 * @description Inventory locations
			 * @default default
			 * @enum {string|null}
			 */
			inventoryLocations: "default" | "multiple" | null;
			/**
			 * @description Inventory migration
			 * @default true
			 */
			inventoryMigration: boolean | null;
			/**
			 * Format: date-time
			 * @description Last sales import
			 * @default null
			 */
			lastSalesImport: string | null;
			/** @description Location */
			locationId?: string | null;
			/** @description Name */
			name?: string | null;
			/**
			 * Format: int32
			 * @description Order import delay minutes
			 * @default 0
			 */
			orderImportDelayMinutes: number | null;
			/**
			 * @description Order metafields
			 * @default false
			 */
			orderMetafields: boolean | null;
			/** @description Order metafields key */
			orderMetafieldsKey?: string | null;
			/** @description Order metafields value */
			orderMetafieldsValue?: string | null;
			/** @description Password */
			password?: string | null;
			/**
			 * @description Send shipment notifications to your customers when items are marked as shipped in Jetti. This will use the template settings within your Shopify store.
			 * @default true
			 */
			sendShipmentNotifications: boolean;
			/**
			 * @description Setup complete
			 * @default false
			 */
			setupComplete: boolean;
			/** @description Shop */
			shop: string;
			/**
			 * @description Show days
			 * @default true
			 */
			showDays: boolean | null;
			/**
			 * @description Sso
			 * @default true
			 */
			sso: boolean | null;
			/**
			 * @description Throttle
			 * @default true
			 */
			throttle: boolean | null;
		};
		"shopify-store-location": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Shopify location */
			shopifyLocationId?: string | null;
			/**
			 * Format: int32
			 * @description Shopify store
			 */
			shopifyStoreId?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
		};
		"shopify-store-location-new": {
			/** @description Shopify location */
			shopifyLocationId?: string | null;
			/**
			 * Format: int32
			 * @description Shopify store
			 */
			shopifyStoreId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
		};
		"square-space-store": {
			/** @description Access token */
			accessToken: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/** @description Shop */
			shop?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"square-space-store-new": {
			/** @description Access token */
			accessToken: string;
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Name */
			name: string;
			/** @description Shop */
			shop?: string | null;
		};
		"stock-take": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Notes */
			notes?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "pending" | "approved" | "cancelled" | "committing" | "committed";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"stock-take-new": {
			/** @description Notes */
			notes?: string | null;
			/** @description Reference */
			reference: string;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string}
			 */
			status: "pending" | "approved" | "cancelled" | "committing" | "committed";
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"stock-take-item": {
			/**
			 * Format: int32
			 * @description Actual
			 * @default 0
			 */
			actual: number;
			/**
			 * Format: int32
			 * @description Adjustment
			 */
			adjustmentId?: number | null;
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Expected
			 * @default 0
			 */
			expected: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Notes */
			notes?: string | null;
			/**
			 * Format: int32
			 * @description Stock take
			 */
			stockTakeId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		"stock-take-item-new": {
			/**
			 * Format: int32
			 * @description Actual
			 * @default 0
			 */
			actual: number;
			/**
			 * Format: int32
			 * @description Adjustment
			 */
			adjustmentId?: number | null;
			/**
			 * Format: int32
			 * @description Adjustment reason
			 */
			adjustmentReasonId?: number | null;
			/**
			 * Format: int32
			 * @description Expected
			 * @default 0
			 */
			expected: number;
			/** @description Notes */
			notes?: string | null;
			/**
			 * Format: int32
			 * @description Stock take
			 */
			stockTakeId: number;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
		};
		subscription: {
			/**
			 * Format: int32
			 * @description Charged
			 */
			charged?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Discount */
			discount?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Shopify charge */
			shopifyChargeId?: string | null;
			/**
			 * @description Source
			 * @enum {string|null}
			 */
			source?: "shopify" | "stripe" | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?:
				| "pending"
				| "active"
				| "error"
				| "lapsed"
				| "declined"
				| "cancelled"
				| null;
			/** @description Stripe subscription */
			stripeSubscriptionId?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"subscription-new": {
			/**
			 * Format: int32
			 * @description Charged
			 */
			charged?: number | null;
			/** @description Discount */
			discount?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Shopify charge */
			shopifyChargeId?: string | null;
			/**
			 * @description Source
			 * @enum {string|null}
			 */
			source?: "shopify" | "stripe" | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?:
				| "pending"
				| "active"
				| "error"
				| "lapsed"
				| "declined"
				| "cancelled"
				| null;
			/** @description Stripe subscription */
			stripeSubscriptionId?: string | null;
		};
		"subscription-charge": {
			/**
			 * Format: int32
			 * @description Charged
			 */
			charged?: number | null;
			/**
			 * Format: date-time
			 * @description Charged at
			 */
			chargedAt: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Subscription
			 */
			subscriptionId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"subscription-charge-new": {
			/**
			 * Format: int32
			 * @description Charged
			 */
			charged?: number | null;
			/**
			 * Format: date-time
			 * @description Charged at
			 */
			chargedAt: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Subscription
			 */
			subscriptionId: number;
		};
		"tax-rate": {
			/** @description City tax location */
			cityTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description City tax rate
			 */
			cityTaxRate?: number | null;
			/** @description County tax location */
			countyTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description County tax rate
			 */
			countyTaxRate?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description District tax location */
			districtTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description District tax rate
			 */
			districtTaxRate?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/** @description State tax location */
			stateTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description State tax rate
			 */
			stateTaxRate?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Xero */
			xeroId?: string | null;
		};
		"tax-rate-new": {
			/** @description City tax location */
			cityTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description City tax rate
			 */
			cityTaxRate?: number | null;
			/** @description County tax location */
			countyTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description County tax rate
			 */
			countyTaxRate?: number | null;
			/** @description District tax location */
			districtTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description District tax rate
			 */
			districtTaxRate?: number | null;
			/** @description Name */
			name: string;
			/** @description State tax location */
			stateTaxLocation?: string | null;
			/**
			 * Format: float
			 * @description State tax rate
			 */
			stateTaxRate?: number | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		template: {
			/** @description Content */
			content?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Default mapping
			 * @default custom
			 * @enum {string|null}
			 */
			defaultMapping: "custom" | "royalMail" | null;
			/**
			 * @description Delivery
			 * @default email
			 * @enum {string|null}
			 */
			delivery: "email" | "webhook" | null;
			/**
			 * @description Format
			 * @default csv
			 * @enum {string}
			 */
			format: "csv" | "json" | "html" | "xml" | "csv_mapping" | "json_mapping";
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * @description Resource
			 * @enum {string}
			 */
			resource:
				| "sales"
				| "purchases"
				| "variants"
				| "sale_items"
				| "purchase_items";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Visible
			 * @default true
			 */
			visible: boolean;
			/** @description Webhook endpoint */
			webhookEndpoint?: string | null;
			/** @description Xml date dormat */
			xmlDateDormat?: string | null;
		};
		"template-new": {
			/** @description Content */
			content?: string | null;
			/**
			 * @description Default mapping
			 * @default custom
			 * @enum {string|null}
			 */
			defaultMapping: "custom" | "royalMail" | null;
			/**
			 * @description Delivery
			 * @default email
			 * @enum {string|null}
			 */
			delivery: "email" | "webhook" | null;
			/**
			 * @description Format
			 * @default csv
			 * @enum {string}
			 */
			format: "csv" | "json" | "html" | "xml" | "csv_mapping" | "json_mapping";
			/** @description Name */
			name: string;
			/**
			 * @description Resource
			 * @enum {string}
			 */
			resource:
				| "sales"
				| "purchases"
				| "variants"
				| "sale_items"
				| "purchase_items";
			/**
			 * @description Visible
			 * @default true
			 */
			visible: boolean;
			/** @description Webhook endpoint */
			webhookEndpoint?: string | null;
			/** @description Xml date dormat */
			xmlDateDormat?: string | null;
		};
		"template-mapping": {
			/** @description Attribute */
			attribute?: string | null;
			/**
			 * @description Column type
			 * @enum {string|null}
			 */
			columnType?: "attribute" | "placeholder" | "orderFlag" | null;
			/**
			 * @description Country format
			 * @default alpha2
			 * @enum {string|null}
			 */
			countryFormat: "full" | "alpha2" | "alpha3" | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Date format */
			dateFormat?: string | null;
			/**
			 * Add the prefix to the reference
			 * @description Adds the prefix to the purchase references (e.g. #JET1001-01 instead of just 1001-01). This may be useful when you have multiple sales channels to avoid duplicate order references.
			 * @default false
			 */
			formatReference: boolean | null;
			/** @description Header */
			header: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Object
			 * @enum {string|null}
			 */
			object?:
				| "channel"
				| "company"
				| "currency"
				| "customer"
				| "dropship_provider"
				| "inventory_feed_variant"
				| "product"
				| "purchase_item"
				| "purchase_shipping_rate"
				| "purchase"
				| "sale_item"
				| "sale_shipping_rate"
				| "sale"
				| "tracking_event"
				| "transfer_refund"
				| "transfer"
				| "variant"
				| "vendor"
				| null;
			/** @description Order end */
			orderEnd?: string | null;
			/** @description Order middle */
			orderMiddle?: string | null;
			/** @description Order start */
			orderStart?: string | null;
			/** @description Placeholder */
			placeholder?: string | null;
			/**
			 * Format: int32
			 * @description Position
			 */
			position?: number | null;
			/** @description Property name */
			propertyName?: string | null;
			/**
			 * @description State format
			 * @enum {string|null}
			 */
			stateFormat?: "original" | "full" | "abbreviation" | null;
			/**
			 * Format: int32
			 * @description Template
			 */
			templateId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Weight unit
			 * @enum {string|null}
			 */
			weightUnit?: "g" | "kg" | "oz" | "lb" | null;
		};
		"template-mapping-new": {
			/** @description Attribute */
			attribute?: string | null;
			/**
			 * @description Column type
			 * @enum {string|null}
			 */
			columnType?: "attribute" | "placeholder" | "orderFlag" | null;
			/**
			 * @description Country format
			 * @default alpha2
			 * @enum {string|null}
			 */
			countryFormat: "full" | "alpha2" | "alpha3" | null;
			/** @description Date format */
			dateFormat?: string | null;
			/**
			 * Add the prefix to the reference
			 * @description Adds the prefix to the purchase references (e.g. #JET1001-01 instead of just 1001-01). This may be useful when you have multiple sales channels to avoid duplicate order references.
			 * @default false
			 */
			formatReference: boolean | null;
			/** @description Header */
			header: string;
			/**
			 * @description Object
			 * @enum {string|null}
			 */
			object?:
				| "channel"
				| "company"
				| "currency"
				| "customer"
				| "dropship_provider"
				| "inventory_feed_variant"
				| "product"
				| "purchase_item"
				| "purchase_shipping_rate"
				| "purchase"
				| "sale_item"
				| "sale_shipping_rate"
				| "sale"
				| "tracking_event"
				| "transfer_refund"
				| "transfer"
				| "variant"
				| "vendor"
				| null;
			/** @description Order end */
			orderEnd?: string | null;
			/** @description Order middle */
			orderMiddle?: string | null;
			/** @description Order start */
			orderStart?: string | null;
			/** @description Placeholder */
			placeholder?: string | null;
			/**
			 * Format: int32
			 * @description Position
			 */
			position?: number | null;
			/** @description Property name */
			propertyName?: string | null;
			/**
			 * @description State format
			 * @enum {string|null}
			 */
			stateFormat?: "original" | "full" | "abbreviation" | null;
			/**
			 * Format: int32
			 * @description Template
			 */
			templateId: number;
			/**
			 * @description Weight unit
			 * @enum {string|null}
			 */
			weightUnit?: "g" | "kg" | "oz" | "lb" | null;
		};
		"tracking-event": {
			/** @description Action required */
			actionRequired?: boolean | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description Details */
			details?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/** @description State */
			state?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?:
				| "pre_transit"
				| "transit"
				| "delivered"
				| "returned"
				| "failure"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Status at
			 */
			statusAt: string;
			/**
			 * @description Sub status
			 * @enum {string|null}
			 */
			subStatus?:
				| "information_received"
				| "address_issue"
				| "contact_carrier"
				| "delayed"
				| "delivery_attempted"
				| "delivery_rescheduled"
				| "delivery_scheduled"
				| "location_inaccessible"
				| "notice_left"
				| "out_for_delivery"
				| "package_accepted"
				| "package_arrived"
				| "package_damaged"
				| "package_departed"
				| "package_forwarded"
				| "package_held"
				| "package_processed"
				| "package_processing"
				| "pickup_available"
				| "reschedule_delivery"
				| "delivered"
				| "return_to_sender"
				| "package_unclaimed"
				| "package_undeliverable"
				| "package_disposed"
				| "package_lost"
				| "other"
				| null;
			/**
			 * Format: int32
			 * @description Transaction
			 */
			transactionId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zip */
			zip?: string | null;
		};
		"tracking-event-new": {
			/** @description Action required */
			actionRequired?: boolean | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/** @description Details */
			details?: string | null;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Purchase invoice
			 */
			purchaseInvoiceId?: number | null;
			/** @description State */
			state?: string | null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?:
				| "pre_transit"
				| "transit"
				| "delivered"
				| "returned"
				| "failure"
				| "unknown"
				| null;
			/**
			 * Format: date-time
			 * @description Status at
			 */
			statusAt: string;
			/**
			 * @description Sub status
			 * @enum {string|null}
			 */
			subStatus?:
				| "information_received"
				| "address_issue"
				| "contact_carrier"
				| "delayed"
				| "delivery_attempted"
				| "delivery_rescheduled"
				| "delivery_scheduled"
				| "location_inaccessible"
				| "notice_left"
				| "out_for_delivery"
				| "package_accepted"
				| "package_arrived"
				| "package_damaged"
				| "package_departed"
				| "package_forwarded"
				| "package_held"
				| "package_processed"
				| "package_processing"
				| "pickup_available"
				| "reschedule_delivery"
				| "delivered"
				| "return_to_sender"
				| "package_unclaimed"
				| "package_undeliverable"
				| "package_disposed"
				| "package_lost"
				| "other"
				| null;
			/**
			 * Format: int32
			 * @description Transaction
			 */
			transactionId: number;
			/** @description Zip */
			zip?: string | null;
		};
		transaction: {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/** @description Base amount */
			baseAmount?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Created source
			 * @default manual
			 * @enum {string|null}
			 */
			createdSource: "manual" | "catchup" | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/** @description External */
			externalId: string;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name: string;
			/**
			 * @description Processing fee
			 * @default 0
			 */
			processingFee: number | null;
			/**
			 * Format: date-time
			 * @description Purchased at
			 */
			purchasedAt?: string | null;
			/**
			 * @description Refund amount
			 * @default 0
			 */
			refundAmount: number;
			/**
			 * Format: int32
			 * @description Return shipment
			 */
			returnShipmentId?: number | null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping integration
			 */
			shippingIntegrationId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate cache
			 */
			shippingRateCacheId?: number | null;
			/**
			 * @description Source
			 * @default jetti
			 * @enum {string|null}
			 */
			source:
				| "jetti"
				| "shippo"
				| "shippyPro"
				| "shipStation"
				| "postmen"
				| "shippingIntegration"
				| null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status: "pending" | "complete" | "error" | "cancelled" | null;
			/** @description Stripe */
			stripeId?: string | null;
			/** @description Stripe refund */
			stripeRefundId?: string | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId?: number | null;
			/**
			 * @description Type
			 * @enum {string}
			 */
			type: "stripe" | "shippo" | "postmen" | "shippyPro" | "shipStation";
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"transaction-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/** @description Base amount */
			baseAmount?: number | null;
			/**
			 * @description Created source
			 * @default manual
			 * @enum {string|null}
			 */
			createdSource: "manual" | "catchup" | null;
			/**
			 * Format: int32
			 * @description Dropshipment
			 */
			dropshipmentId?: number | null;
			/** @description External */
			externalId: string;
			/**
			 * Format: int32
			 * @description Fulfillment
			 */
			fulfillmentId?: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description Processing fee
			 * @default 0
			 */
			processingFee: number | null;
			/**
			 * Format: date-time
			 * @description Purchased at
			 */
			purchasedAt?: string | null;
			/**
			 * @description Refund amount
			 * @default 0
			 */
			refundAmount: number;
			/**
			 * Format: int32
			 * @description Return shipment
			 */
			returnShipmentId?: number | null;
			/**
			 * Format: int32
			 * @description Sale return
			 */
			saleReturnId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping integration
			 */
			shippingIntegrationId?: number | null;
			/**
			 * Format: int32
			 * @description Shipping rate cache
			 */
			shippingRateCacheId?: number | null;
			/**
			 * @description Source
			 * @default jetti
			 * @enum {string|null}
			 */
			source:
				| "jetti"
				| "shippo"
				| "shippyPro"
				| "shipStation"
				| "postmen"
				| "shippingIntegration"
				| null;
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status: "pending" | "complete" | "error" | "cancelled" | null;
			/** @description Stripe */
			stripeId?: string | null;
			/** @description Stripe refund */
			stripeRefundId?: string | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId?: number | null;
			/**
			 * @description Type
			 * @enum {string}
			 */
			type: "stripe" | "shippo" | "postmen" | "shippyPro" | "shipStation";
		};
		"transaction-export": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: int32
			 * @description Transaction
			 */
			transactionId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"transaction-export-new": {
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: int32
			 * @description Transaction
			 */
			transactionId: number;
		};
		transfer: {
			/** @description Ach payment */
			achPayment?: boolean | null;
			/**
			 * @description Additional amount
			 * @default 0
			 */
			additionalAmount: number | null;
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Fee
			 * @default 0
			 */
			fee: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Managed account */
			managedAccount?: boolean | null;
			/** @description Message */
			message?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Problem */
			problem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Send attempts
			 * @default 0
			 */
			sendAttempts: number | null;
			/**
			 * @description Source
			 * @default other
			 * @enum {string}
			 */
			source:
				| "stripe"
				| "stripe_managed"
				| "paypal"
				| "bacs"
				| "check"
				| "other"
				| "ost"
				| "transferwise";
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status: "pending" | "complete" | "error" | "cancelled" | null;
			/**
			 * @description Stripe payout
			 * @default retailer
			 * @enum {string|null}
			 */
			stripePayout: "jetti" | "retailer" | null;
			/** @description Total */
			total?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Trigger
			 * @default other
			 * @enum {string|null}
			 */
			trigger: "automated" | "manual" | "other" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"transfer-new": {
			/** @description Ach payment */
			achPayment?: boolean | null;
			/**
			 * @description Additional amount
			 * @default 0
			 */
			additionalAmount: number | null;
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/** @description External */
			externalId?: string | null;
			/**
			 * @description Fee
			 * @default 0
			 */
			fee: number | null;
			/** @description Managed account */
			managedAccount?: boolean | null;
			/** @description Message */
			message?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Problem */
			problem?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Send attempts
			 * @default 0
			 */
			sendAttempts: number | null;
			/**
			 * @description Source
			 * @default other
			 * @enum {string}
			 */
			source:
				| "stripe"
				| "stripe_managed"
				| "paypal"
				| "bacs"
				| "check"
				| "other"
				| "ost"
				| "transferwise";
			/**
			 * @description Status
			 * @default pending
			 * @enum {string|null}
			 */
			status: "pending" | "complete" | "error" | "cancelled" | null;
			/**
			 * @description Stripe payout
			 * @default retailer
			 * @enum {string|null}
			 */
			stripePayout: "jetti" | "retailer" | null;
			/** @description Total */
			total?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Trigger
			 * @default other
			 * @enum {string|null}
			 */
			trigger: "automated" | "manual" | "other" | null;
		};
		"transfer-export": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"transfer-export-new": {
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "error" | "success" | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId: number;
		};
		"transfer-refund": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/** @description External */
			externalId?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
		};
		"transfer-refund-new": {
			/**
			 * @description Amount
			 * @default 0
			 */
			amount: number;
			/** @description External */
			externalId?: string | null;
			/** @description Name */
			name?: string | null;
			/**
			 * Format: int32
			 * @description Transfer
			 */
			transferId: number;
		};
		user: {
			/** @description Channel */
			channel?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Closed conversations
			 * @default 0
			 */
			closedConversations: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Credential cycles
			 * @default 0
			 */
			credentialCycles: number | null;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/** @description Drop description */
			dropDescription?: string | null;
			/**
			 * @description Drop reason
			 * @enum {string|null}
			 */
			dropReason?: "old" | "hardfail" | null;
			/**
			 * Format: date-time
			 * @description Dropped at
			 */
			droppedAt?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description Email */
			email: string;
			/**
			 * @description Email export
			 * @default true
			 */
			emailExport: boolean | null;
			/**
			 * @description Email set
			 * @default true
			 */
			emailSet: boolean | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/** @description First name */
			firstName?: string | null;
			/** @description Full name */
			fullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Has unviewed announcements
			 * @default false
			 */
			hasUnviewedAnnouncements: boolean | null;
			/** @description Hash */
			hash?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Initials */
			initials?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Invitation status
			 * @default notSent
			 * @enum {string|null}
			 */
			invitationStatus: "notSent" | "sent" | "accepted" | null;
			/** @description Invoicing notifications */
			invoicingNotifications?: boolean | null;
			/** @description Last name */
			lastName?: string | null;
			/**
			 * Format: int32
			 * @description Limit consumption
			 */
			limitConsumption?: number | null;
			/**
			 * Format: int32
			 * @description Open conversations
			 * @default 0
			 */
			openConversations: number | null;
			/**
			 * Format: int32
			 * @description Partner
			 */
			partnerId?: number | null;
			/** @description Password */
			password: string;
			/**
			 * @description Password set
			 * @default true
			 */
			passwordSet: boolean;
			/** @description Profile image */
			profileImage?: string | null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId?: number | null;
			/** @description Reset token */
			resetToken?: string | null;
			/**
			 * @description Role
			 * @default admin
			 * @enum {string|null}
			 */
			role:
				| "accounting"
				| "admin"
				| "api"
				| "manager"
				| "partner"
				| "shipping"
				| "vendor"
				| "customer"
				| "dropship_provider"
				| "reseller"
				| null;
			/**
			 * @description Shipping notifications
			 * @default true
			 */
			shippingNotifications: boolean | null;
			/**
			 * @description Throttle
			 * @default true
			 */
			throttle: boolean | null;
			/** @description Token */
			token?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId?: number | null;
		};
		"user-new": {
			/** @description Channel */
			channel?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Closed conversations
			 * @default 0
			 */
			closedConversations: number | null;
			/**
			 * Format: int32
			 * @description Credential cycles
			 * @default 0
			 */
			credentialCycles: number | null;
			/**
			 * Format: int32
			 * @description Customer
			 */
			customerId?: number | null;
			/** @description Drop description */
			dropDescription?: string | null;
			/**
			 * @description Drop reason
			 * @enum {string|null}
			 */
			dropReason?: "old" | "hardfail" | null;
			/**
			 * Format: date-time
			 * @description Dropped at
			 */
			droppedAt?: string | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/** @description Email */
			email: string;
			/**
			 * @description Email export
			 * @default true
			 */
			emailExport: boolean | null;
			/**
			 * @description Email set
			 * @default true
			 */
			emailSet: boolean | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/** @description First name */
			firstName?: string | null;
			/** @description Full name */
			fullName?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Has unviewed announcements
			 * @default false
			 */
			hasUnviewedAnnouncements: boolean | null;
			/** @description Hash */
			hash?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Initials */
			initials?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Invitation status
			 * @default notSent
			 * @enum {string|null}
			 */
			invitationStatus: "notSent" | "sent" | "accepted" | null;
			/** @description Invoicing notifications */
			invoicingNotifications?: boolean | null;
			/** @description Last name */
			lastName?: string | null;
			/**
			 * Format: int32
			 * @description Limit consumption
			 */
			limitConsumption?: number | null;
			/**
			 * Format: int32
			 * @description Open conversations
			 * @default 0
			 */
			openConversations: number | null;
			/**
			 * Format: int32
			 * @description Partner
			 */
			partnerId?: number | null;
			/** @description Password */
			password: string;
			/**
			 * @description Password set
			 * @default true
			 */
			passwordSet: boolean;
			/** @description Profile image */
			profileImage?: string | null;
			/**
			 * Format: int32
			 * @description Reseller
			 */
			resellerId?: number | null;
			/** @description Reset token */
			resetToken?: string | null;
			/**
			 * @description Role
			 * @default admin
			 * @enum {string|null}
			 */
			role:
				| "accounting"
				| "admin"
				| "api"
				| "manager"
				| "partner"
				| "shipping"
				| "vendor"
				| "customer"
				| "dropship_provider"
				| "reseller"
				| null;
			/**
			 * @description Shipping notifications
			 * @default true
			 */
			shippingNotifications: boolean | null;
			/**
			 * @description Throttle
			 * @default true
			 */
			throttle: boolean | null;
			/** @description Token */
			token?: string | null;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId?: number | null;
		};
		"user-setting": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Key */
			key: string;
			/**
			 * @description Scope
			 * @default ui
			 * @enum {string|null}
			 */
			scope: "ui" | "changelog" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId: number;
			/** @description Value */
			value:
				| Record<string, never>
				| unknown[]
				| boolean
				| number
				| number
				| string;
		};
		"user-setting-new": {
			/** @description Key */
			key: string;
			/**
			 * @description Scope
			 * @default ui
			 * @enum {string|null}
			 */
			scope: "ui" | "changelog" | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId: number;
			/** @description Value */
			value:
				| Record<string, never>
				| unknown[]
				| boolean
				| number
				| number
				| string;
		};
		variant: {
			/**
			 * Should this item be synced with your accounting integrations?
			 * @description You may want to omit some items from syncing with your accounting integrations, such as QuickBooks and Xero.
			 * @default active
			 * @enum {string|null}
			 */
			accountingSync: "active" | "disabled" | null;
			/**
			 * @description Automatically backorder
			 * @default vendor_default
			 * @enum {string|null}
			 */
			automaticallyBackorder: "vendor_default" | "backorder" | "ignore" | null;
			/**
			 * Format: int32
			 * @description Backorder quantity
			 * @default 0
			 */
			backorderQuantity: number | null;
			/** @description Barcode */
			barcode?: string | null;
			/**
			 * @description Commission rate
			 * @default 0
			 */
			commissionRate: number | null;
			/**
			 * @description Commission rate routing
			 * @default dropship_provider
			 * @enum {string|null}
			 */
			commissionRateRouting: "dropship_provider" | "variant" | null;
			/**
			 * @description Commission rate type
			 * @default percentage
			 * @enum {string|null}
			 */
			commissionRateType: "percentage" | "fixed" | null;
			/**
			 * @description Cost price
			 * @default 0
			 */
			costPrice: number;
			/** @description Country of origin */
			countryOfOrigin?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Default purchase quantity
			 * @default 1
			 */
			defaultPurchaseQuantity: number | null;
			/**
			 * Format: int32
			 * @description Deny threshold
			 * @default 0
			 */
			denyThreshold: number | null;
			/** @description Description */
			description?: string | null;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/**
			 * @description Dropship provider address mapping
			 * @default default
			 * @enum {string|null}
			 */
			dropshipProviderAddressMapping: "default" | "manual" | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Dropship provider mapping
			 * @default brand_name
			 * @enum {string|null}
			 */
			dropshipProviderMapping: "brand_name" | "manual" | null;
			/** @description Dynamic inventory policy */
			dynamicInventoryPolicy?: boolean | null;
			/**
			 * @description Fulfillment policy
			 * @default vendor_default
			 * @enum {string|null}
			 */
			fulfillmentPolicy:
				| "vendor_default"
				| "manual"
				| "dropship"
				| "fulfill"
				| "blended"
				| null;
			/**
			 * Format: float
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Hs code */
			hsCode?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Images
			 * @default []
			 */
			images:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Images mapped */
			imagesMapped?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Inventory allocated
			 * @default 0
			 */
			inventoryAllocated: number;
			/**
			 * Format: int32
			 * @description Inventory feeds
			 * @default 0
			 */
			inventoryFeeds: number | null;
			/**
			 * @description Inventory policy
			 * @default track
			 * @enum {string}
			 */
			inventoryPolicy: "ignore" | "deny" | "continue" | "dropship" | "track";
			/**
			 * Format: int32
			 * @description Inventory quantity
			 * @default 0
			 */
			inventoryQuantity: number;
			/**
			 * @description Inventory routing
			 * @default inventory_feed
			 * @enum {string|null}
			 */
			inventoryRouting: "inventory_feed" | "manual" | null;
			/**
			 * Syncing of inventory levels
			 * @description Select whether to sync inventory for this item. This may be useful if you want to omit specific SKUs from being stock managed in Jetti.
			 * @default channel
			 * @enum {string|null}
			 */
			inventorySync: "channel" | "disabled" | null;
			/**
			 * @description Inventory type
			 * @default tracked
			 * @enum {string}
			 */
			inventoryType: "tracked" | "serialized" | "bundle" | "service";
			/**
			 * Format: int32
			 * @description Lead time
			 */
			leadTime?: number | null;
			/** @description Levels */
			levels?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Low inventory quantity */
			lowInventoryQuantity?: boolean | null;
			/**
			 * Format: int32
			 * @description Min inventory quantity
			 * @default 0
			 */
			minInventoryQuantity: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description No inventory policy
			 * @default replenish
			 * @enum {string|null}
			 */
			noInventoryPolicy:
				| "vendor_default"
				| "manual"
				| "dropship"
				| "replenish"
				| null;
			/** @description Notes */
			notes?: string | null;
			/**
			 * @description Order splitting
			 * @default default
			 * @enum {string|null}
			 */
			orderSplitting: "group" | "splitQuantity" | "default" | null;
			/**
			 * Format: int32
			 * @description Packing depth
			 * @default 0
			 */
			packingDepth: number | null;
			/**
			 * Format: int32
			 * @description Packing height
			 * @default 0
			 */
			packingHeight: number | null;
			/**
			 * Format: int32
			 * @description Packing width
			 * @default 0
			 */
			packingWidth: number | null;
			/**
			 * Format: float
			 * @description Position
			 * @default 0
			 */
			position: number | null;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId: number;
			/** @description Product type */
			productType?: string | null;
			/** @description Requires shipping */
			requiresShipping?: boolean | null;
			/**
			 * @description Reseller visibility
			 * @default visible
			 * @enum {string|null}
			 */
			resellerVisibility: "visible" | "hidden" | "selected" | null;
			/** @description Serial prefix */
			serialPrefix?: string | null;
			/**
			 * Format: int32
			 * @description Serial reference
			 * @default 0
			 */
			serialReference: number | null;
			/** @description Serial suffix */
			serialSuffix?: string | null;
			/** @description Sku */
			sku: string;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Is the item taxable?
			 * @description Whether a tax is charged when the product variant is sold.
			 * @default true
			 */
			taxable: boolean;
			/**
			 * Format: int32
			 * @description Total purchase items
			 * @default 0
			 */
			totalPurchaseItems: number;
			/**
			 * Format: int32
			 * @description Total sale items
			 * @default 0
			 */
			totalSaleItems: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId?: number | null;
			/** @description Vendor sku */
			vendorSku?: string | null;
		};
		"variant-new": {
			/**
			 * Should this item be synced with your accounting integrations?
			 * @description You may want to omit some items from syncing with your accounting integrations, such as QuickBooks and Xero.
			 * @default active
			 * @enum {string|null}
			 */
			accountingSync: "active" | "disabled" | null;
			/**
			 * @description Automatically backorder
			 * @default vendor_default
			 * @enum {string|null}
			 */
			automaticallyBackorder: "vendor_default" | "backorder" | "ignore" | null;
			/**
			 * Format: int32
			 * @description Backorder quantity
			 * @default 0
			 */
			backorderQuantity: number | null;
			/** @description Barcode */
			barcode?: string | null;
			/**
			 * @description Commission rate
			 * @default 0
			 */
			commissionRate: number | null;
			/**
			 * @description Commission rate routing
			 * @default dropship_provider
			 * @enum {string|null}
			 */
			commissionRateRouting: "dropship_provider" | "variant" | null;
			/**
			 * @description Commission rate type
			 * @default percentage
			 * @enum {string|null}
			 */
			commissionRateType: "percentage" | "fixed" | null;
			/**
			 * @description Cost price
			 * @default 0
			 */
			costPrice: number;
			/** @description Country of origin */
			countryOfOrigin?: string | null;
			/**
			 * Format: int32
			 * @description Default purchase quantity
			 * @default 1
			 */
			defaultPurchaseQuantity: number | null;
			/**
			 * Format: int32
			 * @description Deny threshold
			 * @default 0
			 */
			denyThreshold: number | null;
			/** @description Description */
			description?: string | null;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/**
			 * Format: int32
			 * @description Dropship provider address
			 */
			dropshipProviderAddressId?: number | null;
			/**
			 * @description Dropship provider address mapping
			 * @default default
			 * @enum {string|null}
			 */
			dropshipProviderAddressMapping: "default" | "manual" | null;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId?: number | null;
			/**
			 * @description Dropship provider mapping
			 * @default brand_name
			 * @enum {string|null}
			 */
			dropshipProviderMapping: "brand_name" | "manual" | null;
			/** @description Dynamic inventory policy */
			dynamicInventoryPolicy?: boolean | null;
			/**
			 * @description Fulfillment policy
			 * @default vendor_default
			 * @enum {string|null}
			 */
			fulfillmentPolicy:
				| "vendor_default"
				| "manual"
				| "dropship"
				| "fulfill"
				| "blended"
				| null;
			/**
			 * Format: float
			 * @description Grams
			 * @default 0
			 */
			grams: number | null;
			/** @description Hs code */
			hsCode?: string | null;
			/**
			 * @description Images
			 * @default []
			 */
			images:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Images mapped */
			imagesMapped?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * Format: int32
			 * @description Inventory allocated
			 * @default 0
			 */
			inventoryAllocated: number;
			/**
			 * Format: int32
			 * @description Inventory feeds
			 * @default 0
			 */
			inventoryFeeds: number | null;
			/**
			 * @description Inventory policy
			 * @default track
			 * @enum {string}
			 */
			inventoryPolicy: "ignore" | "deny" | "continue" | "dropship" | "track";
			/**
			 * Format: int32
			 * @description Inventory quantity
			 * @default 0
			 */
			inventoryQuantity: number;
			/**
			 * @description Inventory routing
			 * @default inventory_feed
			 * @enum {string|null}
			 */
			inventoryRouting: "inventory_feed" | "manual" | null;
			/**
			 * Syncing of inventory levels
			 * @description Select whether to sync inventory for this item. This may be useful if you want to omit specific SKUs from being stock managed in Jetti.
			 * @default channel
			 * @enum {string|null}
			 */
			inventorySync: "channel" | "disabled" | null;
			/**
			 * @description Inventory type
			 * @default tracked
			 * @enum {string}
			 */
			inventoryType: "tracked" | "serialized" | "bundle" | "service";
			/**
			 * Format: int32
			 * @description Lead time
			 */
			leadTime?: number | null;
			/** @description Levels */
			levels?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Low inventory quantity */
			lowInventoryQuantity?: boolean | null;
			/**
			 * Format: int32
			 * @description Min inventory quantity
			 * @default 0
			 */
			minInventoryQuantity: number | null;
			/** @description Name */
			name: string;
			/**
			 * @description No inventory policy
			 * @default replenish
			 * @enum {string|null}
			 */
			noInventoryPolicy:
				| "vendor_default"
				| "manual"
				| "dropship"
				| "replenish"
				| null;
			/** @description Notes */
			notes?: string | null;
			/**
			 * @description Order splitting
			 * @default default
			 * @enum {string|null}
			 */
			orderSplitting: "group" | "splitQuantity" | "default" | null;
			/**
			 * Format: int32
			 * @description Packing depth
			 * @default 0
			 */
			packingDepth: number | null;
			/**
			 * Format: int32
			 * @description Packing height
			 * @default 0
			 */
			packingHeight: number | null;
			/**
			 * Format: int32
			 * @description Packing width
			 * @default 0
			 */
			packingWidth: number | null;
			/**
			 * Format: float
			 * @description Position
			 * @default 0
			 */
			position: number | null;
			/**
			 * Format: int32
			 * @description Product
			 */
			productId: number;
			/** @description Product type */
			productType?: string | null;
			/** @description Requires shipping */
			requiresShipping?: boolean | null;
			/**
			 * @description Reseller visibility
			 * @default visible
			 * @enum {string|null}
			 */
			resellerVisibility: "visible" | "hidden" | "selected" | null;
			/** @description Serial prefix */
			serialPrefix?: string | null;
			/**
			 * Format: int32
			 * @description Serial reference
			 * @default 0
			 */
			serialReference: number | null;
			/** @description Serial suffix */
			serialSuffix?: string | null;
			/** @description Sku */
			sku: string;
			/** @description Tags */
			tags?: string[] | null;
			/**
			 * Is the item taxable?
			 * @description Whether a tax is charged when the product variant is sold.
			 * @default true
			 */
			taxable: boolean;
			/**
			 * Format: int32
			 * @description Total purchase items
			 * @default 0
			 */
			totalPurchaseItems: number;
			/**
			 * Format: int32
			 * @description Total sale items
			 * @default 0
			 */
			totalSaleItems: number;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId?: number | null;
			/** @description Vendor sku */
			vendorSku?: string | null;
		};
		"variant-inventory-update": {
			/**
			 * @description Action resource
			 * @enum {string|null}
			 */
			actionResource?:
				| "adjustment"
				| "inventory_transfer_item"
				| "fulfillment_item"
				| "dropshipment_item"
				| "goods_receipt_item"
				| "inventory_feed_variant"
				| "sale_return_item"
				| "purchase_return_item"
				| "sale_item"
				| "purchase_item"
				| null;
			/**
			 * @description Action type
			 * @default manual
			 * @enum {string|null}
			 */
			actionType: "create" | "update" | "destroy" | "manual" | null;
			/**
			 * Format: int32
			 * @description Adjustment
			 */
			adjustmentId?: number | null;
			/**
			 * Format: int32
			 * @description Adjustments
			 */
			adjustments?: number | null;
			/**
			 * Format: int32
			 * @description Available
			 */
			available?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropshipment item
			 */
			dropshipmentItemId?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment items
			 */
			dropshipmentItems?: number | null;
			/**
			 * Format: int32
			 * @description Feeds
			 */
			feeds?: number | null;
			/**
			 * Format: int32
			 * @description Fulfillment item
			 */
			fulfillmentItemId?: number | null;
			/**
			 * Format: int32
			 * @description Goods receipt item
			 */
			goodsReceiptItemId?: number | null;
			/** @description Has feeds */
			hasFeeds?: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory allocated
			 */
			inventoryAllocated?: number | null;
			/**
			 * Format: int32
			 * @description Inventory feed variant
			 */
			inventoryFeedVariantId?: number | null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/**
			 * Format: int32
			 * @description Inventory transfer item
			 */
			inventoryTransferItemId?: number | null;
			/**
			 * @description Inventory trigger
			 * @enum {string|null}
			 */
			inventoryTrigger?: "automated" | "manual" | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase return item
			 */
			purchaseReturnItemId?: number | null;
			/**
			 * Format: int32
			 * @description Received
			 */
			received?: number | null;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/**
			 * Format: int32
			 * @description Sale return item
			 */
			saleReturnItemId?: number | null;
			/**
			 * Format: int32
			 * @description Shipped
			 */
			shipped?: number | null;
			/**
			 * Format: int32
			 * @description Sold
			 */
			sold?: number | null;
			/**
			 * Format: int32
			 * @description Total in
			 */
			totalIn?: number | null;
			/**
			 * Format: int32
			 * @description Total out
			 */
			totalOut?: number | null;
			/**
			 * Format: int32
			 * @description Transfers in
			 */
			transfersIn?: number | null;
			/**
			 * Format: int32
			 * @description Transfers out
			 */
			transfersOut?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"variant-inventory-update-new": {
			/**
			 * @description Action resource
			 * @enum {string|null}
			 */
			actionResource?:
				| "adjustment"
				| "inventory_transfer_item"
				| "fulfillment_item"
				| "dropshipment_item"
				| "goods_receipt_item"
				| "inventory_feed_variant"
				| "sale_return_item"
				| "purchase_return_item"
				| "sale_item"
				| "purchase_item"
				| null;
			/**
			 * @description Action type
			 * @default manual
			 * @enum {string|null}
			 */
			actionType: "create" | "update" | "destroy" | "manual" | null;
			/**
			 * Format: int32
			 * @description Adjustment
			 */
			adjustmentId?: number | null;
			/**
			 * Format: int32
			 * @description Adjustments
			 */
			adjustments?: number | null;
			/**
			 * Format: int32
			 * @description Available
			 */
			available?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment item
			 */
			dropshipmentItemId?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment items
			 */
			dropshipmentItems?: number | null;
			/**
			 * Format: int32
			 * @description Feeds
			 */
			feeds?: number | null;
			/**
			 * Format: int32
			 * @description Fulfillment item
			 */
			fulfillmentItemId?: number | null;
			/**
			 * Format: int32
			 * @description Goods receipt item
			 */
			goodsReceiptItemId?: number | null;
			/** @description Has feeds */
			hasFeeds?: boolean | null;
			/**
			 * Format: int32
			 * @description Inventory allocated
			 */
			inventoryAllocated?: number | null;
			/**
			 * Format: int32
			 * @description Inventory feed variant
			 */
			inventoryFeedVariantId?: number | null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/**
			 * Format: int32
			 * @description Inventory transfer item
			 */
			inventoryTransferItemId?: number | null;
			/**
			 * @description Inventory trigger
			 * @enum {string|null}
			 */
			inventoryTrigger?: "automated" | "manual" | null;
			/**
			 * Format: int32
			 * @description Purchase item
			 */
			purchaseItemId?: number | null;
			/**
			 * Format: int32
			 * @description Purchase return item
			 */
			purchaseReturnItemId?: number | null;
			/**
			 * Format: int32
			 * @description Received
			 */
			received?: number | null;
			/**
			 * Format: int32
			 * @description Sale item
			 */
			saleItemId?: number | null;
			/**
			 * Format: int32
			 * @description Sale return item
			 */
			saleReturnItemId?: number | null;
			/**
			 * Format: int32
			 * @description Shipped
			 */
			shipped?: number | null;
			/**
			 * Format: int32
			 * @description Sold
			 */
			sold?: number | null;
			/**
			 * Format: int32
			 * @description Total in
			 */
			totalIn?: number | null;
			/**
			 * Format: int32
			 * @description Total out
			 */
			totalOut?: number | null;
			/**
			 * Format: int32
			 * @description Transfers in
			 */
			transfersIn?: number | null;
			/**
			 * Format: int32
			 * @description Transfers out
			 */
			transfersOut?: number | null;
			/**
			 * Format: int32
			 * @description User
			 */
			userId?: number | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId?: number | null;
		};
		"variant-parcel": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Packing depth
			 * @default 2.4
			 */
			packingDepth: number | null;
			/**
			 * @description Packing height
			 * @default 13.3
			 */
			packingHeight: number | null;
			/**
			 * @description Packing width
			 * @default 11.5
			 */
			packingWidth: number | null;
			/**
			 * @description Source
			 * @default internal
			 * @enum {string|null}
			 */
			source: "import" | "internal" | null;
			/**
			 * @description Tags
			 * @default []
			 */
			tags: string[] | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/**
			 * Format: float
			 * @description Weight
			 * @default 0
			 */
			weight: number | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
		};
		"variant-parcel-new": {
			/**
			 * @description Distance unit
			 * @default in
			 * @enum {string|null}
			 */
			distanceUnit: "in" | "cm" | null;
			/**
			 * @description Packing depth
			 * @default 2.4
			 */
			packingDepth: number | null;
			/**
			 * @description Packing height
			 * @default 13.3
			 */
			packingHeight: number | null;
			/**
			 * @description Packing width
			 * @default 11.5
			 */
			packingWidth: number | null;
			/**
			 * @description Source
			 * @default internal
			 * @enum {string|null}
			 */
			source: "import" | "internal" | null;
			/**
			 * @description Tags
			 * @default []
			 */
			tags: string[] | null;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/**
			 * Format: float
			 * @description Weight
			 * @default 0
			 */
			weight: number | null;
			/**
			 * @description Weight unit
			 * @default g
			 * @enum {string|null}
			 */
			weightUnit: "g" | "kg" | "oz" | "lb" | null;
		};
		"variant-warehouse": {
			/** @description Bin location */
			binLocation?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 * @default 0
			 */
			inventoryQuantity: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"variant-warehouse-new": {
			/** @description Bin location */
			binLocation?: string | null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 * @default 0
			 */
			inventoryQuantity: number;
			/**
			 * Format: int32
			 * @description Variant
			 */
			variantId: number;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"variant-warehouse-update": {
			/**
			 * Format: int32
			 * @description Adjustments
			 */
			adjustments?: number | null;
			/**
			 * Format: int32
			 * @description Available
			 */
			available?: number | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropshipment items
			 */
			dropshipmentItems?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: int32
			 * @description Inventory allocated
			 */
			inventoryAllocated?: number | null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/**
			 * Format: int32
			 * @description Received
			 */
			received?: number | null;
			/**
			 * Format: int32
			 * @description Shipped
			 */
			shipped?: number | null;
			/**
			 * Format: int32
			 * @description Sold
			 */
			sold?: number | null;
			/**
			 * Format: int32
			 * @description Total in
			 */
			totalIn?: number | null;
			/**
			 * Format: int32
			 * @description Total out
			 */
			totalOut?: number | null;
			/**
			 * Format: int32
			 * @description Transfers in
			 */
			transfersIn?: number | null;
			/**
			 * Format: int32
			 * @description Transfers out
			 */
			transfersOut?: number | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Variant inventory update
			 */
			variantInventoryUpdateId: number;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		"variant-warehouse-update-new": {
			/**
			 * Format: int32
			 * @description Adjustments
			 */
			adjustments?: number | null;
			/**
			 * Format: int32
			 * @description Available
			 */
			available?: number | null;
			/**
			 * Format: int32
			 * @description Dropshipment items
			 */
			dropshipmentItems?: number | null;
			/**
			 * Format: int32
			 * @description Inventory allocated
			 */
			inventoryAllocated?: number | null;
			/**
			 * Format: int32
			 * @description Inventory quantity
			 */
			inventoryQuantity?: number | null;
			/**
			 * Format: int32
			 * @description Received
			 */
			received?: number | null;
			/**
			 * Format: int32
			 * @description Shipped
			 */
			shipped?: number | null;
			/**
			 * Format: int32
			 * @description Sold
			 */
			sold?: number | null;
			/**
			 * Format: int32
			 * @description Total in
			 */
			totalIn?: number | null;
			/**
			 * Format: int32
			 * @description Total out
			 */
			totalOut?: number | null;
			/**
			 * Format: int32
			 * @description Transfers in
			 */
			transfersIn?: number | null;
			/**
			 * Format: int32
			 * @description Transfers out
			 */
			transfersOut?: number | null;
			/**
			 * Format: int32
			 * @description Variant inventory update
			 */
			variantInventoryUpdateId: number;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId: number;
		};
		vendor: {
			/** @description Accounts email */
			accountsEmail?: string | null;
			/**
			 * @description Automatically backorder
			 * @default company_default
			 * @enum {string|null}
			 */
			automaticallyBackorder: "company_default" | "backorder" | "ignore" | null;
			/** @description Company code */
			companyCode?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Currency
			 */
			currencyId?: number | null;
			/**
			 * Format: int32
			 * @description Delivery days
			 * @default 0
			 */
			deliveryDays: number | null;
			/**
			 * @description Dropship processing
			 * @default dropship_provider
			 * @enum {string|null}
			 */
			dropshipProcessing: "direct" | "dropship_provider" | null;
			/** @description Email */
			email?: string | null;
			/** @description Fax */
			fax?: string | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * @description Fulfillment policy
			 * @default company_default
			 * @enum {string|null}
			 */
			fulfillmentPolicy:
				| "manual"
				| "dropship"
				| "fulfill"
				| "company_default"
				| "blended"
				| null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description No inventory policy
			 * @default manual
			 * @enum {string|null}
			 */
			noInventoryPolicy: "manual" | "dropship" | "replenish" | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Order email */
			orderEmail?: string | null;
			/**
			 * Format: int32
			 * @description Payment days
			 * @default 0
			 */
			paymentDays: number | null;
			/** @description Phone */
			phone?: string | null;
			/** @description Returns email */
			returnsEmail?: string | null;
			/**
			 * @description Source
			 * @default channel
			 * @enum {string|null}
			 */
			source:
				| "channel"
				| "manual"
				| "dropshipProvider"
				| "invenotryFeed"
				| null;
			/**
			 * @description Specify dropship providers
			 * @default true
			 */
			specifyDropshipProviders: boolean;
			/** @description Tax number */
			taxNumber?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
			/**
			 * @description Warehouse routing
			 * @default select
			 * @enum {string|null}
			 */
			warehouseRouting: "select" | "routed" | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"vendor-new": {
			/** @description Accounts email */
			accountsEmail?: string | null;
			/**
			 * @description Automatically backorder
			 * @default company_default
			 * @enum {string|null}
			 */
			automaticallyBackorder: "company_default" | "backorder" | "ignore" | null;
			/** @description Company code */
			companyCode?: string | null;
			/**
			 * Format: int32
			 * @description Currency
			 */
			currencyId?: number | null;
			/**
			 * Format: int32
			 * @description Delivery days
			 * @default 0
			 */
			deliveryDays: number | null;
			/**
			 * @description Dropship processing
			 * @default dropship_provider
			 * @enum {string|null}
			 */
			dropshipProcessing: "direct" | "dropship_provider" | null;
			/** @description Email */
			email?: string | null;
			/** @description Fax */
			fax?: string | null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * @description Fulfillment policy
			 * @default company_default
			 * @enum {string|null}
			 */
			fulfillmentPolicy:
				| "manual"
				| "dropship"
				| "fulfill"
				| "company_default"
				| "blended"
				| null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name: string;
			/**
			 * @description No inventory policy
			 * @default manual
			 * @enum {string|null}
			 */
			noInventoryPolicy: "manual" | "dropship" | "replenish" | null;
			/** @description Notes */
			notes?: string | null;
			/** @description Order email */
			orderEmail?: string | null;
			/**
			 * Format: int32
			 * @description Payment days
			 * @default 0
			 */
			paymentDays: number | null;
			/** @description Phone */
			phone?: string | null;
			/** @description Returns email */
			returnsEmail?: string | null;
			/**
			 * @description Source
			 * @default channel
			 * @enum {string|null}
			 */
			source:
				| "channel"
				| "manual"
				| "dropshipProvider"
				| "invenotryFeed"
				| null;
			/**
			 * @description Specify dropship providers
			 * @default true
			 */
			specifyDropshipProviders: boolean;
			/** @description Tax number */
			taxNumber?: string | null;
			/**
			 * Format: int32
			 * @description Warehouse
			 */
			warehouseId?: number | null;
			/**
			 * @description Warehouse routing
			 * @default select
			 * @enum {string|null}
			 */
			warehouseRouting: "select" | "routed" | null;
			/** @description Xero */
			xeroId?: string | null;
		};
		"vendor-address": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Name */
			name?: string | null;
			/** @description State */
			state?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId: number;
			/** @description Zip */
			zip?: string | null;
		};
		"vendor-address-new": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description City */
			city?: string | null;
			/** @description Country */
			country?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description State */
			state?: string | null;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId: number;
			/** @description Zip */
			zip?: string | null;
		};
		"vendor-dropship-provider": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId: number;
		};
		"vendor-dropship-provider-new": {
			/**
			 * Format: int32
			 * @description Dropship provider
			 */
			dropshipProviderId: number;
			/**
			 * Format: int32
			 * @description Vendor
			 */
			vendorId: number;
		};
		warehouse: {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description Billing address line one */
			billingAddressLineOne?: string | null;
			/** @description Billing address line two */
			billingAddressLineTwo?: string | null;
			/** @description Billing city */
			billingCity?: string | null;
			/** @description Billing country */
			billingCountry?: string | null;
			/** @description Billing first name */
			billingFirstName?: string | null;
			/** @description Billing last name */
			billingLastName?: string | null;
			/** @description Billing name */
			billingName?: string | null;
			/** @description Billing state */
			billingState?: string | null;
			/** @description Billing zip */
			billingZip?: string | null;
			/** @description City */
			city?: string | null;
			/**
			 * @description Countries
			 * @default []
			 */
			countries: string[] | null;
			/**
			 * @description Countries filter
			 * @default all
			 * @enum {string|null}
			 */
			countriesFilter:
				| "all"
				| "domestic"
				| "rest_of_world"
				| "exclude"
				| "include"
				| null;
			/** @description Country */
			country?: string | null;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * @description Default return status
			 * @default received
			 * @enum {string|null}
			 */
			defaultReturnStatus:
				| "draft"
				| "requested"
				| "finalized"
				| "shipped"
				| "received"
				| null;
			/** @description First name */
			firstName?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Include label in packing slip */
			includeLabelInPackingSlip?: boolean | null;
			/**
			 * @description Label format
			 * @default png
			 * @enum {string|null}
			 */
			labelFormat: "png" | "pdf" | "pdf_4x6" | "pdf_4x8" | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Pdf legal */
			pdfLegal?: string | null;
			/** @description Set invoice addresss */
			setInvoiceAddresss?: boolean | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/**
			 * @description Skip online inventory
			 * @default false
			 */
			skipOnlineInventory: boolean;
			/** @description State */
			state?: string | null;
			/**
			 * @description States
			 * @default []
			 */
			states: string[] | null;
			/**
			 * @description States filter
			 * @default all
			 * @enum {string|null}
			 */
			statesFilter: "all" | "exclude" | "include" | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Zip */
			zip?: string | null;
			/**
			 * @description Zips
			 * @default []
			 */
			zips: string[] | null;
			/**
			 * @description Zips filter
			 * @default all
			 * @enum {string|null}
			 */
			zipsFilter: "all" | "exclude" | "include" | "startsWith" | null;
		};
		"warehouse-new": {
			/** @description Address line one */
			addressLineOne?: string | null;
			/** @description Address line two */
			addressLineTwo?: string | null;
			/** @description Billing address line one */
			billingAddressLineOne?: string | null;
			/** @description Billing address line two */
			billingAddressLineTwo?: string | null;
			/** @description Billing city */
			billingCity?: string | null;
			/** @description Billing country */
			billingCountry?: string | null;
			/** @description Billing first name */
			billingFirstName?: string | null;
			/** @description Billing last name */
			billingLastName?: string | null;
			/** @description Billing name */
			billingName?: string | null;
			/** @description Billing state */
			billingState?: string | null;
			/** @description Billing zip */
			billingZip?: string | null;
			/** @description City */
			city?: string | null;
			/**
			 * @description Countries
			 * @default []
			 */
			countries: string[] | null;
			/**
			 * @description Countries filter
			 * @default all
			 * @enum {string|null}
			 */
			countriesFilter:
				| "all"
				| "domestic"
				| "rest_of_world"
				| "exclude"
				| "include"
				| null;
			/** @description Country */
			country?: string | null;
			/**
			 * @description Default return status
			 * @default received
			 * @enum {string|null}
			 */
			defaultReturnStatus:
				| "draft"
				| "requested"
				| "finalized"
				| "shipped"
				| "received"
				| null;
			/** @description First name */
			firstName?: string | null;
			/** @description Include label in packing slip */
			includeLabelInPackingSlip?: boolean | null;
			/**
			 * @description Label format
			 * @default png
			 * @enum {string|null}
			 */
			labelFormat: "png" | "pdf" | "pdf_4x6" | "pdf_4x8" | null;
			/** @description Last name */
			lastName?: string | null;
			/** @description Name */
			name?: string | null;
			/** @description Pdf legal */
			pdfLegal?: string | null;
			/** @description Set invoice addresss */
			setInvoiceAddresss?: boolean | null;
			/**
			 * Format: int32
			 * @description Shipping rate
			 */
			shippingRateId?: number | null;
			/**
			 * @description Skip online inventory
			 * @default false
			 */
			skipOnlineInventory: boolean;
			/** @description State */
			state?: string | null;
			/**
			 * @description States
			 * @default []
			 */
			states: string[] | null;
			/**
			 * @description States filter
			 * @default all
			 * @enum {string|null}
			 */
			statesFilter: "all" | "exclude" | "include" | null;
			/** @description Zip */
			zip?: string | null;
			/**
			 * @description Zips
			 * @default []
			 */
			zips: string[] | null;
			/**
			 * @description Zips filter
			 * @default all
			 * @enum {string|null}
			 */
			zipsFilter: "all" | "exclude" | "include" | "startsWith" | null;
		};
		webhook: {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Error
			 * @default 0
			 */
			error: number | null;
			/** @description Hash */
			hash?: string | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Instance method */
			instanceMethod?: string | null;
			/**
			 * @description Instance method trigger
			 * @default after
			 * @enum {string|null}
			 */
			instanceMethodTrigger: "before" | "after" | null;
			/** @description Location */
			location: string;
			/** @description Resource */
			resource: string;
			/**
			 * Format: int32
			 * @description Success
			 * @default 0
			 */
			success: number | null;
			/** @description Update instance */
			updateInstance?: boolean | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * @description Webhook type
			 * @default save
			 * @enum {string|null}
			 */
			webhookType: "save" | "instanceMethod" | null;
		};
		"webhook-new": {
			/**
			 * Format: int32
			 * @description Error
			 * @default 0
			 */
			error: number | null;
			/** @description Hash */
			hash?: string | null;
			/** @description Instance method */
			instanceMethod?: string | null;
			/**
			 * @description Instance method trigger
			 * @default after
			 * @enum {string|null}
			 */
			instanceMethodTrigger: "before" | "after" | null;
			/** @description Location */
			location: string;
			/** @description Resource */
			resource: string;
			/**
			 * Format: int32
			 * @description Success
			 * @default 0
			 */
			success: number | null;
			/** @description Update instance */
			updateInstance?: boolean | null;
			/**
			 * @description Webhook type
			 * @default save
			 * @enum {string|null}
			 */
			webhookType: "save" | "instanceMethod" | null;
		};
		"webhook-payload": {
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Format: int32
			 * @description Duration
			 */
			duration?: number | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "success" | "error" | null;
			/** @description Trigger */
			trigger?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/**
			 * Format: int32
			 * @description Webhook
			 */
			webhookId: number;
		};
		"webhook-payload-new": {
			/**
			 * Format: int32
			 * @description Duration
			 */
			duration?: number | null;
			/** @description Payload */
			payload?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/** @description Response */
			response?:
				| (
						| Record<string, never>
						| unknown[]
						| boolean
						| number
						| number
						| string
				  )
				| null;
			/**
			 * @description Status
			 * @enum {string|null}
			 */
			status?: "success" | "error" | null;
			/** @description Trigger */
			trigger?: string | null;
			/**
			 * Format: int32
			 * @description Webhook
			 */
			webhookId: number;
		};
		"woo-commerce-store": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Consumer key */
			consumerKey: string;
			/** @description Consumer secret */
			consumerSecret: string;
			/**
			 * Format: date-time
			 * @description Created at
			 */
			createdAt?: string;
			/**
			 * Send tracking details to customers
			 * @description Jetti will automatically sync a note to the WooCommerce store as shipments are created. This note wil be visible to admins. However, you can also send the note to the customer. The email will be sent by WooCommerce, not Jetti.
			 * @default false
			 */
			customerNote: boolean | null;
			/** @description Customer note content */
			customerNoteContent?: string | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * Format: int32
			 * @description Id
			 */
			id?: number;
			/**
			 * @description Import draft products
			 * @default true
			 */
			importDraftProducts: boolean | null;
			/** @description Importing products */
			importingProducts?: boolean | null;
			/**
			 * Format: date-time
			 * @description Last fetched products at
			 */
			lastFetchedProductsAt?: string | null;
			/**
			 * Format: date-time
			 * @description Last fetched sales at
			 */
			lastFetchedSalesAt?: string | null;
			/**
			 * @description Legacy
			 * @default false
			 */
			legacy: boolean | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Partial shipment status
			 * @default completed
			 * @enum {string|null}
			 */
			partialShipmentStatus: "processing" | "completed" | null;
			/** @description Shop */
			shop: string;
			/** @description Suffix */
			suffix?: string | null;
			/**
			 * Format: date-time
			 * @description Updated at
			 */
			updatedAt?: string;
			/** @description Vendor field */
			vendorField?: string | null;
			/**
			 * @description Vendor mapping
			 * @default attribute
			 * @enum {string|null}
			 */
			vendorMapping: "attribute" | "custom" | null;
		};
		"woo-commerce-store-new": {
			/**
			 * Format: int32
			 * @description Channel
			 */
			channelId: number;
			/** @description Consumer key */
			consumerKey: string;
			/** @description Consumer secret */
			consumerSecret: string;
			/**
			 * Send tracking details to customers
			 * @description Jetti will automatically sync a note to the WooCommerce store as shipments are created. This note wil be visible to admins. However, you can also send the note to the customer. The email will be sent by WooCommerce, not Jetti.
			 * @default false
			 */
			customerNote: boolean | null;
			/** @description Customer note content */
			customerNoteContent?: string | null;
			/**
			 * @description Enabled
			 * @default true
			 */
			enabled: boolean | null;
			/**
			 * @description Import draft products
			 * @default true
			 */
			importDraftProducts: boolean | null;
			/** @description Importing products */
			importingProducts?: boolean | null;
			/**
			 * Format: date-time
			 * @description Last fetched products at
			 */
			lastFetchedProductsAt?: string | null;
			/**
			 * Format: date-time
			 * @description Last fetched sales at
			 */
			lastFetchedSalesAt?: string | null;
			/**
			 * @description Legacy
			 * @default false
			 */
			legacy: boolean | null;
			/** @description Name */
			name?: string | null;
			/**
			 * @description Partial shipment status
			 * @default completed
			 * @enum {string|null}
			 */
			partialShipmentStatus: "processing" | "completed" | null;
			/** @description Shop */
			shop: string;
			/** @description Suffix */
			suffix?: string | null;
			/** @description Vendor field */
			vendorField?: string | null;
			/**
			 * @description Vendor mapping
			 * @default attribute
			 * @enum {string|null}
			 */
			vendorMapping: "attribute" | "custom" | null;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
